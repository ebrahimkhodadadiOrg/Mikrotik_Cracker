<?xml version="1.0"?>
<doc>
    <assembly>
        <name>tik4net.objects</name>
    </assembly>
    <members>
        <member name="T:tik4net.Objects.CapsMan.CapsManRegistrationTable">
            <summary>
            /caps-man/registration-table: In the registration table you can see various information about currently connected clients. It is used only for Controlled Access Points. All properties are read-only.
            </summary>
        </member>
        <member name="P:tik4net.Objects.CapsMan.CapsManRegistrationTable.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.CapsMan.CapsManRegistrationTable.MACAddress">
            <summary>
            mac-address: MAC address of the registered client
            </summary>
        </member>
        <member name="P:tik4net.Objects.CapsMan.CapsManRegistrationTable.Interface">
            <summary>
            interface: Name of the wireless interface to which wireless client is associated
            </summary>
        </member>
        <member name="P:tik4net.Objects.CapsMan.CapsManRegistrationTable.Uptime">
            <summary>
            uptime: time the client is associated with the access point
            </summary>
        </member>
        <member name="P:tik4net.Objects.CapsMan.CapsManRegistrationTable.SSID">
            <summary>
            ssid: SSID (service set identifier) is a name that identifies wireless network.
            </summary>
        </member>
        <member name="P:tik4net.Objects.CapsMan.CapsManRegistrationTable.TxRate">
            <summary>
            tx-rate: transmit data rate
            </summary>
        </member>
        <member name="P:tik4net.Objects.CapsMan.CapsManRegistrationTable.TxRateSet">
            <summary>
            tx-rate-set: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.CapsMan.CapsManRegistrationTable.RxRate">
            <summary>
            rx-rate: receive data rate
            </summary>
        </member>
        <member name="P:tik4net.Objects.CapsMan.CapsManRegistrationTable.Signal">
            <summary>
            signal-strength: average strength of the client signal recevied by the AP
            </summary>
        </member>
        <member name="P:tik4net.Objects.CapsMan.CapsManRegistrationTable.Packets">
            <summary>
            packets: number of sent and received network layer packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.CapsMan.CapsManRegistrationTable.Bytes">
            <summary>
            bytes: number of sent and received packet bytes
            </summary>
        </member>
        <member name="P:tik4net.Objects.CapsMan.CapsManRegistrationTable.Comment">
            <summary>
            comment: Description of an entry. comment is taken from appropriate Access List entry if specified.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Bridge.BridgeFilter">
            <summary>
            The bridge firewall implements packet filtering and thereby provides security functions that are used to manage data flow to, from and through bridge.
            
            Packet flow diagram shows how packets are processed through router. It is possible to force bridge traffic to go through /ip firewall filter rules (see: Bridge Settings)
            
            There are two bridge firewall tables:
            
            filter - bridge firewall with three predefined chains:
            input - filters packets, where the destination is the bridge (including those packets that will be routed, as they are destined to the bridge MAC address anyway)
            output - filters packets, which come from the bridge (including those packets that has been routed normally)
            forward - filters packets, which are to be bridged (note: this chain is not applied to the packets that should be routed through the router, just to those that are traversing between the ports of the same bridge)
            nat - bridge network address translation provides ways for changing source/destination MAC addresses of the packets traversing a bridge. Has two built-in chains:
            srcnat - used for "hiding" a host or a network behind a different MAC address. This chain is applied to the packets leaving the router through a bridged interface
            dstnat - used for redirecting some packets to other destinations
            You can put packet marks in bridge firewall (filter and NAT), which are the same as the packet marks in IP firewall put by '/ip firewall mangle'. In this way, packet marks put by bridge firewall can be used in 'IP firewall', and vice versa.
            
            General bridge firewall properties are described in this section. Some parameters that differ between nat and filter rules are described in further sections.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Bridge.BridgeFilter.ActionType">
            <summary>
            Firewall filter action type - <see cref="P:tik4net.Objects.Interface.Bridge.BridgeFilter.Action"/>
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeFilter.ActionType.Accept">
            <summary>
            accept the packet. Packet is not passed to next firewall rule.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeFilter.ActionType.Drop">
            <summary>
            drop - silently drop the packet
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeFilter.ActionType.Jump">
            <summary>
            jump - jump to the user defined chain specified by the value of jump-target parameter
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeFilter.ActionType.Log">
            <summary>
            log - add a message to the system log containing following data: in-interface, out-interface, src-mac, protocol, src-ip:port->dst-ip:port and length of the packet.After packet is matched it is passed to next rule in the list, similar as passthrough
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeFilter.ActionType.MarkPacket">
            <summary>
            place a mark specified by the new-packet-mark parameter on a packet that matches the rule
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeFilter.ActionType.Passthrough">
            <summary>
            passthrough - ignore this rule and go to next one (useful for statistics).
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeFilter.ActionType.Return">
            <summary>
            return - passes control back to the chain from where the jump took place
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeFilter.ActionType.SetPriority">
            <summary>
            set-priority - set priority specified by the new-priority parameter on the packets sent out through a link that is capable of transporting priority (VLAN or WMM-enabled wireless interface). 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFilter.Action">
            <summary>
            action: Action to take if packet is matched by the rule: 
            accept - accept the packet.Packet is not passed to next firewall rule.
            drop - silently drop the packet
            jump - jump to the user defined chain specified by the value of jump-target parameter
            log - add a message to the system log containing following data: in-interface, out-interface, src-mac, protocol, src-ip:port-&gt;dst-ip:port and length of the packet.After packet is matched it is passed to next rule in the list, similar as passthrough
            passthrough - ignore this rule and go to next one (useful for statistics).
            return  - passes control back to the chain from where the jump took place
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFilter.JumpTarget">
            <summary>
            jump-target: If action=jump specified, then specifies the user-defined firewall chain to process the packet
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFilter.LogPrefix">
            <summary>
            log-prefix: Defines the prefix to be printed before the logging information
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFilter.NewPacketMark">
            <summary>
            new-packet-mark
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFilter.NewPriority">
            <summary>
            new-priorityne
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFilter.Passthrough">
            <summary>
            passthrough
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Bridge.BridgeFirewallBase">
            <summary>
            Base class for <seealso cref="T:tik4net.Objects.Interface.Bridge.BridgeFilter"/> and <seealso cref="T:tik4net.Objects.Interface.Bridge.BridgeNat"/> with common fields.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.Chain">
            <summary>
            chain: Bridge firewall chain, which the filter is functioning in (either a built-in one, or a user defined)
            </summary>
            <seealso cref="T:tik4net.Objects.Interface.Bridge.BridgeFirewallChainType"/>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.InBridge">
            <summary>
            in-bridge: Bridge interface through which the packet is coming in
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.InInterface">
            <summary>
            in-interface: Physical interface (i.e., bridge port) through which the packet is coming in
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.OutBridge">
            <summary>
            out-bridge: Outgoing bridge interface
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.OutInterface">
            <summary>
            out-interface: Interface that the packet is leaving the bridge through
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.SrcMacAddress">
            <summary>
            src-mac-address: Source MAC address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.DstMacAddress">
            <summary>
            dst-mac-address: Destination MAC address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.MacProtocol">
            <summary>
            mac-protocol
            Ethernet payload type (MAC-level protocol)
            802.2
            arp - Type 0x0806 - ARP
            ip - Type 0x0800 - IPv4
            ipv6 - Type 0x86dd - IPv6
            ipx - Type 0x8137 - "Internetwork Packet Exchange"
            length
            mpls-multicast - Type 0x8848 - MPLS Multicast
            mpls-unicast - Type 0x8847 - MPLS Unicast
            ppoe - Type 0x8864 - PPPoE Session
            ppoe-discovery - Type 0x8863 - PPPoE Discovery
            rarp - Type 0x8035 - Reverse ARP
            vlan - Type 0x8100 - 802.1Q tagged VLAN
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.SrcAddress">
            <summary>
            src-address: Source IP address (only if MAC protocol is set to IPv4)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.SrcPort">
            <summary>
            src-port: Source port number or range (only for TCP or UDP protocols)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.DstAddress">
            <summary>
            dst-address: Destination IP address (only if MAC protocol is set to IPv4)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.DstPort">
            <summary>
            dst-port: Destination port number or range (only for TCP or UDP protocols)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.IpProtocol">
            <summary>
            ip-protocol
            
            IP protocol (only if MAC protocol is set to IPv4)
            
            ddp - datagram delivery protocol
            egp - exterior gateway protocol
            encap - ip encapsulation
            etherip - 
            ggp - gateway-gateway protocol
            gre - general routing encapsulation
            hmp - host monitoring protocol
            icmp - IPv4 internet control message protocol
            icmpv6 - IPv6 internet control message protocol
            idpr-cmtp - idpr control message transport
            igmp - internet group management protocol
            ipencap - ip encapsulated in ip
            ipip - ip encapsulation
            ipsec-ah - IPsec AH protocol
            ipsec-esp - IPsec ESP protocol
            ipv6 - 
            ipv6-frag - 
            ipv6-nonxt - 
            ipv6-opts - 
            ipv6-route - 
            iso-tp4 - iso transport protocol class 4 
            l2tp - 
            ospf - open shortest path first
            pim - protocol independent multicast 
            pup - parc universal packet protocol 
            rspf - radio shortest path first
            rsvp - 
            rdp - reliable datagram protocol
            st - st datagram mode
            tcp - transmission control protocol
            udp - user datagram protocol
            vmtp - versatile message transport
            vrrp - Virtual Router Redundancy Protocol
            xns-idp - xerox ns idp
            xtp – xpress transfer protocol
                
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.PacketMark">
            <summary>
            packet-mark: Matches packets marked via mangle facility with particular packet mark. If no-mark is set, rule will match any unmarked packet.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.IngressPriority">
            <summary>
            ingress-priority: Matches ingress priority of the packet. Priority may be derived from VLAN, WMM or MPLS EXP bit.  read more»
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.Comment">
            <summary>
            comment
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Bridge.BridgeFirewallChainType">
            <summary>
            Firewall chain type - <see cref="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.Chain"/>
            </summary>
            <seealso cref="P:tik4net.Objects.Interface.Bridge.BridgeFirewallBase.Chain"/>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeFirewallChainType.Input">
            <summary>
            input - used to process packets entering the router through one of the interfaces with the destination IP address which is one of the router's addresses. Packets passing through the router are not processed against the rules of the input chain
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeFirewallChainType.Forward">
            <summary>
            forward - used to process packets passing through the router
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeFirewallChainType.Output">
            <summary>
             output - used to process packets originated from the router and leaving it through one of the interfaces.Packets passing through the router are not processed against the rules of the output chain
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Bridge.BridgeNat">
            <summary>
            
            The bridge firewall implements packet filtering and thereby provides security functions that are used to manage data flow to, from and through bridge.
            
            Packet flow diagram shows how packets are processed through router. It is possible to force bridge traffic to go through /ip firewall filter rules (see: Bridge Settings)
            
            There are two bridge firewall tables:
            
            filter - bridge firewall with three predefined chains:
            input - filters packets, where the destination is the bridge (including those packets that will be routed, as they are destined to the bridge MAC address anyway)
            output - filters packets, which come from the bridge (including those packets that has been routed normally)
            forward - filters packets, which are to be bridged (note: this chain is not applied to the packets that should be routed through the router, just to those that are traversing between the ports of the same bridge)
            nat - bridge network address translation provides ways for changing source/destination MAC addresses of the packets traversing a bridge. Has two built-in chains:
            srcnat - used for "hiding" a host or a network behind a different MAC address. This chain is applied to the packets leaving the router through a bridged interface
            dstnat - used for redirecting some packets to other destinations
            You can put packet marks in bridge firewall (filter and NAT), which are the same as the packet marks in IP firewall put by '/ip firewall mangle'. In this way, packet marks put by bridge firewall can be used in 'IP firewall', and vice versa.
            
            General bridge firewall properties are described in this section. Some parameters that differ between nat and filter rules are described in further sections.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Bridge.BridgeNat.ActionType">
            <summary>
            Bridge NAT action type - <see cref="P:tik4net.Objects.Interface.Bridge.BridgeNat.Action"/>
            </summary>
            <seealso cref="P:tik4net.Objects.Interface.Bridge.BridgeNat.Action"/>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeNat.ActionType.Accept">
            <summary>
            accept - accept the packet.No action, i.e., the packet is passed through without undertaking any action, and no more rules are processed in the relevant list/chain
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeNat.ActionType.ArpReply">
            <summary>
            arp-reply - send a reply to an ARP request(any other packets will be ignored by this rule) with the specified MAC address(only valid in dstnat chain)
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeNat.ActionType.Drop">
            <summary>
            drop - silently drop the packet(without sending the ICMP reject message)
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeNat.ActionType.DstNat">
            <summary>
            dst-nat - change destination MAC address of a packet(only valid in dstnat chain)
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeNat.ActionType.Jump">
            <summary>
            jump - jump to the chain specified by the value of the jump-target argument
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeNat.ActionType.Log">
            <summary>
            log - log the packet
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeNat.ActionType.Mark">
            <summary>
            mark - mark the packet to use the mark later
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeNat.ActionType.Passthrough">
            <summary>
            passthrough - ignore this rule and go on to the next one. Acts the same way as a disabled rule, except for ability to count packets
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeNat.ActionType.Redirect">
            <summary>
            redirect - redirect the packet to the bridge itself (only valid in dstnat chain)
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeNat.ActionType.Return">
            <summary>
            return - return to the previous chain, from where the jump took place
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeNat.ActionType.SetPriority">
            <summary>
            set-priority - set priority specified by the new- priority parameter on the packets sent out through a link that is capable of transporting priority(VLAN or WMM - enabled wireless interface). Read more>
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Bridge.BridgeNat.ActionType.SrcNat">
            <summary>
            src-nat - change source MAC address of a packet(only valid in srcnat chain)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeNat.Action">
            <summary>
            action: Action to take if packet is matched by the rule: 
            accept - accept the packet.No action, i.e., the packet is passed through without undertaking any action, and no more rules are processed in the relevant list/chain
            arp-reply - send a reply to an ARP request(any other packets will be ignored by this rule) with the specified MAC address(only valid in dstnat chain)
            drop - silently drop the packet(without sending the ICMP reject message)
            dst-nat - change destination MAC address of a packet(only valid in dstnat chain)
            jump - jump to the chain specified by the value of the jump-target argument
            log - log the packet
            mark - mark the packet to use the mark later
            passthrough - ignore this rule and go on to the next one. Acts the same way as a disabled rule, except for ability to count packets
            redirect - redirect the packet to the bridge itself (only valid in dstnat chain)
            return - return to the previous chain, from where the jump took place
            set-priority - set priority specified by the new- priority parameter on the packets sent out through a link that is capable of transporting priority(VLAN or WMM - enabled wireless interface). Read more>
            src-nat - change source MAC address of a packet(only valid in srcnat chain)            
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeNat.ToArpReplyMacAddress">
            <summary>
            to-arp-reply-mac-address: Source MAC address to put in Ethernet frame and ARP payload, when action=arp-reply is selected
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeNat.ToDstMacAddress">
            <summary>
            to-dst-mac-address: Destination MAC address to put in Ethernet frames, when action=dst-nat is selected
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeNat.ToSrcMacAddress">
            <summary>
            to-src-mac-address: Source MAC address to put in Ethernet frames, when action=src-nat is selected
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Bridge.BridgePort">
            <summary>
            interface/bridge/port: Port submenu is used to enslave interfaces in a particular bridge interface.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgePort.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgePort.Interface">
            <summary>
            interface: Name of the interface
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgePort.Bridge">
            <summary>
            bridge:  The bridge interface the respective interface is grouped in
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgePort.Priority">
            <summary>
            priority: The priority of the interface in comparison with other going to the same subnet
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgePort.PathCost">
            <summary>
            path-cost: Path cost to the interface, used by STP to determine the "best" path
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgePort.Horizon">
            <summary>
            horizon: Use split horizon bridging to prevent bridging loops.  read more»
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgePort.Edge">
            <summary>
            edge: Set port as edge port or non-edge port, or enable automatic detection. Edge ports are connected to a LAN that has no other bridges attached. If the port is configured to discover edge port then as soon as the bridge detects a BPDU coming to an edge port, the port becomes a non-edge port.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgePort.PointToPoint">
            <summary>
            point-to-point: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgePort.ExternalFdb">
            <summary>
            external-fdb: Whether to use wireless registration table to speed up bridge host learning
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgePort.AutoIsolate">
            <summary>
            auto-isolate: Prevents STP blocking port from erroneously moving into a forwarding state if no BPDU's are received on the bridge.
            </summary>
        </member>
        <member name="M:tik4net.Objects.Interface.Bridge.BridgePort.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Bridge.BridgeSettings">
            <summary>
            interface/bridge/settings: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeSettings.AllowFastPath">
            <summary>
            allow-fast-path: Allows  fast path
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeSettings.UseIpFirewall">
            <summary>
            use-ip-firewall: Force bridged traffic to also be processed by prerouting, forward and postrouting sections of IP routing (http://wiki.mikrotik.com/wiki/Manual:Packet_Flow_v6). This does not apply to routed traffic.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeSettings.UseIpFirewallForPppoe">
            <summary>
            use-ip-firewall-for-pppoe: Send bridged un-encrypted PPPoE traffic to also be processed by 'IP firewall' (requires use-ip-firewall=yes to work)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Bridge.BridgeSettings.UseIpFirewallForVlan">
            <summary>
            use-ip-firewall-for-vlan: Send bridged VLAN traffic to also be processed by 'IP firewall' (requires use-ip-firewall=yes to work)
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Ethernet.EthernetMonitor">
            <summary>
            /interface ethernet monitor: command prints out current link, rate and duplex status of an interface. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.AutoNegotiation">
            <summary>
            auto-negotiation
            Current auto negotiation status:
             done - negotiation completed
             incomplete - negotiation failed or not yet completed
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.DefaultCableSettings">
            <summary>
            default-cable-settings
            Default cable length setting (only applicable to NS DP83815/6 cards)
             short - support short cables 
             standard - support standard cables
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.FullDuplex">
            <summary>
            full-duplex: Whether transmission of data occurs in two directions simultaneously
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.Rate">
            <summary>
            rate: Actual data rate of the connection.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.Status">
            <summary>
            status
            Current link status of an interface
             link-ok - the card is connected to the network
             no-link - the card is not connected to the network
             unknown - the connection is not recognized (if the card does not report connection status)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.TxFlowControl">
            <summary>
            tx-flow-control: Whether TX flow control is used
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.RxFlowControl">
            <summary>
            rx-flow-control: Whether RX flow control is used
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.SfpModulePresent">
            <summary>
            sfp-module-present: Whether SFP module is in cage
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.SfpRxLose">
            <summary>
            sfp-rx-lose: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.SfpTxFault">
            <summary>
            sfp-tx-fault: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.SfpConnectorType">
            <summary>
            sfp-connector-type: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.SfpLinkLengthCopper">
            <summary>
            sfp-link-length-copper: Detected link length when copper SFP module is used
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.SfpVendorName">
            <summary>
            sfp-vendor-name: Vendor of the SFP module
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.SfpVendorPartNumber">
            <summary>
            sfp-vendor-part-number: SFP module part number
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.SfpVendorRevision">
            <summary>
            sfp-vendor-revision: SFP module revision number
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.SfpVendorSerial">
            <summary>
            sfp-vendor-serial: SFP module serial number
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.SfpManufacturingDate">
            <summary>
            sfp-manufacturing-date: SFP module manufacturing date
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Ethernet.EthernetMonitor.Eeprom">
            <summary>
            eeprom: EEPROM of an SFP module
            </summary>
        </member>
        <member name="M:tik4net.Objects.Interface.Ethernet.EthernetMonitor.GetSnapshot(tik4net.ITikConnection,System.String)">
            <summary>
            Gets snapshot of actual values for given <paramref name="interfaceName"/>.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Ethernet.EthernetMonitorConnectionExtensions">
            <summary>
            Connection extension class for <see cref="T:tik4net.Objects.Interface.InterfaceMonitorTraffic"/>
            </summary>
        </member>
        <member name="M:tik4net.Objects.Interface.Ethernet.EthernetMonitorConnectionExtensions.GetEthernetMonitorSnapshot(tik4net.ITikConnection,System.String)">
            <summary>
            Gets snapshot of actual values for given <paramref name="interfaceName"/>.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Interface">
            <summary>
            /interface
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.Id">
            <summary>
            .id
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.DefaultName">
            <summary>
            default-name
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.Type">
            <summary>
            type
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.Mtu">
            <summary>
            mtu
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.MacAddress">
            <summary>
            mac-address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.FastPath">
            <summary>
            fast-path
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.RxByte">
            <summary>
            rx-byte
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.TxByte">
            <summary>
            tx-byte
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.RxPacket">
            <summary>
            rx-packet
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.TxPacket">
            <summary>
            tx-packet
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.RxDrop">
            <summary>
            rx-drop
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.TxDrop">
            <summary>
            tx-drop
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.RxError">
            <summary>
            rx-error
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.TxError">
            <summary>
            tx-error
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.Running">
            <summary>
            running
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.Disabled">
            <summary>
            disabled
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.Comment">
            <summary>
            comment
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.LastLinkDownTime">
            <summary>
            Link last down time. (since 6.43 version)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Interface.LastLinkUpTime">
            <summary>
            Link last up time (since 6.43 version)
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.InterfaceBridge">
            <summary>
            interface/bridge
            Ethernet-like networks (Ethernet, Ethernet over IP, IEEE802.11 in ap-bridge or bridge mode, WDS, VLAN) can be connected together using MAC bridges. The bridge feature allows the interconnection of hosts connected to separate LANs (using EoIP, geographically distributed networks can be bridged as well if any kind of IP network interconnection exists between them) as if they were attached to a single LAN. As bridges are transparent, they do not appear in traceroute list, and no utility can make a distinction between a host working in one LAN and a host working in another LAN if these LANs are bridged (depending on the way the LANs are interconnected, latency and data rate between hosts may vary).
            Network loops may emerge (intentionally or not) in complex topologies. Without any special treatment, loops would prevent network from functioning normally, as they would lead to avalanche-like packet multiplication. Each bridge runs an algorithm which calculates how the loop can be prevented. STP and RSTP allows bridges to communicate with each other, so they can negotiate a loop free topology. All other alternative connections that would otherwise form loops, are put to standby, so that should the main connection fail, another connection could take its place. This algorithm exchanges  configuration messages (BPDU - Bridge Protocol Data Unit) periodically, so that all bridges are updated with the newest information about changes in network topology. (R)STP selects a root bridge which is responsible for network reconfiguration, such as blocking and opening ports on other bridges. The root bridge is the bridge with the lowest bridge ID.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceBridge.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceBridge.AdminMac">
            <summary>
            admin-mac: Static MAC address of the bridge (takes effect if auto-mac=no)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceBridge.AgeingTime">
            <summary>
            ageing-time: How long a host's information will be kept in the bridge database
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.InterfaceBridge.ArpMode">
            <summary>
            Address Resolution Protocol setting  
            </summary>
            <seealso cref="P:tik4net.Objects.Interface.InterfaceBridge.Arp"/>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceBridge.ArpMode.Disabled">
            <summary>
            disabled - the interface will not use ARP
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceBridge.ArpMode.Enabled">
            <summary>
            enabled - the interface will use ARP
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceBridge.ArpMode.ProxyArp">
            <summary>
            proxy-arp - the interface will use the ARP proxy feature
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceBridge.ArpMode.ReplyOnly">
            <summary>
            reply-only - the interface will only reply to requests originated from matching IP address/MAC address combinations which are entered as static entries in the "/ip arp" table. No dynamic entries will be automatically stored in the "/ip arp" table. Therefore for communications to be successful, a valid static entry must already exist.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceBridge.Arp">
            <summary>
            arp
            Address Resolution Protocol setting    
                     disabled - the interface will not use ARP
                     enabled - the interface will use ARP
                     proxy-arp - the interface will use the ARP proxy feature
                     reply-only - the interface will only reply to requests originated from matching IP address/MAC address combinations which are entered as static entries in the "/ip arp" table. No dynamic entries will be automatically stored in the "/ip arp" table. Therefore for communications to be successful, a valid static entry must already exist.
            </summary>
            <seealso cref="T:tik4net.Objects.Interface.InterfaceBridge.ArpMode"/>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceBridge.AutoMac">
            <summary>
            auto-mac: Automatically select the smallest MAC address of bridge ports as a bridge MAC address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceBridge.ForwardDelay">
            <summary>
            forward-delay: Time which is spent during the initialization phase of the bridge interface (i.e., after router startup or enabling the interface) in listening/learning state before the bridge will start functioning normally
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceBridge.L2mtu">
            <summary>
            l2mtu: Layer2 Maximum transmission unit.  read more&#187; 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceBridge.MaxMessageAge">
            <summary>
            max-message-age: How long to remember Hello messages received from other bridges
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceBridge.Mtu">
            <summary>
            mtu: Maximum Transmission Unit
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceBridge.Name">
            <summary>
            name: Name of the bridge interface
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceBridge.Priority">
            <summary>
            priority
            Spanning tree protocol priority for bridge interface. Bridge with the smallest (lowest) bridge ID becomes a Root-Bridge. Bridge ID consists of two numbers - priority and MAC address of the bridge. To compare two bridge IDs, the priority is compared first. If two bridges have equal priority, then the MAC addresses are compared.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.InterfaceBridge.ProtocolModeModes">
            <summary>
            protocol-mode: Select Spanning tree protocol (STP) or Rapid spanning tree protocol (RSTP) to ensure a loop-free topology for any bridged LAN. RSTP provides for faster spanning tree convergence after a topology change.
            </summary>
            <seealso cref="P:tik4net.Objects.Interface.InterfaceBridge.ProtocolMode"/>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceBridge.ProtocolModeModes.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceBridge.ProtocolModeModes.Rstp">
            <summary>
            rstp - Select Spanning tree protocol (STP)
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceBridge.ProtocolModeModes.Stp">
            <summary>
            rstp - Rapid spanning tree protocol (RSTP) to ensure a loop-free topology for any bridged LAN. RSTP provides for faster spanning tree convergence after a topology change.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceBridge.ProtocolMode">
            <summary>
            protocol-mode: Select Spanning tree protocol (STP) or Rapid spanning tree protocol (RSTP) to ensure a loop-free topology for any bridged LAN. RSTP provides for faster spanning tree convergence after a topology change.
            </summary>
            <seealso cref="T:tik4net.Objects.Interface.InterfaceBridge.ProtocolModeModes"/>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceBridge.TransmitHoldCount">
            <summary>
            transmit-hold-count: The Transmit Hold Count used by the Port Transmit state machine to limit transmission rate
            </summary>
        </member>
        <member name="M:tik4net.Objects.Interface.InterfaceBridge.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.InterfaceEthernet">
            <summary>
            interface/ethernet
            MikroTik RouterOS supports various types of Ethernet interfaces. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Arp">
            <summary>
            arp
            Address Resolution Protocol mode:
             disabled - the interface will not use ARP
             enabled - the interface will use ARP
             proxy-arp - the interface will use the ARP proxy feature
             reply-only - the interface will only reply to requests originated from matching IP address/MAC address combinations which are entered as static entries in the  ARP table. No dynamic entries will be automatically stored in the ARP table. Therefore for communications to be successful, a valid static entry must already exist.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.AutoNegotiation">
            <summary>
            auto-negotiation
            When enabled, the interface "advertises" its maximum capabilities to achieve the best connection possible.
             Note1: Auto-negotiation should not be disabled on one end only, otherwise Ethernet Interfaces may not work properly. 
             Note2: Gigabit link cannot work with auto-negotiation disabled.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Bandwidth">
            <summary>
            bandwidth: Sets max rx/tx bandwidth in kbps that will be handled by an interface. TX limit is supported on all Atheros  switch-chip ports. RX limit is supported only on AR8327 switch-chip ports.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.CableSetting">
            <summary>
            cable-setting: Changes the cable length setting (only applicable to NS DP83815/6 cards)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Comment">
            <summary>
            comment: Descriptive name of an item
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.DisableRunningCheck">
            <summary>
            disable-running-check: Disable running check. If this value is set to 'no', the router automatically detects whether the NIC is connected with a device in the network or not. Default value is 'yes' because older NICs do not support it. (only applicable to x86)
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.InterfaceEthernet.YesNoOptions">
            <summary>
            Options for Yes-No properties.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceEthernet.YesNoOptions.Yes">
            <summary>
            yes
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceEthernet.YesNoOptions.No">
            <summary>
            no
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.FlowControlTx">
            <summary>
            flow-control-tx: When set to on, port will send pause frames when specific buffer usage thresholds is met. auto is the same as on except when auto-negotiation=yes flow control status is resolved by taking into account what other end advertises. Feature is supported on AR724x, AR9xxx, QCA9xxx CPU ports, all CCR ports and all Atheros switch chip ports.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.FlowControlRx">
            <summary>
            flow-control-rx: When set to on, port will process received pause frames and suspend transmission if required. auto is the same as on except when auto-negotiation=yes flow control status is resolved by taking into account what other end advertises. Feature is supported on AR724x, AR9xxx, QCA9xxx CPU ports, all CCR ports and all Atheros switch chip ports.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.FlowControlAuto">
            <summary>
            flow-control-auto
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.FullDuplex">
            <summary>
            full-duplex: Defines whether the transmission of data appears in two directions simultaneously
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.L2mtu">
            <summary>
            l2mtu: Layer2 Maximum transmission unit.  Read more&gt;&gt; 
            
            integer [0..65536]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.MacAddress">
            <summary>
            mac-address: Media Access Control number of an interface.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.MasterPort">
            <summary>
            master-port: Sets interface to be a slave of this named switch group master interface
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.MdixEnable">
            <summary>
            mdix-enable: Whether the MDI/X auto cross over cable correction feature is enabled for the port (Hardware specific, e.g. ether1 on RB500 can be set to yes/no. Fixed to 'yes' on other hardware.)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Mtu">
            <summary>
            mtu: Layer3 Maximum transmission unit
            
            integer [0..65536]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Name">
            <summary>
            name: Name of an interface
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.OrigMacAddress">
            <summary>
            orig-mac-address: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.PoeOut">
            <summary>
            poe-out: Poe Out settings.  Read more &gt;&gt;
            
            auto-on | forced-on | off
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.PoePriority">
            <summary>
            poe-priority: Poe Out settings.  Read more &gt;&gt;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.SfpRateSelect">
            <summary>
            sfp-rate-select: high | low
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Speed">
            <summary>
            speed: Sets the data transmission speed of an interface. By default, this value is the maximal data rate supported by the interface
            
            10Mbps | 10Gbps | 100Mbps | 1Gbps
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Running">
            <summary>
            running: Whether interface is running. Note that some interface does not have running check and they are always reported as "running"
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Rx10241518">
            <summary>
            rx-1024-1518: Total count of received 1024 to 1518 byte packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Rx128255">
            <summary>
            rx-128-255: Total count of received 128 to 255 byte packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Rx1519Max">
            <summary>
            rx-1519-max: Total count of received packets larger than 1519 bytes
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Rx256511">
            <summary>
            rx-256-511: Total count of received 256 to 511 byte packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Rx5121023">
            <summary>
            rx-512-1023: Total count of received 512 to 1023 byte packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Rx64">
            <summary>
            rx-64: Total count of received 64 byte packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Rx65127">
            <summary>
            rx-65-127: Total count of received 65 to 127 byte packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.RxAlignError">
            <summary>
            rx-align-error: Total count of received align error messages
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.RxBroadcast">
            <summary>
            rx-broadcast: Total count of received broadcast packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.RxBytes">
            <summary>
            rx-bytes: Total count of received bytes
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.RxFcsError">
            <summary>
            rx-fcs-error: Total count of received frames with incorrect checksum
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.RxFragment">
            <summary>
            rx-fragment: Total count of received fragmented frames
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.RxMulticast">
            <summary>
            rx-multicast: Total count of received multicast packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.RxOverflow">
            <summary>
            rx-overflow: Total count of received overflowed packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.RxPause">
            <summary>
            rx-pause: Total count of received pause frames
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.RxRunt">
            <summary>
            rx-runt
            Total count of received frames shorter than the minimum 64 bytes
            but with a valid CRC
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.RxTooLong">
            <summary>
            rx-too-long: Total count of received packets that were larger than the maximum packet size
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Slave">
            <summary>
            slave: Whether interface is configured as a slave of another interface (for example Bonding)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Switch">
            <summary>
            switch: ID to which switch chip interface belongs to.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Tx10241518">
            <summary>
            tx-1024-1518: Total count of transmitted 1024 to 1518 byte packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Tx128255">
            <summary>
            tx-128-255: Total count of transmitted 128 to 255 byte packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Tx1519Max">
            <summary>
            tx-1519-max: Total count of transmitted packets larger than 1519 bytes
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Tx256511">
            <summary>
            tx-256-511: Total count of transmitted 256 to 511 byte packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Tx5121023">
            <summary>
            tx-512-1023: Total count of transmitted 512 to 1023 byte packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Tx64">
            <summary>
            tx-64: Total count of transmitted 64 byte packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Tx65127">
            <summary>
            tx-65-127: Total count of transmitted 65 to 127 byte packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.TxAlignError">
            <summary>
            tx-align-error: Total count of transmitted align error messages
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.TxBroadcast">
            <summary>
            tx-broadcast: Total count of transmitted broadcast packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.TxBytes">
            <summary>
            tx-bytes: Total count of transmitted bytes
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.TxFcsError">
            <summary>
            tx-fcs-error: Total count of transmitted frames with incorrect checksum
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.TxFragment">
            <summary>
            tx-fragment: Total count of transmitted fragmented frames
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.TxMulticast">
            <summary>
            tx-multicast: Total count of transmitted multicast packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.TxOverflow">
            <summary>
            tx-overflow: Total count of transmitted overflowed packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.TxPause">
            <summary>
            tx-pause: Total count of transmitted pause frames
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.TxRunt">
            <summary>
            tx-runt
            Total count of transmitted frames shorter than the minimum 64 bytes
            but with a valid CRC
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.TxTooLong">
            <summary>
            tx-too-long: Total count of transmitted packets that were larger than the maximum packet size
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceEthernet.Disabled">
            <summary>
            disabled: Whether interface is disabled
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.InterfaceMonitorTraffic">
            <summary>
            /interface/monitor-traffic
            NOTE: use <see cref="M:tik4net.Objects.Interface.InterfaceMonitorTraffic.GetSnapshot(tik4net.ITikConnection,System.String)"/> or with some kind of bulk/async load
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceMonitorTraffic.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceMonitorTraffic.RxPacketsPerSecond">
            <summary>
            rx-packets-per-second
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceMonitorTraffic.RxBitsPerSecond">
            <summary>
            rx-bits-per-second
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceMonitorTraffic.RxDropsPerSecond">
            <summary>
            rx-drops-per-second
            REMARKS: not available in all versions
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceMonitorTraffic.RxErrorsPerSecond">
            <summary>
            rx-errors-per-second
            REMARKS: not available in all versions
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceMonitorTraffic.TxPacketsPerSecond">
            <summary>
            tx-packets-per-second
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceMonitorTraffic.TxBitsPerSecond">
            <summary>
            tx-bits-per-second
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceMonitorTraffic.TxDropsPerSecond">
            <summary>
            tx-drops-per-second
            REMARKS: not available in all versions
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceMonitorTraffic.TxErrorsPerSecond">
            <summary>
            tx-errors-per-second
            REMARKS: not available in all versions
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceMonitorTraffic.TxQueueDropsPerSecond">
            <summary>
            tx-queue-drops-per-second
            </summary>
        </member>
        <member name="M:tik4net.Objects.Interface.InterfaceMonitorTraffic.GetSnapshot(tik4net.ITikConnection,System.String)">
            <summary>
            Gets snapshot of actual values for given <paramref name="interfaceName"/>.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.InterfaceMonitorConnectionExtensions">
            <summary>
            Connection extension class for <see cref="T:tik4net.Objects.Interface.InterfaceMonitorTraffic"/>
            </summary>
        </member>
        <member name="M:tik4net.Objects.Interface.InterfaceMonitorConnectionExtensions.GetInterfaceMonitorTrafficSnapshot(tik4net.ITikConnection,System.String)">
            <summary>
            Gets snapshot of actual traffic RX/TX values for given <paramref name="interfaceName"/>.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.InterfaceWireless">
            <summary>
            interface/wireless
            RouterOS wireless comply with IEEE 802.11 standards, it provides complete support for 802.11a, 802.11b, 802.11g, 802.11n and 802.11ac as long as additional features like WPA, WEP, AES encryption, Wireless Distribution System (WDS), Dynamic Frequency selection (DFS), Virtual Access Point, Nstreme and NV2 proprietary protocols and many more. Wireless features compatibility table for different wireless protocols.
            
            Wireless can operate in several modes: client (station), access point, wireless bridge etc. Client/station also can operate in different modes, complete list of supported modes can be found here. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.AdaptiveNoiseImmunity">
            <summary>
            adaptive-noise-immunity: This property is only effective for cards based on Atheros chipset.
            
            ap-and-client-mode | client-mode | none
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.AllowSharedkey">
            <summary>
            allow-sharedkey: Allow WEP Shared Key cilents to connect. Note that no authentication is done for these clients (WEP Shared keys are not compared to anything) - they are just accepted at once (if access list allows that)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.AntennaGain">
            <summary>
            antenna-gain: Antenna gain in dBi, used to calculate maximum transmit power according to country regulations.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.AntennaMode">
            <summary>
            antenna-mode
            Select antenna to use for transmitting and for receiving
             ant-a - use only 'a' antenna
             ant-b - use only 'b' antenna
             txa-rxb - use antenna 'a' for transmitting, antenna 'b' for receiving
             rxa-txb - use antenna 'b' for transmitting, antenna 'a' for receiving
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Area">
            <summary>
            area
            Identifies group of wireless networks. This value is announced by AP, and can be matched in  connect-list by area-prefix. 
            This is a proprietary extension.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Arp">
            <summary>
            arp:  Read more &gt;&gt;
            disabled | enabled | proxy-arp | reply-only
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Band">
            <summary>
            band: Defines set of used data rates, channel frequencies and widths.
            2ghz-b | 2ghz-b/g | 2ghz-b/g/n | 2ghz-onlyg | 2ghz-onlyn | 5ghz-a | 5ghz-a/n | 5ghz-onlyn | 5ghz-a/n/ac | 5ghz-only-AC
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.BasicRatesAG">
            <summary>
            Unknown: Similar to the basic-rates-b property, but used for 5ghz, 5ghz-10mhz, 5ghz-5mhz, 5ghz-turbo, 2.4ghz-b/g, 2.4ghz-onlyg, 2ghz-10mhz, 2ghz-5mhz and 2.4ghz-g-turbo bands.
            12Mbps | 18Mbps | 24Mbps | 36Mbps | 48Mbps | 54Mbps | 6Mbps | 9Mbps; Default: 6Mbps
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.BasicRatesB">
            <summary>
            basic-rates-b
            List of basic rates, used for 2.4ghz-b, 2.4ghz-b/g and 2.4ghz-onlyg bands.
            Client will connect to AP only if it supports all basic rates announced by the AP.
            AP will establish WDS link only if it supports all basic rates of the other AP.
            This property has effect only in AP modes, and when value of rate-set is configured.
            
            11Mbps | 1Mbps | 2Mbps | 5.5Mbps
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.BridgeMode">
            <summary>
            bridge-mode: Allows to use station-bridge mode.  Read more &gt;&gt;
            
            disabled | enabled
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.BurstTime">
            <summary>
            burst-time: Time in microseconds which will be used to send data without stopping. Note that no other wireless cards in that network will be able to transmit data during burst-time microseconds. This setting is available only for AR5000, AR5001X, and AR5001X+ chipset based cards.
            
            integer | disabled
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.ChannelWidth">
            <summary>
            channel-width: ht above and ht below allows to use additional 20MHz extension channel and if it should be located below or above control (main) channel. Extension channel allows 11n device to use 40MHz of spectrum in total thus increasing max throughput.
            
            10mhz | 20/40mhz-ht-above | 20/40mhz-ht-below | 20mhz | 40mhz-turbo | 5mhz
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Comment">
            <summary>
            comment: Short description of the interface
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Compression">
            <summary>
            compression: Setting this property to yes will allow use of the hardware compression. Wireless interface must have support for hardware compression. Connections with devices that do not use compression will still work.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Country">
            <summary>
            country: Limits available bands, frequencies and maximum transmit power for each frequency. Also specifies default value of scan-list. Value no_country_set is an FCC compliant set of channels.
            
            name of the country | no_country_set
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.DefaultApTxLimit">
            <summary>
            default-ap-tx-limit: This is the value of ap-tx-limit for clients that do not match any entry in the  access-list. 0 means no limit.
            integer [0..4294967295]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.DefaultAuthentication">
            <summary>
            default-authentication: For AP mode, this is the value of authentication for clients that do not match any entry in the  access-list. For station mode, this is the value of connect for APs that do not match any entry in the  connect-list
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.DefaultClientTxLimit">
            <summary>
            default-client-tx-limit: This is the value of client-tx-limit for clients that do not match any entry in the  access-list. 0 means no limit
            
            integer [0..4294967295]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.DefaultForwarding">
            <summary>
            default-forwarding: This is the value of forwarding for clients that do not match any entry in the  access-list
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.DfsMode">
            <summary>
            dfs-mode
            Controls DFS (Dynamic Frequency Selection).
             none - disables DFS.
             no-radar-detect - Select channel from scan-list with the lowest number of detected networks. In 'wds-slave' mode this setting has no effect.
             radar-detect - Select channel with the lowest number of detected networks and use it if no radar is detected on it for 60 seconds. Otherwise, select different channel. This setting may be required by the country regulations.
            This property has effect only in AP mode.
            
            no-radar-detect | none | radar-detec
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.DisableRunningCheck">
            <summary>
            disable-running-check: When set to yes interface will always have running flag.  If value is set to no', the router determines whether the card is up and running - for AP one or more clients have to be registered to it, for station, it should be connected to an AP.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Disabled">
            <summary>
            disabled: Whether interface is disabled
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.DisconnectTimeout">
            <summary>
            disconnect-timeout
            This interval is measured from third sending failure on the lowest data rate. At this point 3 * (hw-retries + 1) frame transmits on the lowest data rate had failed.
            During disconnect-timeout packet transmission will be retried with on-fail-retry-time interval. If no frame can be transmitted successfully during diconnect-timeout, connection is closed, and this event is logged as "extensive data loss". Successful frame transmission resets this timer.
            
            time [0s..15s]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Distance">
            <summary>
            distance
            How long to wait for confirmation of unicast frames before considering transmission unsuccessful. Value 'dynamic' causes AP to detect and use smallest timeout that works with all connected clients.
            Acknowledgements are not used in Nstreme protocol.
            
            integer | dynamic | indoors
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.FrameLifetime">
            <summary>
            frame-lifetime: Discard frames that have been queued for sending longer than frame-lifetime. By default, when value of this property is 0, frames are discarded only after connection is closed.
            
            integer [0..4294967295]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Frequency">
            <summary>
            frequency
            Channel frequency value in MHz on which AP will operate.
            Allowed values depend on selected band, and are restricted by country setting and wireless card capabilities.
            This setting has no effect if interface is in any of station modes, or in wds-slave mode, or if DFS is active. 
            Note: If using mode "superchannel", any frequency supported by the card will be accepted, but on the RouterOS client, any non-standard frequency must be configured in the  scan-list, otherwise it will not be scanning in non-standard range. In Winbox, scanlist frequencies are in bold, any other frequency means the clients will need scan-list configured.
            
            integer [0..4294967295]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.FrequencyMode">
            <summary>
            frequency-mode
            Three frequency modes are available:
             regulatory-domain - Limit available channels and maximum transmit power for each channel according to the value of country
             manual-txpower - Same as above, but do not limit maximum transmit power.
             superchannel - Conformance Testing Mode. Allow all channels supported by the card.
            List of available channels for each band can be seen in /wireless info print. This mode allows you to test wireless channels outside the default scan-list and/or regulatory domain. This mode should only be used in controlled environments, or if you have a special permission to use it in your region. Before v4.3 this was called Custom Frequency Upgrade, or Superchannel. Since RouterOS v4.3 this mode is available without special key upgrades to all installations.
            
            manual-txpower | regulatory-domain | superchannel
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.FrequencyOffset">
            <summary>
            frequency-offset: Allows to specify offset if the used wireless card operates at a different frequency than is shown in RouterOS, in case a frequency converter is used in the card. So if your card works at 4000MHz but RouterOS shows 5000MHz, set offset to 1000MHz and it will be displayed correctly. The value is in MHz and can be positive or negative.
            
            integer [-2147483648..2147483647]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.HideSsid">
            <summary>
            hide-ssid
            .
             yes - AP does not include SSID in the beacon frames, and does not reply to probe requests that have broadcast SSID.
             no - AP includes SSID in the beacon frames, and replies to probe requests that have broadcast SSID.
            This property has effect only in AP mode. Setting it to yes can remove this network from the list of wireless networks that are shown by some client software. Changing this setting does not improve security of the wireless network, because SSID is included in other frames sent by the AP.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.HtAmpduPriorities">
            <summary>
            ht-ampdu-priorities: Frame priorities for which AMPDU sending (aggregating frames and sending using block acknowledgement) should get negotiated and used. Using AMPDUs will increase throughput, but may increase latency therefore may not be desirable for real-time traffic (voice, video). Due to this, by default AMPDUs are enabled only for best-effort traffic.
            
            list of integer [0..7]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.HtAmsduLimit">
            <summary>
            ht-amsdu-limit: Max AMSDU that device is allowed to prepare when negotiated. AMSDU aggregation may significantly increase throughput especially for small frames, but may increase latency in case of packet loss due to retransmission of aggregated frame. Sending and receiving AMSDUs will also increase CPU usage.
            
            integer [0..8192]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.HtAmsduThreshold">
            <summary>
            ht-amsdu-threshold: Max frame size to allow including in AMSDU.
            
            integer [0..8192]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.HtBasicMcs">
            <summary>
            ht-basic-mcs: Modulation and Coding Schemes that every connecting client must support. Refer to 802.11n for MCS specification.
            
            list of (mcs-0 | mcs-1 | mcs-2 | mcs-3 | mcs-4 | mcs-5 | mcs-6 | mcs-7 | mcs-8 | mcs-9 | mcs-10 | mcs-11 | mcs-12 | mcs-13 | mcs-14 | mcs-15 | mcs-16 | mcs-17 | mcs-18 | mcs-19 | mcs-20 | mcs-21 | mcs-22 | mcs-23)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.HtGuardInterval">
            <summary>
            ht-guard-interval: Whether to  allow use of short guard interval (refer to 802.11n MCS specification to see how this may affect throughput). "any" will use either short or long, depending on data rate, "long" will use long.
            
            any | long
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.HtRxchains">
            <summary>
            ht-rxchains: Which antennas to use for receive.
            
            list of integer [0..2]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.HtSupportedMcs">
            <summary>
            ht-supported-mcs: Modulation and Coding Schemes that this device advertises as supported. Refer to 802.11n for MCS specification.
            
            list of (mcs-0 | mcs-1 | mcs-2 | mcs-3 | mcs-4 | mcs-5 | mcs-6 | mcs-7 | mcs-8 | mcs-9 | mcs-10 | mcs-11 | mcs-12 | mcs-13 | mcs-14 | mcs-15 | mcs-16 | mcs-17 | mcs-18 | mcs-19 | mcs-20 | mcs-21 | mcs-22 | mcs-23)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.HtTxchains">
            <summary>
            ht-txchains: Which antetnnas to use for transmit.
            
            list of integer [0..2]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.HwFragmentationThreshold">
            <summary>
            hw-fragmentation-threshold: Specifies maximum fragment size in bytes when transmitted over wireless medium. 802.11 standard packet (MSDU in 802.11 terminology) fragmentation allows packets to be fragmented before transmiting over wireless medium to increase probability of successful transmission (only fragments that did not transmit correctly are retransmitted). Note that transmission of fragmented packet is less efficient than transmitting unfragmented packet because of protocol overhead and increased resource usage at both - transmitting and receiving party.
            
            integer[256..3000] | disabled
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.HwProtectionMode">
            <summary>
            hw-protection-mode: Frame protection support property  read more &gt;&gt;
            
            cts-to-self | none | rts-cts
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.HwProtectionThreshold">
            <summary>
            hw-protection-threshold: Frame protection support property read more &gt;&gt;
            
            integer [0..65535]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.HwRetries">
            <summary>
            hw-retries
            Number of times sending frame is retried without considering it a transmission failure.
            Data rate is decreased upon failure and frame is sent again. Three sequential failures on lowest supported rate suspend transmission to this destination for the duration of on-fail-retry-time. After that, frame is sent again. The frame is being retransmitted until transmission success, or until client is disconnected after disconnect-timeout. Frame can be discarded during this time if frame-lifetime is exceeded.
            
            integer [0..15]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.L2mtu">
            <summary>
            l2mtu: integer [0..65536]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.MacAddress">
            <summary>
            mac-address: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.MasterInterface">
            <summary>
            master-interface: Name of wireless interface that has virtual-ap capability. Virtual AP interface will only work if master interface is in ap-bridge, bridge or wds-slave mode. This property is only for virtual AP interfaces.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.MaxStationCount">
            <summary>
            max-station-count: Maximum number of associated clients. WDS links also count toward this limit.
            
            integer [1..2007]
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.InterfaceWireless.WirelessMode">
            <summary>
            Mode for <see cref="P:tik4net.Objects.Interface.InterfaceWireless.Mode"/>.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessMode.Station">
            <summary>
            station - Basic station mode. Find and connect to acceptable AP
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessMode.StationWds">
            <summary>
            station-wds - Same as station, but create WDS link with AP, using proprietary extension. AP configuration has to allow WDS links with this device. Note that this mode does not use entries in wds.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessMode.ApBridge">
            <summary>
            ap-bridge - Basic access point mode.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessMode.Bridge">
            <summary>
            bridge - Same as ap-bridge, but limited to one associated client.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessMode.AlignmentOnly">
            <summary>
            alignment-only - Put interface in a continuous transmit mode that is used for aiming remote antenna.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessMode.NstremeDualSlave">
            <summary>
            nstreme-dual-slave - allow this interface to be used in nstreme-dual setup.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessMode.WdsSlave">
            <summary>
            wds-slave - Same as ap-bridge, but scan for AP with the same ssid and establishes WDS link. If this link is lost or cannot be established, then continue scanning. If dfs-mode is radar-detect, then APs with enabled hide-ssid will not be found during scanning.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessMode.StationPseudobridge">
            <summary>
            station-pseudobridge - Same as station, but additionally perform MAC address translation of all traffic. Allows interface to be bridged.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessMode.StationPseudobridgeClone">
            <summary>
            station-pseudobridge-clone - Same as station-pseudobridge, but use station-bridge-clone-mac address to connect to AP. 
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessMode.StationBridge">
            <summary>
            ?
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Mode">
            <summary>
            mode
            Selection between different station and access point (AP) modes.
            Station modes:
             station - Basic station mode. Find and connect to acceptable AP.
             station-wds - Same as station, but create WDS link with AP, using proprietary extension. AP configuration has to allow WDS links with this device. Note that this mode does not use entries in wds.
             station-pseudobridge - Same as station, but additionally perform MAC address translation of all traffic. Allows interface to be bridged.
             station-pseudobridge-clone - Same as station-pseudobridge, but use station-bridge-clone-mac address to connect to AP. 
            AP modes:
             ap-bridge - Basic access point mode.
             bridge - Same as ap-bridge, but limited to one associated client.
             wds-slave - Same as ap-bridge, but scan for AP with the same ssid and establishes WDS link. If this link is lost or cannot be established, then continue scanning. If dfs-mode is radar-detect, then APs with enabled hide-ssid will not be found during scanning.
            Special modes:
             alignment-only - Put interface in a continuous transmit mode that is used for aiming remote antenna.
             nstreme-dual-slave - allow this interface to be used in nstreme-dual setup.
            MAC address translation in pseudobridge modes works by inspecting packets and building table of corresponding IP and MAC addresses. All packets are sent to AP with the MAC address used by pseudobridge, and MAC addresses of received packets are restored from the address translation table. There is single entry in address translation table for all non-IP packets, hence more than one host in the bridged network cannot reliably use non-IP protocols. Note: Currently IPv6 doesn't work over Pseudobridge
            Virtual AP interfaces do not have this property, they follow the mode of their master interface.
            
            station | station-wds | ap-bridge | bridge | alignment-only | nstreme-dual-slave | wds-slave | station-pseudobridge | station-pseudobridge-clone | station-bridge
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Mtu">
            <summary>
            mtu: [0..65536]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.MulticastHelper">
            <summary>
            multicast-helper
            When set to full multicast packets will be sent with unicast destination MAC address, resolving  multicast problem on wireless link. This option should be enabled only on access point, clients should be configured in station-bridge mode. Available starting from v5.15. 
            disabled - disables the helper and sends multicast packets with multicast destination MAC addresses
            full - all multicast packet mac address are changed to unicast mac addresses prior sending them out
            default - default choice that currently is set to disabled. Value can be changed in future releases.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Name">
            <summary>
            name: name of the interface
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.NoiseFloorThreshold">
            <summary>
            noise-floor-threshold: This property is only effective for cards based on AR5211 chipset.
            
            default | integer [-128..127]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Nv2CellRadius">
            <summary>
            nv2-cell-radius
            Setting affects the size of contention time slot that AP allocates for clients to initiate connection and also size of time slots used for estimating distance to client. When setting is too small, clients that are farther away may have trouble connecting and/or disconnect with "ranging timeout" error. Although during normal operation the effect of this setting should be negligible, in order to maintain maximum performance, it is advised to not increase this setting if not necessary, so AP is not reserving time that is actually never used, but instead allocates it for actual data transfer.
             on AP: distance to farthest client in km
             on station: no effect
            
            integer [10..200]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Nv2NoiseFloorOffset">
            <summary>
            nv2-noise-floor-offset: default | integer [0..20]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Nv2PresharedKey">
            <summary>
            nv2-preshared-key: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Nv2Qos">
            <summary>
            nv2-qos
            Sets the packet priority mechanism, firstly data from high priority queue is sent, then lower queue priority data until 0 queue priority is reached. When link is full with high priority queue data, lower priority data is not sent. Use it very carefully, setting works on AP 
             frame-priority - manual setting that can be tuned with Mangle rules. 
             default - default setting where small packets receive priority for best latency
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Nv2QueueCount">
            <summary>
            nv2-queue-count: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Nv2Security">
            <summary>
            nv2-security: disabled | enabled
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.OnFailRetryTime">
            <summary>
            on-fail-retry-time: After third sending failure on the lowest data rate, wait for specified time interval before retrying.
            
            time [100ms..1s]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.PeriodicCalibration">
            <summary>
            periodic-calibration
            Setting default enables periodic calibration if  info default-periodic-calibration property is enabled. Value of that property depends on the type of wireless card.
            This property is only effective for cards based on Atheros chipset.
            
            default | disabled | enabled
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.PeriodicCalibrationInterval">
            <summary>
            periodic-calibration-interval: This property is only effective for cards based on Atheros chipset.
            
            [1..10000]
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.InterfaceWireless.WirelessPreambleMode">
            <summary>
            Mode for <see cref="P:tik4net.Objects.Interface.InterfaceWireless.PreambleMode"/>.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessPreambleMode.Both">
            <summary>
            both - Use short preamble if AP supports it.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessPreambleMode.Long">
            <summary>
            long - do not use short preamble.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessPreambleMode.Short">
            <summary>
            short - do not connect to AP if it does not support short preamble.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.PreambleMode">
            <summary>
            preamble-mode
            Short preamble mode is an option of 802.11b standard that reduces per-frame overhead.
             On AP:
             long - Do not use short preamble.
             short - Announce short preamble capability. Do not accept connections from clients that do not have this capability.
             both - Announce short preamble capability.
             On station:
             long - do not use short preamble.
             short - do not connect to AP if it does not support short preamble.
             both - Use short preamble if AP supports it.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.PrismCardtype">
            <summary>
            prism-cardtype: Specify type of the installed Prism wireless card.
            
            100mW | 200mW | 30mW
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.ProprietaryExtension">
            <summary>
            proprietary-extension
            RouterOS includes proprietary information in an information element of management frames. This parameter controls how this information is included.
             pre-2.9.25 - This is older method. It can interoperate with newer versions of RouterOS. This method is incompatible with some clients, for example, Centrino based ones.
             post-2.9.25 - This uses standardized way of including vendor specific information, that is compatible with newer wireless clients.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.RadioName">
            <summary>
            radio-name
            Descriptive name of the device, that is shown in registration table entries on the remote devices.
            This is a proprietary extension.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.RateSelection">
            <summary>
            rate-selection: Starting from v5.9 default value is advanced since legacy mode was inefficient.
            
            advanced | legacy
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.RateSet">
            <summary>
            rate-set
            Two options are available:
             default - default basic and supported rate sets are used. Values from basic-rates and supported-rates parameters have no effect.
             configured - use values from basic-rates, supported-rates, basic-mcs, mcs.  Read more &gt;&gt;.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.ScanList">
            <summary>
            scan-list
            The default value is all channels from selected band that are supported by card and allowed by the country and frequency-mode settings (this list can be seen in  info). For default scan list in 5ghz band channels are taken with 20MHz step, in 5ghz-turbo band - with 40MHz step, for all other bands - with 5MHz step. If scan-list is specified manually, then all matching channels are taken. (Example: scan-list=default,5200-5245,2412-2427 - This will use the default value of scan list for current band, and add to it supported frequencies from 5200-5245 or 2412-2427 range.) 
            Since RouterOS v6.0 with Winbox or Webfig, for inputting of multiple frequencies, add each frequency or range of frequencies into separate multiple scan-lists. Using a comma to separate frequencies is no longer supported in Winbox/Webfig since v6.0.
            
            Comma separated list of frequencies and frequency ranges | default
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.SecurityProfile">
            <summary>
            security-profile: Name of profile from  security-profiles
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.Ssid">
            <summary>
            ssid: SSID (service set identifier) is a name that identifies wireless network.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.StationBridgeCloneMac">
            <summary>
            station-bridge-clone-mac
            This property has effect only in the station-pseudobridge-clone mode.
            Use this MAC address when connection to AP. If this value is 00:00:00:00:00:00, station will initially use MAC address of the wireless interface.
            As soon as packet with MAC address of another device needs to be transmitted, station will reconnect to AP using that address.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.SupportedRatesAG">
            <summary>
            supported-rates-a/g: List of supported rates, used for all bands except  2ghz-b.
            
            (list of rates [12Mbps | 18Mbps | 24Mbps | 36Mbps | 48Mbps | 54Mbps | 6Mbps | 9Mbps]; Default: 6Mbps; 9Mbps; 12Mbps; 18Mbps; 24Mbps; 36Mbps; 48Mbps; 54Mbps)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.SupportedRatesB">
            <summary>
            supported-rates-b: List of supported rates, used for 2ghz-b, 2ghz-b/g and 2ghz-b/g/n bands. Two devices will communicate only using rates that are supported by both devices. This property has effect only when value of rate-set is configured.
            
            list of rates [11Mbps | 1Mbps | 2Mbps | 5.5Mbps]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.TdmaDebug">
            <summary>
            tdma-debug: [0..4294967295]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.TdmaHwTestMode">
            <summary>
            tdma-hw-test-mode: integer [0..4294967295]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.TdmaOverrideRate">
            <summary>
            tdma-override-rate: 12mbps | 18mbps | 24mbps | 36mbps | 48mbps | 54mbps | 6mbps | 9mbps | disabled | ht20-mcs... | ht40-mcs...
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.TdmaOverrideSize">
            <summary>
            tdma-override-size: integer [0..4294967295]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.TdmaPeriodSize">
            <summary>
            tdma-period-size: Specifies TDMA period in milliseconds. It could help on the longer distance links, it could slightly increase bandwidth, while latency is increased too.
            
            integer [1..10]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.TdmaTestMode">
            <summary>
            tdma-test-mode: integer [0..4294967295]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.TxPower">
            <summary>
            tx-power: For 802.11ac wireless interface it's total power but for 802.11a/b/g/n it's power per chain.
            
             [-30..30]
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.InterfaceWireless.WirelessTxPowerMode">
            <summary>
            Power mode for <see cref="P:tik4net.Objects.Interface.InterfaceWireless.TxPowerMode"/>
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessTxPowerMode.Default">
            <summary>
            default - use values stored in the card
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessTxPowerMode.CardRates">
            <summary>
            card-rates - use transmit power as defined by tx-power setting 
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessTxPowerMode.AllRatesFixed">
            <summary>
            all-rated-fixed - use same transmit power for all data rates. Can damage the card if transmit power is set above rated value of the card for used rate
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessTxPowerMode.ManualTable">
            <summary>
            manual-table - define transmit power for each rate separately. Can damage the card if transmit power is set above rated value of the card for used rate.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.TxPowerMode">
            <summary>
            tx-power-mode
            sets up tx-power mode for wireless card
             default - use values stored in the card
             card-rates - use transmit power as defined by tx-power setting 
             all-rated-fixed - use same transmit power for all data rates. Can damage the card if transmit power is set above rated value of the card for used rate
             manual-table - define transmit power for each rate separately. Can damage the card if transmit power is set above rated value of the card for used rate.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.UpdateStatsInterval">
            <summary>
            update-stats-interval
            How often to request update of signals strength and ccq values from clients.
            Access to  registration-table also triggers update of these values.
            This is proprietary extension.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.VhtBasicMcs">
            <summary>
            vht-basic-mcs
            Modulation and Coding Schemes that every connecting client must support. Refer to 802.11ac for MCS specification.
            You can set MCS interval for each of Spatial Stream
             none - will not use selected Spatial Stream
             MCS 0-7 - client must support MCS-0 to MCS-7
             MCS 0-8 - client must support MCS-0 to MCS-8 
             MCS 0-9 - client must support MCS-0 to MCS-9
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.VhtSupportedMcs">
            <summary>
            vht-supported-mcs
            Modulation and Coding Schemes that this device advertises as supported. Refer to 802.11ac for MCS specification.
            You can set MCS interval for each of Spatial Stream
             none - will not use selected Spatial Stream
             MCS 0-7 - devices will advertise as supported MCS-0 to MCS-7
             MCS 0-8 - devices will advertise as supported MCS-0 to MCS-8 
             MCS 0-9 - devices will advertise as supported MCS-0 to MCS-9
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.WdsCostRange">
            <summary>
            wds-cost-range
            Bridge port cost of WDS links are automatically adjusted, depending on measured link throughput. Port cost is recalculated and adjusted every 5 seconds if it has changed by more than 10%, or if more than 20 seconds have passed since the last adjustment.
            Setting this property to 0 disables  automatic cost adjustment.
            Automatic adjustment does not work for WDS links that are manually configured as a bridge port.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.WdsDefaultBridge">
            <summary>
            wds-default-bridge: When WDS link is established and status of the wds interface becomes running, it will be added as a bridge port to the bridge interface specified by this property. When WDS link is lost, wds interface is removed from the bridge. If wds interface is already included in a bridge setup when WDS link becomes active, it will not be added to bridge specified by , and will (needs editing)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.WdsDefaultCost">
            <summary>
            wds-default-cost: Initial bridge port cost of the WDS links.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.WdsIgnoreSsid">
            <summary>
            wds-ignore-ssid: By default, WDS link between two APs can be created only when they work on the same frequency and have the same SSID value. If this property is set to yes, then SSID of the remote AP will not be checked. This property has no effect on connections from clients in station-wds mode. It also does not work if wds-mode is static-mesh or dynamic-mesh.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.WdsMode">
            <summary>
            wds-mode
            Controls how WDS links with other devices (APs and clients in station-wds mode) are established.
             disabled does not allow WDS links.
             static only allows WDS links that are manually configured in wds
             dynamic also allows WDS links with devices that are not configured in wds, by creating required entries dynamically. Such dynamic WDS entries are removed automatically after the connection with the other AP is lost.
            -mesh modes use different (better) method for establishing link between AP, that is not compatible with APs in non-mesh mode. This method avoids one-sided WDS links that are created only by one of the two APs. Such links cannot pass any data.
            When AP or station is establishing WDS connection with another AP, it uses  connect-list to check whether this connection is allowed. If station in station-wds mode is establishing connection with AP, AP uses  access-list to check whether this connection is allowed.
            If mode is station-wds, then this property has no effect.
            
            disabled  | dynamic | dynamic-mesh | static | static-mesh
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.InterfaceWireless.WirelessWirelessProtocol">
            <summary>
            Options for <see cref="P:tik4net.Objects.Interface.InterfaceWireless.WirelessProtocol"/>.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessWirelessProtocol.Unspecified">
            <summary>
            unspecified - protocol mode used on previous RouterOS versions (v3.x, v4.x). Nstreme is enabled by old enable-nstreme setting, Nv2 configuration is not possible.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessWirelessProtocol.Any">
            <summary>
            any on AP - regular 802.11 Access Point or Nstreme Access Point; on station - selects Access Point without specific sequence, it could be changed by connect-list rules.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessWirelessProtocol.NStreme">
            <summary>
            nstreme - enables Nstreme protocol (the same as old enable-nstreme setting).
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessWirelessProtocol.NV2">
            <summary>
             nv2 - enables Nv2 protocol.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessWirelessProtocol.NV2Nstreme">
            <summary>
            nv2-nstreme: on AP - uses first wireless-protocol setting, always Nv2; on station - searches for Nv2 Access Point, then for Nstreme Access Point.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessWirelessProtocol.NV2NStreme80211">
            <summary>
            nv2 nstreme 802.11 - on AP - uses first wireless-protocol setting, always Nv2; on station - searches for Nv2 Access Point, then for Nstreme Access Point, then for regular 802.11 Access Point.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.InterfaceWireless.WirelessWirelessProtocol.Plain80211">
            <summary>
            ?
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.WirelessProtocol">
            <summary>
            wireless-protocol
            Specifies protocol used on wireless interface; 
             unspecified - protocol mode used on previous RouterOS versions (v3.x, v4.x). Nstreme is enabled by old enable-nstreme setting, Nv2 configuration is not possible.
             any on AP - regular 802.11 Access Point or Nstreme Access Point; on station - selects Access Point without specific sequence, it could be changed by connect-list rules.
             nstreme - enables Nstreme protocol (the same as old enable-nstreme setting).
             nv2 - enables Nv2 protocol.
             nv2-nstreme: on AP - uses first wireless-protocol setting, always Nv2; on station - searches for Nv2 Access Point, then for Nstreme Access Point.
             nv2-nstreme 802.11 - on AP - uses first wireless-protocol setting, always Nv2; on station - searches for Nv2 Access Point, then for Nstreme Access Point, then for regular 802.11 Access Point.
            Warning! Nv2 doesn't have support for Virtual AP
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.InterfaceWireless.WmmSupport">
            <summary>
            wmm-support: Specifies whether to enable  WMM.
            
            disabled | enabled | required
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Wireless.WirelessAccessList">
            <summary>
            Access list is used by access point to restrict allowed connections from other devices, and to control connection parameters.
            Operation:
                Access list rules are checked sequentially.
                Disabled rules are always ignored.
                Only the first matching rule is applied.
                If there are no matching rules for the remote connection, then the default values from the wireless interface configuration are used.
                If remote device is matched by rule that has authentication = no value, the connection from that remote device is rejected.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.ApTxLimit">
            <summary>
            ap-tx-limit: Limit rate of data transmission to this client. Value 0 means no limit. Value is in bits per second.
            integer [0..4294967295]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.Authentication">
            <summary>
            authentication
            .
             no - Client association will always fail.
             yes - Use authentication procedure that is specified in the  security-profile of the interface.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.ClientTxLimit">
            <summary>
            client-tx-limit
            Ask client to limit rate of data transmission. Value 0 means no limit.
            This is a proprietary extension that is supported by RouterOS clients.
            Value is in bits per second.
            integer [0..4294967295]
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.Comment">
            <summary>
            comment: Short description of an entry
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.Disabled">
            <summary>
            disabled: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.Forwarding">
            <summary>
            forwarding
            .
             no - Client cannot send frames to other station that are connected to same access point.
             yes - Client can send frames to other stations on the same access point.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.Interface">
            <summary>
            interface: Rules with interface=all are used for all wireless interfaces. To make rule that applies only to one wireless interface, specify that interface as a value of this property.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.MacAddress">
            <summary>
            mac-address: Rule matches client with the specified MAC address. Value 00:00:00:00:00:00 matches always.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.ManagementProtectionKey">
            <summary>
            management-protection-key: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.PrivateAlgo">
            <summary>
            private-algo: Only for WEP modes.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.PrivateKey">
            <summary>
            private-key: Only for WEP modes.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.PrivatePreSharedKey">
            <summary>
            private-pre-shared-key: Used in WPA PSK mode.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.SignalRange">
            <summary>
            signal-range
            Rule matches if signal strength of the station is within the range.
            If signal strength of the station will go out of the range that is specified in the rule, access point will disconnect that station.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessAccessList.Time">
            <summary>
            time
            Rule will match only during specified time.
            Station will be disconnected after specified time ends.
            Both start and end time is expressed as time since midnight, 00:00.
            Rule will match only during specified days of the week.
            </summary>
        </member>
        <member name="M:tik4net.Objects.Interface.Wireless.WirelessAccessList.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Wireless.WirelessChannels">
            <summary>
            interface/wireless/channels: Advanced Channels feature provides extended opportunities in wireless interface configuration:
            * scan-list that covers multiple bands and channel widths;
            * non-standard channel center frequencies(specified with KHz granularity) for hardware that allows that;
            * non-standard channel widths(specified with KHz granularity) for hardware that allows that.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessChannels.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessChannels.List">
            <summary>
            list: name of list this channel is part of. Lists can be used to group channels;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessChannels.Name">
            <summary>
            name: name by which this channel can be referred to. If name is not specified when adding channel, it will be automatically generated from channel frequency and width;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessChannels.Frequency">
            <summary>
            frequency: channel center frequency in MHz, allowing to specify fractional MHz part, e.g. 5181.5;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessChannels.Width">
            <summary>
            width: channel width in MHz, allowing to specify fractional MHz part, e.g. 14.5;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessChannels.Band">
            <summary>
            band: defines default set of data rates when using this channel;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessChannels.ExtensionChannel">
            <summary>
            extension-channel: specifies placement of 11n extension channel.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable">
            <summary>
            /interface wireless registration-table: In the registration table you can see various information about currently connected clients. It is used only for Access Points. All properties are read-only.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Port8021Enabled">
            <summary>
            Unknown: whether the data exchange is allowed with the peer (i.e., whether 802.1x authentication is completed, if needed)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.AckTimeout">
            <summary>
            ack-timeout: current value of ack-timeout
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Ap">
            <summary>
            ap: Shows whether registered device is configured as access point.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.ApTxLimit">
            <summary>
            ap-tx-limit: transmit rate limit on the AP, in bits per second
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.AuthenticationType">
            <summary>
            authentication-type: authentication method used for the peer
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Bridge">
            <summary>
            bridge: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Bytes">
            <summary>
            bytes: number of sent and received packet bytes
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.ClientTxLimit">
            <summary>
            client-tx-limit: transmit rate limit on the AP, in bits per second
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Comment">
            <summary>
            comment: Description of an entry. comment is taken from appropriate  Access List entry if specified.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Compression">
            <summary>
            compression: whether data compresson is used for this peer
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Distance">
            <summary>
            distance: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Encryption">
            <summary>
            encryption: unicast encryption algorithm used
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.EvmCh0">
            <summary>
            evm-ch0: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.EvmCh1">
            <summary>
            evm-ch1: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.EvmCh2">
            <summary>
            evm-ch2: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.FrameBytes">
            <summary>
            frame-bytes: number of sent and received data bytes excluding header information
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Frames">
            <summary>
            frames: Number of frames that need to be sent over wireless link. This value can be compared to  hw-frames to check wireless retransmits.   Read more &gt;&gt;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.FramingCurrentSize">
            <summary>
            framing-current-size: current size of combined frames
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.FramingLimit">
            <summary>
            framing-limit: maximal size of combined frames
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.FramingMode">
            <summary>
            framing-mode: the method how to combine frames
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.GroupEncryption">
            <summary>
            group-encryption: group encryption algorithm used
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.HwFrameBytes">
            <summary>
            hw-frame-bytes: number of sent and received data bytes including header information
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.HwFrames">
            <summary>
            hw-frames: Number of frames sent over wireless link by the driver. Tihs value can be compared to  frames to check wireless retransmits.  Read more &gt;&gt;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Interface">
            <summary>
            interface: Name of the wireless interface to which wireless client is associated
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.LastActivity">
            <summary>
            last-activity: last interface data tx/rx activity
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.LastIp">
            <summary>
            last-ip: IP address found in the last IP packet received from the registered client
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.MacAddress">
            <summary>
            mac-address: MAC address of the registered client
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.ManagementProtection">
            <summary>
            management-protection: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Nstreme">
            <summary>
            nstreme: Shows whether nstreme is enabled
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.PThroughput">
            <summary>
            p-throughput: estimated approximate throughput that is expected to the given peer, taking into account the effective transmit rate and hardware retries. Calculated once in 5 seconds
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.PackedBytes">
            <summary>
            packed-bytes: number of bytes packed into larger frames for transmitting/receiving (framing)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.PackedFrames">
            <summary>
            packed-frames: number of frames packed into larger ones for transmitting/receiving (framing)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Packets">
            <summary>
            packets: number of sent and received network layer packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.RadioName">
            <summary>
            radio-name: radio name of the peer
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.RouterosVersion">
            <summary>
            routeros-version: RouterOS version of the registered client
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.RxCcq">
            <summary>
            rx-ccq: Client Connection Quality (CCQ) for receive.  Read more &gt;&gt; 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.RxRate">
            <summary>
            rx-rate: receive data rate
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.SignalStrength">
            <summary>
            signal-strength: average strength of the client signal recevied by the AP
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.SignalStrengthCh0">
            <summary>
            signal-strength-ch0: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.SignalStrengthCh1">
            <summary>
            signal-strength-ch1: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.SignalStrengthCh2">
            <summary>
            signal-strength-ch2: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.SignalToNoise">
            <summary>
            signal-to-noise: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.StrengthAtRates">
            <summary>
            strength-at-rates: signal strength level at different rates together with time how long were these rates used
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TdmaRetx">
            <summary>
            tdma-retx: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TdmaRxSize">
            <summary>
            tdma-rx-size: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TdmaTimingOffset">
            <summary>
            tdma-timing-offset
            tdma-timing-offset is proportional to distance and is approximately two times the propagation delay.
            AP measures this so that it can tell clients what offset to use for their transmissions - clients then subtract this offset from their target transmission time such that propagation delay is accounted for and transmission arrives at AP when expected. You may occasionally see small negative value (like few usecs) there for close range clients because of additional unaccounted delay that may be produced in transmitter or receiver hardware that varies from chipset to chipset.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TdmaTxSize">
            <summary>
            tdma-tx-size: Value in bytes that specifies the size of data unit whose loss can be detected (data unit over which CRC is calculated) sent by device. In general - the bigger the better, because overhead is less. On the other hand, small value in this setting can not always be considered a signal that connection is poor - if device does not have enough pending data that would enable it to use bigger data units (e.g. if you are just pinging over link), this value will not go up.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TdmaWindfull">
            <summary>
            tdma-windfull: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TxCcq">
            <summary>
            tx-ccq: Client Connection Quality (CCQ) for transmit.  Read more &gt;&gt; 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TxEvmCh0">
            <summary>
            tx-evm-ch0: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TxEvmCh1">
            <summary>
            tx-evm-ch1: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TxEvmCh2">
            <summary>
            tx-evm-ch2: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TxFramesTimedOut">
            <summary>
            tx-frames-timed-out: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TxRate">
            <summary>
            tx-rate: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TxSignalStrength">
            <summary>
            tx-signal-strength: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TxSignalStrengthCh0">
            <summary>
            tx-signal-strength-ch0: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TxSignalStrengthCh1">
            <summary>
            tx-signal-strength-ch1: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.TxSignalStrengthCh2">
            <summary>
            tx-signal-strength-ch2: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Uptime">
            <summary>
            uptime: time the client is associated with the access point
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.Wds">
            <summary>
            wds: whether the connected client is using wds or not
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessRegistrationTable.WmmEnabled">
            <summary>
            wmm-enabled: Shows whether  WMM is enabled.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile">
            <summary>
            Wireless security profiles
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.Comment">
            <summary>
            comment
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.SecurityMode">
            <summary>
            Mode for <see cref="P:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.Mode"/>.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.SecurityMode.DynamicKeys">
            <summary>
            dynamic-keys - WPA mode.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.SecurityMode.None">
            <summary>
            none - Encryption is not used. Encrypted frames are not accepted.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.SecurityMode.StaticKeysOptional">
            <summary>
            static-keys-optional - WEP mode. Support encryption and decryption, but allow also to receive and send unencrypted frames. Device will send unencrypted frames if encryption algorithm is specified as none. 
            Station in static-keys-optional mode will not connect to an access point in static-keys-required mode.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.SecurityMode.StaticKeysRequiered">
            <summary>
            static-keys-required - WEP mode. Do not accept and do not send unencrypted frames. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.Mode">
            <summary>
            mode
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.ManagementProtection">
            <summary>
            management-protection
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.ManagementProtectionKey">
            <summary>
            management-protection-key
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.WpaPreSharedKey">
            <summary>
            wpa-pre-shared-key
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.Wpa2PreSharedKey">
            <summary>
            wpa2-pre-shared-key
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.AuthenticationTypes">
            <summary>
            authentication-types
            Comma seperated string
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.GroupCiphers">
            <summary>
            group-ciphers
            Comma seperated string
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.UnicastCiphers">
            <summary>
            unicast-ciphers
            Comma seperated string
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.SupplicantIdentiy">
            <summary>
            supplicant-identity
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSecurityProfile.GroupKeyUpdate">
            <summary>
            group-key-update - (time interval in the 30s..1h range; default value: 5m) : Controls how often access point updates group key. This key is used to encrypt all broadcast and multicast frames.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Interface.Wireless.WirelessSniffer">
            <summary>
            interface/wireless/sniffer: Wireless sniffer allows to capture frames including Radio header, 802.11 header and other wireless related information. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSniffer.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSniffer.StreamingEnabled">
            <summary>
            streaming-enabled: Whether to stream captured data to specified streaming server
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSniffer.StreamingServer">
            <summary>
            streaming-server: IP address of the streaming server.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSniffer.MultipleChannels">
            <summary>
            multiple-channels
            </summary>
        </member>
        <member name="P:tik4net.Objects.Interface.Wireless.WirelessSniffer.ChannelTime">
            <summary>
            channel-time: Default: 200ms
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.AccountingSnapshot">
            <summary>
            /ip/accounting/snapshot: When a snapshot is made for data collection, the accounting table is cleared and new IP pairs and traffic data are added. The more frequently traffic data is collected, the less likelihood that the IP pairs thereshold limit will be reached.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.AccountingSnapshot.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.AccountingSnapshot.Bytes">
            <summary>
            bytes: total number of bytes, matched by this entry
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.AccountingSnapshot.DstAddress">
            <summary>
            dst-address: destination IP address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.AccountingSnapshot.DstUser">
            <summary>
            dst-user: recipient's name (if applicable)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.AccountingSnapshot.Packets">
            <summary>
            packets: total number of packets, matched by this entry
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.AccountingSnapshot.SrcAddress">
            <summary>
            src-address: source IP address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.AccountingSnapshot.SrcUser">
            <summary>
            src-user: sender's name (if aplicable)
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.AccountingSnapshot.Take(tik4net.ITikConnection)">
            <summary>
            Take new snapshot
            </summary>
            <param name="connection"></param>
        </member>
        <member name="T:tik4net.Objects.Ip.AccountingSnapshotConnectionExtensions">
            <summary>
            Connection extension class for <see cref="T:tik4net.Objects.Ip.AccountingSnapshot"/>
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.AccountingSnapshotConnectionExtensions.TakeAccountingSnapshot(tik4net.ITikConnection)">
            <summary>
            Takes new accounting snapshot (/ip/accounting/snapshot/take)
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.AccountingUncounted">
            <summary>
            /ip/accounting/uncounted: In case no more IP pairs can be added to the accounting table (the accounting threshold has been reached), all traffic that does not belong to any of the known IP pairs is summed together and totals are shown in this menu
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.AccountingUncounted.Bytes">
            <summary>
            bytes: byte count
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.AccountingUncounted.Packets">
            <summary>
            packets: packet count
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.AccountingWebAccess">
            <summary>
            ip/accounting/web-access: The web page report make it possible to use the standard Unix/Linux tool wget to collect the traffic data and save it to a file or to use MikroTik shareware Traffic Counter to display the table. If the web report is enabled and the web page is viewed, the snapshot will be made when connection is initiated to the web page. The snapshot will be displayed on the web page. TCP protocol, used by http connections with the wget tool guarantees that none of the traffic data will be lost. The snapshot image will be made when the connection from wget is initiated. Web browsers or wget should connect to URL: http://routerIP/accounting/ip.cgi
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.AccountingWebAccess.AccessibleViaWeb">
            <summary>
            accessible-via-web: whether the snapshot is available via web
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.AccountingWebAccess.Address">
            <summary>
            address: IP address range that is allowed to access the snapshot
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.DhcpServer.DhcpServerAlert">
            <summary>
             To find any rogue DHCP servers as soon as they appear in your network, DHCP Alert tool can be used. It will monitor the ethernet interface for all DHCP replies and check if this reply comes from a valid DHCP server. If a reply from an unknown DHCP server is detected, alert gets triggered:
            
            When the system alerts about a rogue DHCP server, it can execute a custom script.
            
            As DHCP replies can be unicast, the 'rogue dhcp detector' may not receive any offer to other dhcp clients at all. To deal with this, the rogue dhcp detector acts as a dhcp client as well - it sends out dhcp discover requests once a minute 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerAlert.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerAlert.AlertTimeout">
            <summary>
            alert-timeout: Time after which alert will be forgotten. If after that time the same server is detected, new alert will be generated. If set to none timeout will never expire.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerAlert.Interface">
            <summary>
            interface: Interface, on which to run rogue DHCP server finder.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerAlert.OnAlert">
            <summary>
            on-alert: Script to run, when an unknown DHCP server is detected.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerAlert.ValidServer">
            <summary>
            valid-server: List of MAC addresses of valid DHCP servers.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerAlert.UnknownServer">
            <summary>
            unknown-server: List of MAC addresses of detected unknown DHCP servers. Server is removed from this list after alert-timeout
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.DhcpServer.DhcpServerAlert.ResetAlert(tik4net.ITikConnection)">
            <summary>
            Convert a dynamic lease to a static one
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.DhcpServer.DhcpServerLease">
            <summary>
             DHCP server lease submenu is used to monitor and manage server's leases. The issued leases are showed here as dynamic entries. You can also add static leases to issue a specific IP address to a particular client (identified by MAC address) .
            
            Generally, the DHCP lease it allocated as follows:
            
                an unused lease is in waiting state
                if a client asks for an IP address, the server chooses one
                if the client receives a statically assigned address, the lease becomes offered, and then bound with the respective lease time
                if the client receives a dynamic address (taken from an IP address pool), the router sends a ping packet and waits for answer for 0.5 seconds. During this time, the lease is marked testing
                in the case where the address does not respond, the lease becomes offered and then bound with the respective lease time
                in other case, the lease becomes busy for the lease time (there is a command to retest all busy addresses), and the client's request remains unanswered (the client will try again shortly) 
            
            A client may free the leased address. The dynamic lease is removed, and the allocated address is returned to the address pool. But the static lease becomes busy until the client reacquires the address. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.Address">
            <summary>
            address: Specify IP address (or ip pool) for static lease. If set to 0.0.0.0 - pool from server will be used
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.AddressList">
            <summary>
            address-list: Address list to which address will be added if lease is bound.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.AlwaysBroadcast">
            <summary>
            always-broadcast: Send all replies as broadcasts
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.BlockAccess">
            <summary>
            block-access: Block access for this client
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.ClientId">
            <summary>
            client-id: If specified, must match DHCP 'client identifier' option of the request
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.LeaseTime">
            <summary>
            lease-time: Time that the client may use the address. If set to TimeSpan.Min lease will never expire.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.MacAddress">
            <summary>
            mac-address: If specified, must match the MAC address of the client
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.SrcMacAddress">
            <summary>
            src-mac-address: Source MAC address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.UseSrcMac">
            <summary>
            use-src-mac: Use this source MAC address instead
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.ActiveAddress">
            <summary>
            active-address: Actual IP address for this lease
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.ActiveClientId">
            <summary>
            active-client-id: Actual client-id of the client
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.ActiveMacAddress">
            <summary>
            active-mac-address: Actual MAC address of the client
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.ActiveServer">
            <summary>
            active-server: Actual dhcp server, which serves this client
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.AgentCircuitId">
            <summary>
            agent-circuit-id: Circuit ID of DHCP relay agent. If each character should be valid ASCII text symbol or else this value is displayed as hex dump.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.AgentRemoteId">
            <summary>
            agent-remote-id: Remote ID, set by DHCP relay agent
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.Blocked">
            <summary>
            blocked: Whether the lease is blocked
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.ExpiresAfter">
            <summary>
            expires-after: Time until lease expires
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.HostName">
            <summary>
            host-name: Shows host name option from last received DHCP request
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.Radius">
            <summary>
            radius: Shows if this dynamic lease is authenticated by RADIUS or not
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.RateLimit">
            <summary>
            rate-limit: Sets rate limit for active lease. Format is: rx-rate[/tx-rate] [rx-burst-rate[/tx-burst-rate] [rx-burst-threshold[/tx-burst-threshold] [rx-burst-time[/tx-burst-time]]]]. All rates should be numbers with optional 'k' (1,000s) or 'M' (1,000,000s). If tx-rate is not specified, rx-rate is as tx-rate too. Same goes for tx-burst-rate and tx-burst-threshold and tx-burst-time. If both rx-burst-threshold and tx-burst-threshold are not specified (but burst-rate is specified), rx-rate and tx-rate is used as burst thresholds. If both rx-burst-time and tx-burst-time are not specified, 1s is used as default
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.Server">
            <summary>
            server: Server name which serves this client
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.Status">
            <summary>
            status
            Lease status:
                   
                          waiting - un-used static lease
                          testing - testing whether this address is used or not (only for dynamic leases) by pinging it with timeout of 0.5s 
                          authorizing - waiting for response from radius server 
                          busy - this address is assigned statically to a client or already exists in the network, so it can not be leased 
                          offered - server has offered this lease to a client, but did not receive confirmation from the client 
                          bound - server has received client's confirmation that it accepts offered address, it is using it now and will free the address no later than the lease time 
                   
                
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.Disabled">
            <summary>
            disabled: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.Comment">
            <summary>
            comment: Short description of the client
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.CheckStatus(tik4net.ITikConnection)">
            <summary>
            Check status of a given busy dynamic lease, and free it in case of no response
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.DhcpServer.DhcpServerLease.MakeStatic(tik4net.ITikConnection)">
            <summary>
            Convert a dynamic lease to a static one
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.DhcpServer.DhcpServerNetwork">
            <summary>
            ip/dhcp-server/network : 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerNetwork.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerNetwork.Address">
            <summary>
            address: the network DHCP server(s) will lease addresses from
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerNetwork.BootFileName">
            <summary>
            boot-file-name: Boot file name
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerNetwork.CapsManager">
            <summary>
            caps-manager: Comma-separated list of IP addresses for one or more CAPsMan system managers.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerNetwork.DhcpOption">
            <summary>
            dhcp-option: Add additional DHCP options from  option list.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerNetwork.DnsServer">
            <summary>
            dns-server: the DHCP client will use these as the default DNS servers. Two comma-separated DNS servers can be specified to be used by the DHCP client as primary and secondary DNS servers
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerNetwork.Domain">
            <summary>
            domain: The DHCP client will use this as the 'DNS domain' setting for the network adapter.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerNetwork.Gateway">
            <summary>
            gateway: The default gateway to be used by DHCP Client.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerNetwork.Netmask">
            <summary>
            netmask: The actual network mask to be used by DHCP client. If set to '0' - netmask from network address will be used.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerNetwork.NextServer">
            <summary>
            next-server: IP address of next server to use in bootstrap.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerNetwork.NtpServer">
            <summary>
            ntp-server: the DHCP client will use these as the default NTP servers. Two comma-separated NTP servers can be specified to be used by the DHCP client as primary and secondary NTP servers
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerNetwork.WinsServer">
            <summary>
            wins-server: The Windows DHCP client will use these as the default WINS servers. Two comma-separated WINS servers can be specified to be used by the DHCP client as primary and secondary WINS servers
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerNetwork.Comment">
            <summary>
            comment: Short description of the client
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.DhcpServer.DhcpServerOption">
            <summary>
            ip/dhcp-server/option :  With help of DHCP Option list, it is possible to define additional custom options for DHCP Server to advertise.
                   According to the DHCP protocol, a parameter is returned to the DHCP client only if it requests this parameter, specifying the respective code in DHCP request Parameter-List(code 55) attribute.If the code is not included in Parameter-List attribute, DHCP server will not send it to the DHCP client.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerOption.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerOption.Code">
            <summary>
            code: dhcp option code. All codes are available at http://www.iana.org/assignments/bootp-dhcp-parameters
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerOption.Name">
            <summary>
            name: Descriptive name of the option
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerOption.Value">
            <summary>
            value
            Parameter's value.
            Starting from v6.8 available data types for options are:
             0xXXXX - hex string (works also in v5)
             'XXXXX' - string (works also in v5 but without ' ' around the text)
             $(XXXXX) - variable (currently there are no variables for server)
             '10.10.10.10' - IP address
             s'10.10.10.10' - IP address converted to string
             '10' - decimal number
             s'10' - decimal number converted to string
            Now it is also possible to combine data types into one, for example:
            "0x01'vards'$(HOSTNAME)"
            For example if HOSTNAME is 'kvm', then raw value will be 0x0176617264736b766d
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServer.DhcpServerOption.RawValue">
            <summary>
            raw-value: Read only field which shows raw dhcp option value (the format actually sent out)
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.DhcpServerConfig">
            <summary>
            This sub-menu allows the configuration of how often the DHCP leases will be stored on disk. If they would be saved on disk on every lease change, a lot of disk writes would happen which is very bad for Compact Flash (especially, if lease times are very short). To minimize writes on disk, all changes are saved on disk every store-leases-disk seconds. Additionally leases are always stored on disk on graceful shutdown and reboot. 
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.DhcpServerConfig.StoreLeasesDiskType">
            <summary>
            Values for <see cref="P:tik4net.Objects.Ip.DhcpServerConfig.StoreLeasesDisk"/> (or use specific time)
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.DhcpServerConfig.StoreLeasesDiskType.Immediately">
            <summary>
            never
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.DhcpServerConfig.StoreLeasesDiskType.Never">
            <summary>
            never
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.DhcpServerConfig.StoreLeasesDisk">
            <summary>
            store-leases-disk - How frequently lease changes should be stored on disk
            </summary>
            <seealso cref="T:tik4net.Objects.Ip.DhcpServerConfig.StoreLeasesDiskType"/>
        </member>
        <member name="T:tik4net.Objects.Ip.Dns.DnsCache">
            <summary>
            ip/dns: This menu provides a list with all address (DNS type "A") records stored on the server 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Dns.DnsCache.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Dns.DnsCache.Address">
            <summary>
            address
            IP address of the host
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Dns.DnsCache.Name">
            <summary>
            name
            DNS name of the host
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Dns.DnsCache.Ttl">
            <summary>
            ttl
            remaining time-to-live for the record
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.Dns.DnsCache.Flush(tik4net.ITikConnection)">
            <summary>
            clears internal DNS cache 
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Dns.AccountingSnapshotConnectionExtensions">
            <summary>
            Connection extension class for <see cref="T:tik4net.Objects.Ip.Dns.DnsCache"/>
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.Dns.AccountingSnapshotConnectionExtensions.FlushDnsCache(tik4net.ITikConnection)">
            <summary>
            Takes new accounting snapshot (/ip/accounting/snapshot/take)
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Dns.DnsCacheAll">
            <summary>
            ip/dns: This menu provides a complete list with all DNS records stored on the server 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Dns.DnsCacheAll.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Dns.DnsCacheAll.Data">
            <summary>
            data
            DNS data field. IP address for type "A" records. Other record types may have different contents of the data field (like hostname or arbitrary text)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Dns.DnsCacheAll.Name">
            <summary>
            name
            DNS name of the host
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Dns.DnsCacheAll.Ttl">
            <summary>
            ttl
            remaining time-to-live for the record
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Dns.DnsCacheAll.Type">
            <summary>
            type
            DNS record type
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Dns.DnsStatic">
            <summary>
            ip/dns
            The MikroTik RouterOS has an embedded DNS server feature in DNS cache. It allows you to link the particular domain names with the respective IP addresses and advertize these links to the DNS clients using the router as their DNS server. This feature can also be used to provide fake DNS information to your network clients. For example, resolving any DNS request for a certain set of domains (or for the whole Internet) to your own page.
            
            The server is capable of resolving DNS requests based on POSIX basic regular expressions, so that multiple requets can be matched with the same entry. In case an entry does not conform with DNS naming standards, it is considered a regular expression and marked with ‘R’ flag. The list is ordered and is checked from top to bottom. Regular expressions are checked first, then the plain records. 
            Reverse DNS lookup (Address to Name) of the regular expression entries is not possible. You can, however, add an additional plain record with the same IP address and specify some name for it.
            
            Remember that the meaning of a dot (.) in regular expressions is any character, so the expression should be escaped properly. For example, if you need to match anything within example.com domain but not all the domains that just end with example.com, like www.another-example.com, use name=".*\\.example\\.com"
            
            Regular expression matching is significantly slower than of the plain entries, so it is advised to minimize the number of regular expression rules and optimize the expressions themselves
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Dns.DnsStatic.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Dns.DnsStatic.Address">
            <summary>
            address
            IP address to resolve domain name with
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Dns.DnsStatic.Name">
            <summary>
            name
            DNS name to be resolved to a given IP address. May be a regular expression
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Dns.DnsStatic.Ttl">
            <summary>
            ttl
            time-to-live of the DNS record
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Dns.DnsStatic.Disabled">
            <summary>
            disabled: 
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Firewall.FirewallAddressList">
            <summary>
            /ip/firewall/address-list
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallAddressList.Id">
            <summary>
            .id
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallAddressList.Address">
            <summary>
            address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallAddressList.Comment">
            <summary>
            comment
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallAddressList.Disabled">
            <summary>
            disabled
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallAddressList.Dynamic">
            <summary>
            dynamic
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallAddressList.Timeout">
            <summary>
            timeout  (00:00:00)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallAddressList.List">
            <summary>
            list
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Firewall.FirewallConnection">
            <summary>
            ip/firewall/connection tracking: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.Assured">
            <summary>
            assured: "assured" flag indicates that this connection is assured and that it will not be erased if maximum possible tracked connection count is reached.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.ConnectionMark">
            <summary>
            connection-mark: connection mark set by  mangle rule.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.ConnectionType">
            <summary>
            connection-type: Type of connection, property is empty if connection tracking is unable to determine predefined connection type.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.DstAddress">
            <summary>
            dst-address: Destination address and port (if protocol is port based).
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.GreKey">
            <summary>
            gre-key: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.GreVersion">
            <summary>
            gre-version: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.IcmpCode">
            <summary>
            icmp-code: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.IcmpId">
            <summary>
            icmp-id: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.IcmpType">
            <summary>
            icmp-type: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.P2p">
            <summary>
            p2p: Shows if connection is identified as p2p by firewall p2p matcher.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.Protocol">
            <summary>
            protocol: IP protocol type
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.ReplyDstAddress">
            <summary>
            reply-dst-address: Destination address (and port) expected of return packets. Usually the same as "src-address:port"
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.ReplySrcAddress">
            <summary>
            reply-src-address: Source address (and port) expected of return packets. Usually the same as "dst-address:port"
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.SrcAddress">
            <summary>
            src-address: Source address and port (if protocol is port based).
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.TcpState">
            <summary>
            tcp-state
            Current state of TCP connection&#160;:
             "established"
             "time-wait"
             "close"
             "syn-sent" 
             "syn-received"
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallConnection.Timeout">
            <summary>
            timeout: Time after connection will be removed from connection list.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Firewall.ConnectionTracking">
            <summary>
            Allows to disable or enable connection tracking. Disabling connection tracking will cause several firewall features to stop working. 
            Features affected by connection tracking:
            * NAT
            * firewall: connection-bytes, connection-mark, connection-type, connection-state, connection-limit, connection-rate, layer7-protocol, p2p, new-connection-mark, tarpit, p2p matching in simple queues
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.Enabled">
            <summary>
            enabled: Allows to disable or enable connection tracking. Disabling connection tracking will cause several firewall features to stop working. See the  list of affected features. Starting from v6.0rc2 default value is auto. Which means that connection tracing is disabled until at least one firewall rule is added.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.TcpSynSentTimeout">
            <summary>
            tcp-syn-sent-timeout: TCP SYN timeout.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.TcpSynReceivedTimeout">
            <summary>
            tcp-syn-received-timeout: TCP SYN timeout.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.TcpEstablishedTimeout">
            <summary>
            tcp-established-timeout: Time when established TCP connection times out.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.TcpFinWaitTimeout">
            <summary>
            tcp-fin-wait-timeout: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.TcpCloseWaitTimeout">
            <summary>
            tcp-close-wait-timeout: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.TcpLastAckTimeout">
            <summary>
            tcp-last-ack-timeout: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.TcpTimeWaitTimeout">
            <summary>
            tcp-time-wait-timeout: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.TcpCloseTimeout">
            <summary>
            tcp-close-timeout: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.UdpTimeout">
            <summary>
            udp-timeout: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.UdpStreamTimeout">
            <summary>
            udp-stream-timeout: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.IcmpTimeout">
            <summary>
            icmp-timeout: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.GenericTimeout">
            <summary>
            generic-timeout: Timeout for all other connection entries
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.MaxEntries">
            <summary>
            max-entries: Max amount of entries that connection tracking table can hold. This value depends on installed amount of RAM. Note that system does not create maximum size connection tracking table when it starts, maximum entry amount can increase if situation demands it and router still has free ram left.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.ConnectionTracking.TotalEntries">
            <summary>
            total-entries: Amount of connections that currently connection table holds.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Firewall.FirewallFilter">
            <summary>
            /ip/firewall/filter
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Firewall.FirewallFilter.ActionType">
            <summary>
            Firewall filter action type - <see cref="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Action"/>
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ActionType.Accept">
            <summary>
            accept the packet. Packet is not passed to next firewall rule.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ActionType.AddDstToAddressList">
            <summary>
            add-dst-to-address-list - add destination address to address list specified by address-list parameter
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ActionType.AddSrcToAddressList">
            <summary>
            add-src-to-address-list - add source address to address list specified by address-list parameter
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ActionType.Drop">
            <summary>
            drop - silently drop the packet
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ActionType.Jump">
            <summary>
            jump - jump to the user defined chain specified by the value of jump-target parameter
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ActionType.Log">
            <summary>
            log - add a message to the system log containing following data: in-interface, out-interface, src-mac, protocol, src-ip:port->dst-ip:port and length of the packet.After packet is matched it is passed to next rule in the list, similar as passthrough
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ActionType.Passthrough">
            <summary>
            passthrough - ignore this rule and go to next one (useful for statistics).
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ActionType.Reject">
            <summary>
            reject - drop the packet and send an ICMP reject message
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ActionType.Return">
            <summary>
            return - passes control back to the chain from where the jump took place
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ActionType.Tarpit">
            <summary>
            tarpit - captures and holds TCP connections(replies with SYN/ACK to the inbound TCP SYN packet)
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Firewall.FirewallFilter.ConnectionStateType">
            <summary>
            Firewall filter connection state - <see cref="P:tik4net.Objects.Ip.Firewall.FirewallFilter.ConnectionState"/>
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ConnectionStateType.Empty">
            <summary>
            Default when not filled
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ConnectionStateType.Established">
            <summary>
            established - a packet which belongs to an existing connection
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ConnectionStateType.Invalid">
            <summary>
            invalid - a packet which could not be identified for some reason
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ConnectionStateType.New">
            <summary>
            new - the packet has started a new connection, or otherwise associated with a connection which has not seen packets in both directions.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ConnectionStateType.Related">
            <summary>
            related - a packet which is related to, but not part of an existing connection, such as ICMP errors or a packet which begins FTP data connection
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Firewall.FirewallFilter.ChainType">
            <summary>
            Firewall chain type - <see cref="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Chain"/>
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ChainType.Input">
            <summary>
            input - used to process packets entering the router through one of the interfaces with the destination IP address which is one of the router's addresses. Packets passing through the router are not processed against the rules of the input chain
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ChainType.Forward">
            <summary>
            forward - used to process packets passing through the router
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallFilter.ChainType.Output">
            <summary>
             output - used to process packets originated from the router and leaving it through one of the interfaces.Packets passing through the router are not processed against the rules of the output chain
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Action">
            <summary>
            action: Action to take if packet is matched by the rule: 
            accept - accept the packet.Packet is not passed to next firewall rule.
            add-dst-to-address-list - add destination address to  address list specified by address-list parameter
            add-src-to-address-list - add source address to  address list specified by address-list parameter
            drop - silently drop the packet
            jump - jump to the user defined chain specified by the value of jump-target parameter
            log - add a message to the system log containing following data: in-interface, out-interface, src-mac, protocol, src-ip:port-&gt;dst-ip:port and length of the packet.After packet is matched it is passed to next rule in the list, similar as passthrough
            passthrough - ignore this rule and go to next one (useful for statistics).
            reject - drop the packet and send an ICMP reject message
            return  - passes control back to the chain from where the jump took place
            tarpit - captures and holds TCP connections(replies with SYN/ACK to the inbound TCP SYN packet)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.AddressList">
            <summary>
            address-list: Name of the address list to be used. Applicable if action is add-dst-to-address-list or add-src-to-address-list 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.AddressListTimeout">
            <summary>
            address-list-timeout: Time interval after which the address will be removed from the address list specified by address-list parameter. Used in conjunction with add-dst-to-address-list or add-src-to-address-list actions
            Value of 00:00:00 will leave the address in the address list forever
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Chain">
            <summary>
            chain: Specifies to which chain rule will be added. If the input does not match the name of an already defined chain, a new chain will be created. 
            </summary>
            <seealso cref="T:tik4net.Objects.Ip.Firewall.FirewallFilter.ChainType"/>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Comment">
            <summary>
            comment: Descriptive comment for the rule.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.ConnectionBytes">
            <summary>
            connection-bytes: Matches packets only if a given amount of bytes has been transfered through the particular connection. 0 - means infinity, for example connection-bytes=2000000-0 means that the rule matches if more than 2MB has been transfered through the relevant connection 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.ConnectionLimit">
            <summary>
            connection-limit: Restrict connection limit per address or address block up to and including given value 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.ConnectionMark">
            <summary>
            connection-mark: Matches packets marked via mangle facility with particular connection mark. If no-mark is set, rule will match any unmarked connection.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.ConnectionRate">
            <summary>
            connection-rate: Connection Rate is a firewall matcher that allow to capture traffic based on present speed of the connection.  Read more &gt;&gt;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.ConnectionState">
            <summary>
            connection-state: Interprets the connection tracking analysis data for a particular packet:
            established - a packet which belongs to an existing connection
            invalid - a packet which could not be identified for some reason
            new - the packet has started a new connection, or otherwise associated with a connection which has not seen packets in both directions.
            related - a packet which is related to, but not part of an existing connection, such as ICMP errors or a packet which begins FTP data connection
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.ConnectionType">
            <summary>
            connection-type: Matches packets from related connections based on information from their connection tracking helpers. A relevant connection helper must be enabled under  /ip firewall service-port
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Content">
            <summary>
            content: Match packets that contain specified text
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Dscp">
            <summary>
            dscp: Matches DSCP IP header field.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.DstAddress">
            <summary>
            dst-address: Matches packets which destination is equal to specified IP or falls into specified IP range.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.DstAddressList">
            <summary>
            dst-address-list: Matches destination address of a packet against user-defined address list
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.DstAddressType">
            <summary>
            dst-address-type: Matches destination address type:
            unicast - IP address used for point to point transmission
            local - if dst-address is assigned to one of router's interfaces
            broadcast - packet is sent to all devices in subnet
            multicast - packet is forwarded to defined group of devices
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.DstLimit">
            <summary>
            dst-limit: Matches packets until a given rate is exceeded. Rate is defined as packets per time interval. As opposed to the limit matcher, every flow has it's own limit. Flow is defined by mode parameter. Parameters are written in following format: count[/time],burst,mode[/expire].
            count - packet count per time interval per flow to match
            time - specifies the time interval in which the packet count per flow cannot be exceeded(optional, 1s will be used if not specified)
            burst - initial number of packets per flow to match: this number gets recharged by one every time/count, up to this number
            mode - this parameter specifies what unique fields define flow(src-address, dst-address, src-and-dst-address, dst-address-and-port, addresses-and-dst-port)
            expire - specifies interval after which flow with no packets will be allowed to be deleted(optional)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.DstPort">
            <summary>
            dst-port: List of destination port numbers or port number ranges
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Fragment">
            <summary>
            fragment: Matches fragmented packets. First (starting) fragment does not count. If connection tracking is enabled there will be no fragments as system automatically assembles every packet
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Hotspot">
            <summary>
            hotspot: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.IcmpOptions">
            <summary>
            icmp-options: Matches ICMP type:code fileds
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.InBridgePort">
            <summary>
            in-bridge-port: Actual interface the packet has entered the router, if incoming interface is bridge. Works only if use-ip-firewall is enabled in bridge settings.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.InInterface">
            <summary>
            in-interface: Interface the packet has entered the router
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.IngressPriority">
            <summary>
            ingress-priority: Matches ingress priority of the packet. Priority may be derived from VLAN, WMM or MPLS EXP bit.  Read more&gt;&gt;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Ipv4Options">
            <summary>
            ipv4-options: Matches IPv4 header options.
            any - match packet with at least one of the ipv4 options
            loose-source-routing - match packets with loose source routing option.This option is used to route the internet datagram based on information supplied by the source
            no-record-route - match packets with no record route option.This option is used to route the internet datagram based on information supplied by the source
            no-router-alert - match packets with no router alter option
            no-source-routing - match packets with no source routing option
            no-timestamp - match packets with no timestamp option
            record-route - match packets with record route option
            router-alert - match packets with router alter option
            strict-source-routing - match packets with strict source routing option
            timestamp - match packets with timestamp
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.JumpTarget">
            <summary>
            jump-target: Name of the target chain to jump to. Applicable only if action=jump
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Layer7Protocol">
            <summary>
            layer7-protocol: Layer7 filter name defined in  layer7 protocol menu.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Limit">
            <summary>
            limit: Matches packets at a limited rate. Rule using this matcher will match until this limit is reached. Parameters are written in following format: count[/time],burst.
            count - packet count per time interval to match
            time - specifies the time interval in which the packet count cannot be exceeded(optional, 1s will be used if not specified)
            burst - initial number of packets to match: this number gets recharged by one every time/count, up to this number
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.LogPrefix">
            <summary>
            log-prefix: Adds specified text at the beginning of every log message. Applicable if action=log
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Nth">
            <summary>
            nth: Matches every nth packet.  Read more &gt;&gt;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.OutBridgePort">
            <summary>
            out-bridge-port: Actual interface the packet is leaving the router, if outgoing interface is bridge. Works only if use-ip-firewall is enabled in bridge settings.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.OutInterface">
            <summary>
            out-interface: Interface the packet is leaving the router
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.P2p">
            <summary>
            p2p: Matches packets from various peer-to-peer (P2P) protocols. Does not work on encrypted p2p packets.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.PacketMark">
            <summary>
            packet-mark: Matches packets marked via mangle facility with particular packet mark. If no-mark is set, rule will match any unmarked packet.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.PacketSize">
            <summary>
            packet-size: Matches packets of specified size or size range in bytes.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.PerConnectionClassifier">
            <summary>
            per-connection-classifier: PCC matcher allows to divide traffic into equal streams with ability to keep packets with specific set of options in one particular stream.  Read more &gt;&gt;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Port">
            <summary>
            port: Matches if any (source or destination) port matches the specified list of ports or port ranges. Applicable only if protocol is TCP or UDP
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Protocol">
            <summary>
            protocol: Matches particular IP protocol specified by protocol name or number
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Psd">
            <summary>
            psd: Attempts to detect TCP and UDP scans. Parameters are in following format WeightThreshold, DelayThreshold, LopPortWeight, HighPortWeight
            WeightThreshold - total weight of the latest TCP/UDP packets with different destination ports coming from the same host to be treated as port scan sequence
            DelayThreshold - delay for the packets with different destination ports coming from the same host to be treated as possible port scan subsequence
            LowPortWeight - weight of the packets with privileged(&lt;=1024) destination port
            HighPortWeight - weight of the packet with non-priviliged destination port
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Random">
            <summary>
            random: Matches packets randomly with given probability.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.RejectWith">
            <summary>
            reject-with: Specifies error to be sent back if packet is rejected. Applicable if action=reject
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.RoutingMark">
            <summary>
            routing-mark: Matches packets marked by mangle facility with particular routing mark
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.SrcAddress">
            <summary>
            src-address: Matches packets which source is equal to specified IP or falls into specified IP range.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.SrcAddressList">
            <summary>
            src-address-list: Matches source address of a packet against user-defined  address list
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.SrcAddressType">
            <summary>
            src-address-type: 
            Matches source address type:
            unicast - IP address used for point to point transmission
            local - if address is assigned to one of router's interfaces
            broadcast - packet is sent to all devices in subnet
            multicast - packet is forwarded to defined group of devices
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.SrcPort">
            <summary>
            src-port: List of source ports and ranges of source ports. Applicable only if protocol is TCP or UDP.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.SrcMacAddress">
            <summary>
            src-mac-address: Matches source MAC address of the packet
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.TcpFlags">
            <summary>
            tcp-flags: Matches specified TCP flags
            ack - acknowledging data
            cwr - congestion window reduced
            ece - ECN-echo flag(explicit congestion notification)
            fin - close connection
            psh - push function
            rst - drop connection
            syn - new connection
            urg - urgent data
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.TcpMss">
            <summary>
            tcp-mss: Matches TCP MSS value of an IP packet
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Time">
            <summary>
            time: Allows to create filter based on the packets' arrival time and date or, for locally generated packets, departure time and date
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Ttl">
            <summary>
            ttl: Matches packets TTL value
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Disabled">
            <summary>
            Row disabled property.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Dynamic">
            <summary>
            Row dynamic property.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Invalid">
            <summary>
            Row invalid property.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Bytes">
            <summary>
            Statistics - bytes
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallFilter.Packets">
            <summary>
            Statistics - packets
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Firewall.FirewallMangle">
            <summary>
            /ip/firewall/mangle
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType">
            <summary>
            Mangle action type - <see cref="P:tik4net.Objects.Ip.Firewall.FirewallMangle.Action"/>
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.Accept">
            <summary>
            accept - accept the packet. Packet is not passed to next firewall rule.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.AddDstToAddressList">
            <summary>
            add-dst-to-address-list - add destination address to Address list specified by address-list parameter
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.AddSrcToAddressList">
            <summary>
            add-src-to-address-list - add source address to Address list specified by address-list parameter
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.ChangeDscp">
            <summary>
            change-dscp - change Differentiated Services Code Point (DSCP) field value specified by the new-dscp parameter
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.ChangeMms">
            <summary>
            change-mss - change Maximum Segment Size field value of the packet to a value specified by the new-mss parameter
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.ChangeTtl">
            <summary>
            change-ttl - change Time to Live field value of the packet to a value specified by the new-ttl parameter
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.ClearDf">
            <summary>
            clear-df - clear 'Do Not Fragment' Flag
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.Jump">
            <summary>
            jump - jump to the user defined chain specified by the value of jump-target parameter
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.Log">
            <summary>
            log - add a message to the system log containing following data: in-interface, out-interface, src-mac, protocol, src-ip:port->dst-ip:port and length of the packet.After packet is matched it is passed to next rule in the list, similar as passthrough
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.MarkConnection">
            <summary>
            mark-connection - place a mark specified by the new-connection-mark parameter on the entire connection that matches the rule
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.MarkPacket">
            <summary>
            place a mark specified by the new-packet-mark parameter on a packet that matches the rule
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.MarkRouting">
            <summary>
            
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.Passthrough">
            <summary>
            ignore this rule and go to next one (useful for statistics).
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.Return">
            <summary>
            return - pass control back to the chain from where the jump took place
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.SetPriority">
            <summary>
            set-priority - set priority specified by the new- priority parameter on the packets sent out through a link that is capable of transporting priority(VLAN or WMM - enabled wireless interface). Read more>
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.SniffPc">
            <summary>
            sniff-pc
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.SniffTzsp">
            <summary>
            sniff-tzsp - send packet to a remote TZSP compatible system(such as Wireshark). Set remote target with sniff-target and sniff-target-port parameters(Wireshark recommends port 37008)
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.Firewall.FirewallMangle.ActionType.StripIpv4Options">
            <summary>
            strip-ipv4-options - strip IPv4 option fields from IP header.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.Id">
            <summary>
            .id
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.Chain">
            <summary>
            chain
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.Action">
            <summary>
            action
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.NewPriority">
            <summary>
            new-priorityne
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.Passthrough">
            <summary>
            passthrough
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.SrcAddressList">
            <summary>
            src-address-list
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.Invalid">
            <summary>
            invalid
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.Dynamic">
            <summary>
            dynamic
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.Disabled">
            <summary>
            disabled
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.NewPacketMark">
            <summary>
            new-packet-mark
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.Comment">
            <summary>
            comment
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.DstAddressList">
            <summary>
            dst-address-list
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.Protocol">
            <summary>
            protocol
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.SrcAddress">
            <summary>
            src-address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.DstAddress">
            <summary>
            dst-address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.JumpTarget">
            <summary>
            jump-target
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.AddressList">
            <summary>
            address-list
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallMangle.AddressListTimeout">
            <summary>
            address-list-timeout
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.Firewall.FirewallMangle.ToString">
            <summary>
            ToString override.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Firewall.FirewallNat">
            <summary>
            /ip/firewall/nat
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.Id">
            <summary>
            .id
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.Chain">
            <summary>
            chain
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.Action">
            <summary>
            action
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.ToAddresses">
            <summary>
            to-addresses
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.SrcAddress">
            <summary>
            src-address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.OutInterface">
            <summary>
            out-interface
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.Invalid">
            <summary>
            invalid
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.Dynamic">
            <summary>
            dynamic
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.Disabled">
            <summary>
            disabled
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.Comment">
            <summary>
            comment
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.SrcAddressList">
            <summary>
            src-address-list
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.DstAddress">
            <summary>
            dst-address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.InInterface">
            <summary>
            in-interface
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.Protocol">
            <summary>
            protocol
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.ToPorts">
            <summary>
            to-ports
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.DstPort">
            <summary>
            dst-port (integer [ -integer]: 0..65535; Default: ) | List of destination port numbers or port number ranges
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewallNat.SrcPort">
            <summary>
            src-port (integer [ -integer]: 0..65535; Default: ) | List of destination port numbers or port number ranges
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Firewall.FirewalServicePort">
            <summary>
            /ip/firewall/address-list
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewalServicePort.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewalServicePort.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewalServicePort.Ports">
            <summary>
            name
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Firewall.FirewalServicePort.Disabled">
            <summary>
            disabled
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Hotspot.HotspotActive">
            <summary>
            ip/hotspot/user
            
            This is the menu, where client's user/password information is actually added, additional configuration options for HotSpot users are configured here as well.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotActive.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotActive.Server">
            <summary>
            Server
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotActive.Address">
            <summary>
            address: IP address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotActive.UserName">
            <summary>
            The active user's name
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotActive.MacAddress">
            <summary>
            The connection's Mac Address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotActive.LoginBy">
            <summary>
            The connection's Mac Address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotActive.UpTime">
            <summary>
            The amount of time the user has been connected
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotActive.IdleTime">
            <summary>
            The amount of time the connection has been idle
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotActive.SessionTimeLeft">
            <summary>
            The amount of time left for the session
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotActive.IdleTimeout">
            <summary>
            The amount of time until the connection will timeout if it remains to be idle
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotActive.BytesIn">
            <summary>
            bytes-in: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotActive.BytesOut">
            <summary>
            bytes-out: 
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Hotspot.HotspotIpBinding">
            <summary>
            ip/hotspot/ip-binding
            
            IP-Binding HotSpot menu allows to setup static One-to-One NAT translations, allows to bypass specific HotSpot clients without any authentication, and also allows to block specific hosts and subnets from HotSpot network 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotIpBinding.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotIpBinding.Address">
            <summary>
            address: The original IP address of the client
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotIpBinding.MacAddress">
            <summary>
            mac-address: MAC address of the client
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotIpBinding.Server">
            <summary>
            server
            Name of the HotSpot server.
             all - will be applied to all hotspot servers
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotIpBinding.ToAddress">
            <summary>
            to-address: New IP address of the client, translation occurs on the router (client does not know anything about the translation)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotIpBinding.Type">
            <summary>
            type
            Type of the IP-binding action
             regular - performs One-to-One NAT according to the rule, translates address to to-address
             bypassed - performs the translation, but excludes client from login to the HotSpot
             blocked - translation is not performed and packets from host are dropped
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Hotspot.HotspotUser">
            <summary>
            ip/hotspot/user
            
            This is the menu, where client's user/password information is actually added, additional configuration options for HotSpot users are configured here as well.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.Address">
            <summary>
            address: IP address, when specified client will get the address from the HotSpot one-to-one NAT translations. Address does not restrict HotSpot login only from this address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.Comment">
            <summary>
            comment: descriptive information for HotSpot user, it might be used for scripts to change parameters for specific clients
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.Email">
            <summary>
            email: HotSpot client's e-mail, informational value for the HotSpot user
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.LimitBytesIn">
            <summary>
            limit-bytes-in: Maximal amount of bytes that can be received from the user. User is disconnected from HotSpot after the limit is reached.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.LimitBytesOut">
            <summary>
            limit-bytes-out: Maximal amount of bytes that can be transmitted from the user. User is disconnected from HotSpot after the limit is reached.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.LimitBytesTotal">
            <summary>
            limit-bytes-total: (limit-bytes-in+limit-bytes-out). User is disconnected from HotSpot after the limit is reached.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.LimitUptime">
            <summary>
            limit-uptime: Uptime limit for the HotSpot client, user is disconnected from HotSpot as soon as uptime is reached.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.MacAddress">
            <summary>
            mac-address: Client is allowed to login only from the specified MAC-address. If value is  00:00:00:00:00:00, any mac address is allowed.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.Name">
            <summary>
            name: HotSpot login page username, when MAC-address authentication is used name is configured as client's MAC-address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.Password">
            <summary>
            password: User password
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.Profile">
            <summary>
            profile: User profile configured in  /ip hotspot user profile
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.Routes">
            <summary>
            routes: Routes added to HotSpot gateway when client is connected. The route format dst-address gateway metric (for example, 192.168.1.0/24 192.168.0.1 1)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.Server">
            <summary>
            server: HotSpot server's name to which user is allowed login
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.Disabled">
            <summary>
            disabled: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.BytesIn">
            <summary>
            bytes-in: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.BytesOut">
            <summary>
            bytes-out: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.PacketsIn">
            <summary>
            packets-in: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.PacketsOut">
            <summary>
            packets-out: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUser.Uptime">
            <summary>
            uptime: 
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.Hotspot.HotspotUser.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.Hotspot.HotspotUserProfile">
            <summary>
            ip/hotspot/user: User profile menu is used for common HotSpot client settings. Profiles are like User groups with the same set of settings, rate-limit, filter chain name, etc. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.AddMacCookie">
            <summary>
            add-mac-cookie: Allows to add mac cookie for users. Read more&gt;&gt;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.AddressList">
            <summary>
            address-list: Name of the address list in which users IP address will be added. Useful to mark traffic per user groups for queue tree configurations.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.AddressPool">
            <summary>
            address-pool: IP pool name from which the user will get IP. When user has improper network settings configuration on the computer, HotSpot server makes translation and assigns correct IP address from the pool instead of incorrect one
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.Advertise">
            <summary>
            advertise: Enable forced advertisement popups. After certain interval specific web-page is being displayed for HotSpot users. Advertisement page might be blocked by browsers popup blockers.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.AdvertiseInterval">
            <summary>
            advertise-interval: Set of intervals between advertisement popups. After the list is done, the last value is used for all further advertisements, 10 minutes
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.AdvertiseTimeout">
            <summary>
            advertise-timeout: How long advertisement is shown, before blocking network access for HotSpot client. Connection to Internet is not allowed, when advertisement is not shown.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.AdvertiseUrl">
            <summary>
            advertise-url: List of URLs that is show for advertisement popups. After the last URL is used, list starts from the begining.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.IdleTimeout">
            <summary>
            idle-timeout: Maximal period of inactivity for authorized HotSpot clients. Timer is counting, when there is no traffic coming from that client and going through the router, for example computer is switched off. User is logged out, dropped of the host list, the address used by the user is freed, when timeout is reached.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.IncomingFilter">
            <summary>
            incoming-filter: Name of the firewall chain applied to incoming packets from the users of this profile, jump rule is required from built-in chain (input, forward, output) to chain=hotspot
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.IncomingPacketMark">
            <summary>
            incoming-packet-mark: Packet mark put on incoming packets from every user of this profile
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.KeepaliveTimeout">
            <summary>
            keepalive-timeout: Keepalive timeout for authorized HotSpot clients. Used to detect, that the computer of the client is alive and reachable. User is logged out, when timeout value is reached
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.MacCookieTimeout">
            <summary>
            mac-cookie-timeout: Selects mac-cookie timeout from last login or logout. Read more&gt;&gt;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.Name">
            <summary>
            name: Descriptive name of the profile
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.OnLogin">
            <summary>
            on-login
            Script name to be executed, when user logs in to the HotSpot from the particular profile. It is possible to get username from internal user and interface variable. For example, :log info "User $user logged in!" . If hotspot is set on bridge interface, then interface variable will show bridge as actual interface unless use-ip-firewall' is set in bridge settings.
            List of available variables:
             $user
             $username (alternative var name for $user)
             $address
             $mac-address
             $interface
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.OnLogout">
            <summary>
            on-logout
            Script name to be executed, when user logs out from the HotSpot.It is possible to get username from internal user and interface variable. For example, :log info "User $user logged in!" . If hotspot is set on bridge interface, then interface variable will show bridge as actual interface unless use-ip-firewall is set in bridge settings.
            List of available variables:
             $user
             $username (alternative var name for $user)
             $address
             $mac-address
             $interface
             $cause
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.OpenStatusPage">
            <summary>
            open-status-page
            Option to show status page for user authenticated with mac login method. For example to show advertisement on status page (alogin.html)
             http-login - open status page only for HTTP login (includes cookie and HTTPS) 	
             always - open HTTP status page in case of mac login as well
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.OutgoingFilter">
            <summary>
            outgoing-filter: Name of the firewall chain applied to outgoing packets from the users of this profile, jump rule is required from built-in chain (input, forward, output) to chain=hotspot
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.OutgoingPacketMark">
            <summary>
            outgoing-packet-mark: Packet mark put on outgoing packets from every user of this profile
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.RateLimit">
            <summary>
            rate-limit: Simple dynamic queue is created for user, once it logs in to the HotSpot. Rate-limitation is configured in the following form [rx-rate[/tx-rate] [rx-burst-rate[/tx-burst-rate] [rx-burst-threshold[/tx-burst-threshold] [rx-burst-time[/tx-burst-time] [priority] [rx-rate-min[/tx-rate-min]]]]. For example, to set 1M download, 512k upload for the client, rate-limit=512k/1M
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.SessionTimeout">
            <summary>
            session-timeout: Allowed session time for client.  After this time, the user is logged out unconditionally
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.SharedUsers">
            <summary>
            shared-users: Allowed number of simultaneously logged in users with the same HotSpot username
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.StatusAutorefresh">
            <summary>
            status-autorefresh: HotSpot status page autorefresh interval
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.Hotspot.HotspotUserProfile.TransparentProxy">
            <summary>
            transparent-proxy: Use transparent HTTP proxy for the authorized users of this profile
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.IpAccounting">
            <summary>
            ip/accounting: Authentication, Authorization and Accounting feature provides a possibility of local and/or remote (on RADIUS server) Point-to-Point and HotSpot user management and traffic accounting (all IP traffic passing the router is accounted; local traffic acocunting is an option).
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpAccounting.AccountLocalTraffic">
            <summary>
            account-local-traffic: whether to account the traffic to/from the router itself
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpAccounting.Enabled">
            <summary>
            enabled: whether local IP traffic accounting is enabled
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpAccounting.Threshold">
            <summary>
            threshold: maximum number of IP pairs in the accounting table (maximal value is 8192)
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.IpAccounting.#ctor">
            <summary>
            .ctor
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.IpAddress">
            <summary>
            /ip/address: IP addresses serve for a general host identification purposes in IP networks. Typical (IPv4) address consists of four octets. For proper addressing the router also needs the network mask value, id est which bits of the complete IP address refer to the address of the host, and which - to the address of the network. The network address value is calculated by binary AND operation from network mask and IP address values. It's also possible to specify IP address followed by slash "/" and the amount of bits that form the network address. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpAddress.Id">
            <summary>
            Row .id property.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpAddress.ActualInterface">
            <summary>
            Row actual-interface property.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpAddress.Address">
            <summary>
            address: IP address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpAddress.Interface">
            <summary>
            interface: Interface name the IP address is assigned to
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpAddress.Broadcast">
            <summary>
            broadcast: Broadcasting IP address, calculated by default from an IP address and a network mask. Starting from v5RC6 this parameter is removed
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpAddress.Network">
            <summary>
            network: IP address for the network. For point-to-point links it should be the address of the remote end. Starting from v5RC6 this parameter is configurable only for addresses with /32 netmask (point to point links)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpAddress.Netmask">
            <summary>
            netmask: Delimits network address part of the IP address from the host part
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpAddress.Comment">
            <summary>
            Row comment property.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpAddress.Disabled">
            <summary>
            Row disabled property.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpAddress.Dynamic">
            <summary>
            Row dynamic property.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpAddress.Invalid">
            <summary>
            Row invalid property.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.IpArp">
            <summary>
            ip/arp: Even though IP packets are addressed using  IP addresses, hardware addresses must be used to actually transport data from one host to another.Address Resolution Protocol is used to map OSI level 3 IP addresses to OSI level 2 MAC addreses. Router has a table of currently used ARP entries.Normally the table is built dynamically, but to increase network security, it can be partialy or completely built statically by means of adding static entries.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpArp.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpArp.Address">
            <summary>
            address: IP address to be mapped
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpArp.Interface">
            <summary>
            interface: Interface name the IP address is assigned to
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpArp.MacAddress">
            <summary>
            mac-address: MAC address to be mapped to
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpArp.Dhcp">
            <summary>
            dhcp: Whether ARP entry is added by DHCP server
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpArp.Dynamic">
            <summary>
            dynamic: Whether entry is dynamically created
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpArp.Invalid">
            <summary>
            invalid: Whether entry is not valid
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.IpDhcpClient">
            <summary>
            ip/dhcp client
            The MikroTik RouterOS DHCP client may be enabled on any Ethernet-like interface at a time. The client will accept an address, netmask, default gateway, and two dns server addresses. The received IP address will be added to the interface with the respective netmask. The default gateway will be added to the routing table as a dynamic entry. Should the DHCP client be disabled or not renew an address, the dynamic default route will be removed. If there is already a default route installed prior the DHCP client obtains one, the route obtained by the DHCP client would be shown as invalid.
            RouterOS DHCP cilent asks for following options:
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.IpDhcpClient.AddDefaultRouteType">
            <summary>
            Mode of adding default route. See <see cref="P:tik4net.Objects.Ip.IpDhcpClient.AddDefaultRoute"/>.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.IpDhcpClient.AddDefaultRouteType.Yes">
            <summary>
            yes - adds classless route if received, if not then add default route (old behavior)
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.IpDhcpClient.AddDefaultRouteType.No">
            <summary>
            no
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.IpDhcpClient.AddDefaultRouteType.SpecialClassless">
            <summary>
            adds both classless route if received and default route (MS style)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.AddDefaultRoute">
            <summary>
            add-default-route: Whether to install default route in routing table received from dhcp server. By default RouterOS client complies to RFC and ignores option 3 if classless option 121 is received. To force client not to ignore option 3 set special-classless. This parameter is available in v6rc12+
            yes - adds classless route if received, if not then add default route(old behavior)
            special-classless - adds both classless route if received and default route(MS style)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.ClientId">
            <summary>
            client-id: Corresponds to the settings suggested by the network administrator or ISP. If not specified, client's MAC address will be sent
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.Comment">
            <summary>
            comment: Short description of the client
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.DefaultRouteDistance">
            <summary>
            default-route-distance: Distance of default route. Applicable if add-default-route is set to yes.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.Disabled">
            <summary>
            disabled: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.HostName">
            <summary>
            host-name: Host name of the client sent to a DHCP server. If not specified, client's system identity will be used.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.Interface">
            <summary>
            interface: Interface on which DHCP client will be running.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.UsePeerDns">
            <summary>
            use-peer-dns: Whether to accept the  DNS settings advertised by  DHCP Server. (Will override the settings put in the /ip dns submenu.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.UsePeerNtp">
            <summary>
            use-peer-ntp: Whether to accept the  NTP settings advertised by  DHCP Server. (Will override the settings put in the /system ntp client submenu)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.Address">
            <summary>
            address: IP address and netmask, which is assigned to DHCP Client from the Server
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.DhcpServer">
            <summary>
            dhcp-server: IP address of the DHCP server.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.ExpiresAfter">
            <summary>
            expires-after: Time when the lease expires (specified by the DHCP server).
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.Gateway">
            <summary>
            gateway: IP address of the gateway which is assigned by DHCP server
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.Invalid">
            <summary>
            invalid: Shows whether configuration is invalid.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.Netmask">
            <summary>
            netmask: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.PrimaryDns">
            <summary>
            primary-dns: IP address of the primary DNS server, assigned by the DHCP server
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.PrimaryNtp">
            <summary>
            primary-ntp: IP address of the primary NTP server, assigned by the DHCP server
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.SecondaryDns">
            <summary>
            secondary-dns: IP address of the secondary DNS server, assigned by the DHCP server
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.SecondaryNtp">
            <summary>
            secondary-ntp: IP address of the secondary NTP server, assigned by the DHCP server
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpClient.Status">
            <summary>
            status: Shows the status of DHCP Client
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.IpDhcpClient.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.IpDhcpClient.Release(tik4net.ITikConnection)">
            <summary>
            Release current binding and restart DHCP client
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.IpDhcpClient.Renew(tik4net.ITikConnection)">
            <summary>
            Renew current leases. If the renew operation was not successful, client tries to reinitialize lease (i.e. it starts lease request procedure (rebind) as if it had not received an IP address yet)
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.IpDhcpRelay">
            <summary>
            ip/dhcp relay
            DHCP Relay is just a proxy that is able to receive a DHCP request and resend it to the real DHCP server.
            
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpRelay.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpRelay.AddRelayInfo">
            <summary>
            add-relay-info: Adds DHCP relay agent information if enabled according to RFC 3046.  Agent Circuit ID Sub-option contains mac address of an interface, Agent Remote ID Sub-option contains MAC address of the client from which request was received.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpRelay.DelayThreshold">
            <summary>
            delay-threshold: If secs field in DHCP packet is smaller than delay-threshold, then this packet is ignored
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpRelay.DhcpServer">
            <summary>
            dhcp-server: List of DHCP servers' IP addresses which should the DHCP requests be forwarded to
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpRelay.Interface">
            <summary>
            interface: Interface name the DHCP relay will be working on.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpRelay.LocalAddress">
            <summary>
            local-address: The unique IP address of this DHCP relay needed for DHCP server to distinguish relays. If set to 0.0.0.0 - the IP address will be chosen automatically
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpRelay.RelayInfoRemoteId">
            <summary>
            relay-info-remote-id: relay will use this string instead of client MAC address when constructing Option 82 to be sent to DHCP-server. Option 82 consist of interface packets was received from + client mac address or relay-info-remote-id
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpRelay.Name">
            <summary>
            name: Descriptive name for the relay
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpRelay.Disabled">
            <summary>
            disabled: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpRelay.Comment">
            <summary>
            comment: Short description of the client
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpRelay.Invalid">
            <summary>
            invalid: Shows whether configuration is invalid.
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.IpDhcpRelay.ResetCounters(tik4net.ITikConnection)">
            <summary>
            Reset counters
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.IpDhcpServer">
            <summary>
            ip/dhcp server
            The DHCP (Dynamic Host Configuration Protocol) is used for the easy distribution of IP addresses in a network. The MikroTik RouterOS implementation includes both server and client parts and is compliant with RFC 2131.
            
            The router supports an individual server for each Ethernet-like interface. The MikroTik RouterOS DHCP server supports the basic functions of giving each requesting client an IP address/netmask lease, default gateway, domain name, DNS-server(s) and WINS-server(s) (for Windows clients) information (set up in the DHCP networks submenu)
            
            In order for the DHCP server to work, IP pools must also be configured (do not include the DHCP server's own IP address into the pool range) and the DHCP networks.
            
            It is also possible to hand out leases for DHCP clients using the RADIUS server; the supported parameters for a RADIUS server is as follows:
            </summary>
            <remarks>
            Note: DHCP server requires a real interface to receive raw ethernet packets. If the interface is a Bridge interface, then the Bridge must have a real interface attached as a port to that bridge which will receive the raw ethernet packets. It cannot function correctly on a dummy (empty bridge) interface. 
            </remarks>
        </member>
        <member name="T:tik4net.Objects.Ip.IpDhcpServer.AuthoritativeType">
            <summary>
            Type of <see cref="P:tik4net.Objects.Ip.IpDhcpServer.Authoritative"/>.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.IpDhcpServer.AuthoritativeType.After2secDelay">
            <summary>
            after-2sec-delay - requests with "secs &lt; 2" will be processed as in "no" setting case and requests with "secs &gt;= 2" will be processed as in "yes" case.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.IpDhcpServer.AuthoritativeType.Yes">
            <summary>
            yes - replies to clients request for an address that is not available from this server, dhcp server will send negative acknowledgment (DHCPNAK) 
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.IpDhcpServer.AuthoritativeType.No">
            <summary>
            no - dhcp server ignores clients requests for addresses that are not available from this server
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.IpDhcpServer.AuthoritativeType.After10secDelay">
            <summary>
            after-10sec-delay - requests with "secs &lt; 10" will be processed as in "no" setting case and requests with "secs &gt;= 10" will be processed as in "yes" case.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.IpDhcpServer.BootpSupportType">
            <summary>
            Types of <see cref="P:tik4net.Objects.Ip.IpDhcpServer.BootpSupport"/>.
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.IpDhcpServer.BootpSupportType.Static">
            <summary>
            static - offer only static leases to BOOTP clients 
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.IpDhcpServer.BootpSupportType.None">
            <summary>
            none - do not respond to BOOTP requests 
            </summary>
        </member>
        <member name="F:tik4net.Objects.Ip.IpDhcpServer.BootpSupportType.Dynamic">
            <summary>
            dynamic - offer static and dynamic leases for BOOTP clients
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.AddArp">
            <summary>
            add-arp: Whether to add dynamic ARP entry.  If set to no either  ARP mode should be enabled on that interface or static  ARP entries should be administratively defined in /ip arp submenu.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.AddressPool">
            <summary>
            address-pool:  IP pool, from which to take IP addresses for the clients. If set to static-only, then only the clients that have a static lease (added in  lease submenu) will be allowed.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.AlwaysBroadcast">
            <summary>
            always-broadcast: Always send replies as broadcasts.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.Authoritative">
            <summary>
            authoritative
            Option changes the way how server responds to DHCP requests:
             yes - replies to clients request for an address that is not available from this server, dhcp server will send negative acknowledgment (DHCPNAK) 
             no - dhcp server ignores clients requests for addresses that are not available from this server 
             after-10sec-delay - requests with "secs &lt; 10" will be processed as in "no" setting case and requests with "secs &gt;= 10" will be processed as in "yes" case.
             after-2sec-delay - requests with "secs &lt; 2" will be processed as in "no" setting case and requests with "secs &gt;= 2" will be processed as in "yes" case.
            If all requests with "secs &lt; x" should be ignored, then delay-threshold=x setting should be used.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.BootpSupport">
            <summary>
            bootp-support
            Support for BOOTP clients:
             none - do not respond to BOOTP requests 
             static - offer only static leases to BOOTP clients 
             dynamic - offer static and dynamic leases for BOOTP clients
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.DelayThreshold">
            <summary>
            delay-threshold: If secs field in DHCP packet is smaller than delay-threshold, then this packet is ignored. If set to none - there is no threshold (all DHCP packets are processed)
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.Interface">
            <summary>
            interface: Interface on which server will be running.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.LeaseScript">
            <summary>
            lease-script
            Script that will be executed after lease is assigned or de-assigned. Internal "global" variables that can be used in the script:
             leaseBound - set to "1" if bound, otherwise set to "0"
             leaseServerName -  dhcp server name
             leaseActMAC -  active mac address
             leaseActIP -  active IP address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.LeaseTime">
            <summary>
            lease-time: The time that a client may use the assigned address. The client will try to renew this address after a half of this time and will request a new address after time limit expires.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.Name">
            <summary>
            name: Reference name
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.Relay">
            <summary>
            relay
            The IP address of the relay this DHCP server should process requests from:
             0.0.0.0 - the DHCP server will be used only for direct requests from clients (no DHCP really allowed) 
             255.255.255.255 - the DHCP server should be used for any incoming request from a DHCP relay except for those, which are processed by another DHCP server that exists in the /ip dhcp-server submenu.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.SrcAddress">
            <summary>
            src-address: The address which the DHCP client must send requests to in order to renew an IP address lease. If there is only one static address on the DHCP server interface and the source-address is left as 0.0.0.0, then the static address will be used. If there are multiple addresses on the interface, an address in the same subnet as the range of given addresses should be used.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.UseRadius">
            <summary>
            use-radius: Whether to use RADIUS server for dynamic leases
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDhcpServer.Disabled">
            <summary>
            disabled: Whether DHCP server is disabled or not
            </summary>
        </member>
        <member name="M:tik4net.Objects.Ip.IpDhcpServer.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.IpDns">
            <summary>
            ip/dns: A MikroTik router with DNS feature enabled can be set as a DNS server for any DNS-compliant client. Moreover, MikroTik router can be specified as a primary DNS server under its dhcp-server settings. When the remote requests are enabled, the MikroTik router responds to TCP and UDP DNS requests on port 53. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDns.AllowRemoteRequests">
            <summary>
            allow-remote-requests
            specifies whether to allow network requests
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDns.CacheMaxTtl">
            <summary>
            cache-max-ttl
            specifies maximum time-to-live for cache records. In other words, cache records will expire unconditionally after cache-max-ttl time. Shorter TTL received from DNS servers are respected
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDns.CacheSize">
            <summary>
            cache-size
            specifies the size of DNS cache in KiB
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDns.CacheUsed">
            <summary>
            cache-used
            displays the current cache size in KiB
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpDns.Servers">
            <summary>
            servers
            comma seperated list of DNS server IP addresses
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.IpPool">
            <summary>
            /ip/pool: IP pools containing address pools for DHCP and PPP
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpPool.Id">
            <summary>
            Row .id property.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpPool.Name">
            <summary>
            Row name property.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpPool.Ranges">
            <summary>
            Row ranges property.
            comma seperated list of DNS server IP addresses
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpPool.NextPool">
            <summary>
            Row name property.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ip.IpRoute">
            <summary>
            Access to the data provided by
            /ip/route
            </summary>
            <remarks>
            Please note that even though many properties are not tagged &quot;readonly&quot; they still might be
            read-only for non-static routes (e.g. routes that are inserted by routing protocols).
            </remarks>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.Id">
            <summary>
            .id: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.DstAddress">
            <summary>
            Gets or sets the destination address of the route.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.Gateway">
            <summary>
            Gets or sets the gateway IP address of the route.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.GatewayStatus">
            <summary>
            Gets the gateway status of this route.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.Distance">
            <summary>
            Gets or sets the distance of this route in hops. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.Scope">
            <summary>
            Gets or sets the scope of this route.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.TargetScope">
            <summary>
            Gets or sets the target scope of this route.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.Active">
            <summary>
            Gets a value indicating whether this route is currently active.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.Static">
            <summary>
            Gets a value indicating whether this is a static route.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.Disabled">
            <summary>
            Gets or sets a value indicating whether this route is currently disabled.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.BgpAsPath">
            <summary>
            Gets the BGP autonomuous system path as comma-separated list.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.BgpOrigin">
            <summary>
            Gets the BGP origin that provided this route.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.BgpCommunities">
            <summary>
            Gets the BGP communities of this route.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.ReceivedFrom">
            <summary>
            Gets the info from which peer (peer name as defined for the routing protocol) this route has been received.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.Dynamic">
            <summary>
            Gets a value indicating whether this route is a dynamic route.
            </summary>
            <remarks>
            For dynamic routes most of the writeable properties cannot be set as they're set dynamically.<br/>
            This is, however, currently not reflected by the C# properties.
            </remarks>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.Bgp">
            <summary>
            Gets a value indicating whether this route is a BGP route.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.PrefSrc">
            <summary>
            Gets the preferred source address of this route.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ip.IpRoute.Connect">
            <summary>
            Gets a value indicating whether this route is currently connected.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Log">
            <summary>
            /log
            </summary>
        </member>
        <member name="P:tik4net.Objects.Log.Id">
            <summary>
            Row .id property.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Log.Message">
            <summary>
            Row message property.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Log.Time">
            <summary>
            Row time property.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Log.Topics">
            <summary>
            Row topics property.
            </summary>
        </member>
        <member name="M:tik4net.Objects.Log.Debug(tik4net.ITikConnection,System.String)">
            <summary>
            Writes debug message into mikrotik log.
            </summary>
        </member>
        <member name="M:tik4net.Objects.Log.Info(tik4net.ITikConnection,System.String)">
            <summary>
            Writes info message into mikrotik log.
            </summary>
        </member>
        <member name="M:tik4net.Objects.Log.Warning(tik4net.ITikConnection,System.String)">
            <summary>
            Writes warning message into mikrotik log.
            </summary>
        </member>
        <member name="M:tik4net.Objects.Log.WriteErrorMessage(tik4net.ITikConnection,System.String)">
            <summary>
            Writes error message into mikrotik log.
            </summary>
        </member>
        <member name="T:tik4net.Objects.LogConnectionExtensions">
            <summary>
            Connection extension class for <see cref="T:tik4net.Objects.Log"/>
            </summary>
        </member>
        <member name="M:tik4net.Objects.LogConnectionExtensions.LogDebug(tik4net.ITikConnection,System.String)">
            <summary>
            Writes debug message into mikrotik log.
            </summary>
        </member>
        <member name="M:tik4net.Objects.LogConnectionExtensions.LogInfo(tik4net.ITikConnection,System.String)">
            <summary>
            Writes info message into mikrotik log.
            </summary>
        </member>
        <member name="M:tik4net.Objects.LogConnectionExtensions.LogWarning(tik4net.ITikConnection,System.String)">
            <summary>
            Writes warning message into mikrotik log.
            </summary>
        </member>
        <member name="M:tik4net.Objects.LogConnectionExtensions.LogError(tik4net.ITikConnection,System.String)">
            <summary>
            Writes error message into mikrotik log.
            </summary>
        </member>
        <member name="T:tik4net.Objects.MacAddress">
            <summary>
            MAC address in format 00:00:00:00:00:00
            </summary>
        </member>
        <member name="M:tik4net.Objects.MacAddress.op_Implicit(tik4net.Objects.MacAddress)~System.String">
            <summary>
            MAC as string in format 00:00:00:00:00:00.
            </summary>
        </member>
        <member name="M:tik4net.Objects.MacAddress.op_Implicit(System.String)~tik4net.Objects.MacAddress">
            <summary>
            MAC as string in format 00:00:00:00:00:00.
            </summary>
        </member>
        <member name="P:tik4net.Objects.MacAddress.Address">
            <summary>
            MAC address in format 00:00:00:00:00:00
            </summary>
        </member>
        <member name="M:tik4net.Objects.MacAddress.#ctor">
            <summary>
            Ctor - 00:00:00:00:00:00
            </summary>
        </member>
        <member name="M:tik4net.Objects.MacAddress.#ctor(System.String)">
            <summary>
            Ctor
            </summary>
            <param name="mac">MAC address in format 00:00:00:00:00:00</param>
        </member>
        <member name="T:tik4net.Objects.Ppp.PppAaa">
            <summary>
            ppp/aaa: Settings in this submenu allows to set RADIUS accounting and authentication. Note that RADIUS user database is consulted only if the required username is not found in local user database. 
            https://wiki.mikrotik.com/wiki/Manual:PPP_AAA
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppAaa.Accounting">
            <summary>
            accounting: Enable RADIUS accounting
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppAaa.InterimUpdate">
            <summary>
            interim-update: Interim-Update time interval
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppAaa.UseRadius">
            <summary>
            use-radius: Enable user authentication via RADIUS. If entry in local secret database is not found, then client will be authenticated via RADIUS.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ppp.PppActive">
            <summary>
            ppp/active: This submenu allows to monitor active (connected) users. 
            https://wiki.mikrotik.com/wiki/Manual:PPP_AAA
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppActive.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppActive.Address">
            <summary>
            address: IP address the client got from the server
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppActive.Bytes">
            <summary>
            bytes: Amount of bytes transfered through tis connection. First figure represents amount of transmitted traffic from the router's point of view, while the second one shows amount of received traffic.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppActive.CallerId">
            <summary>
            caller-id: For  PPTP and  L2TP it is the IP address the client connected from. For  PPPoE it is the MAC address the client connected from.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppActive.Encoding">
            <summary>
            encoding: Shows encryption and encoding (separated with '/' if asymmetric) being used in this connection
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppActive.LimitBytesIn">
            <summary>
            limit-bytes-in: Maximal amount of bytes the user is allowed to send to the router.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppActive.LimitBytesOut">
            <summary>
            limit-bytes-out: Maximal amount of bytes the user is allowed to send to the client.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppActive.Name">
            <summary>
            name: User name supplied at authentication stage
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppActive.Packets">
            <summary>
            packets: Amount of packets transfered through tis connection. First figure represents amount of transmitted traffic from the router's point of view, while the second one shows amount of received traffic
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppActive.Service">
            <summary>
            service: Type of service the user is using.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppActive.SessionId">
            <summary>
            session-id: Shows unique client identifier.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppActive.Uptime">
            <summary>
            uptime: User's uptime
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ppp.PppProfile">
            <summary>
            ppp/profile: PPP profiles are used to define default values for user access records stored under /ppp secret submenu. Settings in /ppp secret User Database override corresponding /ppp profile settings except that single IP addresses always take precedence over IP pools when specified as local-address or remote-address parameters. 
            https://wiki.mikrotik.com/wiki/Manual:PPP_AAA
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.AddressList">
            <summary>
            address-list:  Address list name to which ppp assigned address will be added.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.Bridge">
            <summary>
            bridge: Name of the  bridge interface to which ppp interface will be added as slave port. Both tunnel end point (server and client) must be in bridge in order to make this work.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.ChangeTcpMss">
            <summary>
            change-tcp-mss
            Modifies connection MSS settings:
             yes - adjust connection MSS value 
             no - do not adjust connection MSS value 
             default - derive this value from the interface default profile; same as no if this is the interface default profile
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.Comment">
            <summary>
            comment: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.Dhcpv6PdPool">
            <summary>
            dhcpv6-pd-pool: Name of the  IPv6 pool which will be used by dynamically created  DHCPv6-PD server when client connects.  Read more &gt;&gt;
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.DnsServer">
            <summary>
            dns-server: IP address of the DNS server that is supplied to ppp clients
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.IdleTimeout">
            <summary>
            idle-timeout: Specifies the amount of time after which the link will be terminated if there are no activity present. Timeout is not set by default
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.IncomingFilter">
            <summary>
            incoming-filter: Firewall chain name for incoming packets. Specified chain gets control for each packet coming from the client. The ppp chain should be manually added and rules with action=jump jump-target=ppp should be added to other relevant chains in order for this feature to work. For more information look at the  examples section
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.LocalAddress">
            <summary>
            local-address: Tunnel address or name of the  pool from which address is assigned to ppp interface locally.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.Name">
            <summary>
            name: PPP profile name
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.OnlyOne">
            <summary>
            only-one
            Defines whether a user is allowed to have more than one connection at a time
             yes - a user is not allowed to have more than one connection at a time 
             no - the user is allowed to have more than one connection at a time 
             default - derive this value from the interface default profile; same as no if this is the interface default profile
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.OutgoingFilter">
            <summary>
            outgoing-filter: Firewall chain name for outgoing packets. Specified chain gets control for each packet going to the client. The ppp chain should be manually added and rules with action=jump jump-target=ppp should be added to other relevant chains in order for this feature to work. For more information look at the Examples section.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.RateLimit">
            <summary>
            rate-limit: Rate limitation in form of rx-rate[/tx-rate] [rx-burst-rate[/tx-burst-rate] [rx-burst-threshold[/tx-burst-threshold] [rx-burst-time[/tx-burst-time] [priority] [rx-rate-min[/tx-rate-min]]]] from the point of view of the router (so "rx" is client upload, and "tx" is client download). All rates are measured in bits per second, unless followed by optional 'k' suffix (kilobits per second) or 'M' suffix (megabits per second). If tx-rate is not specified, rx-rate serves as tx-rate too. The same applies for tx-burst-rate, tx-burst-threshold and tx-burst-time. If both rx-burst-threshold and tx-burst-threshold are not specified (but burst-rate is specified), rx-rate and tx-rate are used as burst thresholds. If both rx-burst-time and tx-burst-time are not specified, 1s is used as default. Priority takes values 1..8, where 1 implies the highest priority, but 8 - the lowest. If rx-rate-min and tx-rate-min are not specified rx-rate and tx-rate values are used. The rx-rate-min and tx-rate-min values can not exceed rx-rate and tx-rate values.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.RemoteAddress">
            <summary>
            remote-address: Tunnel address or name of the  pool from which address is assigned to remote ppp interface.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.RemoteIpv6PrefixPool">
            <summary>
            remote-ipv6-prefix-pool: Assign prefix from IPv6 pool to the client and install corresponding IPv6 route.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.SessionTimeout">
            <summary>
            session-timeout: Maximum time the connection can stay up. By default no time limit is set.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.UseCompression">
            <summary>
            use-compression
            Specifies whether to use data compression or not.
             yes - enable data compression 
             no - disable data compression
             default - derive this value from the interface default profile; same as no if this is the interface default profile 
            This setting does not affect OVPN tunnels.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.UseEncryption">
            <summary>
            use-encryption
            Specifies whether to use data encryption or not.
             yes - enable data encryption 
             no - disable data encryption
             default - derive this value from the interface default profile; same as no if this is the interface default profile 
             require - explicitly requires encryption
            This setting does not work on OVPN and SSTP tunnels.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.UseIpv6">
            <summary>
            use-ipv6
            Specifies whether to allow IPv6. By default is enabled if IPv6 package is installed.
             yes - enable IPv6 support
             no - disable IPv6 support
             default - derive this value from the interface default profile; same as no if this is the interface default profile 
             require - explicitly requires IPv6 support
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.UseMpls">
            <summary>
            use-mpls
            Specifies whether to allow MPLS over PPP.
             yes - enable MPLS support
             no - disable MPLS support
             default - derive this value from the interface default profile; same as no if this is the interface default profile 
             require - explicitly requires MPLS support
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.UseVjCompression">
            <summary>
            use-vj-compression
            Specifies whether to use Van Jacobson header compression algorithm.
             yes - enable Van Jacobson header compression
             no - disable Van Jacobson header compression 
             default - derive this value from the interface default profile; same as no if this is the interface default profile
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.OnUp">
            <summary>
            on-up
            Execute script on user login-event. These are available variables that are accessible for the event script:
             user
             local-address
             remote-address
             caller-id
             called-id
             interface
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.OnDown">
            <summary>
            on-down: Execute script on user logging off. See on-up for more details
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppProfile.WinsServer">
            <summary>
            wins-server: IP address of the WINS server to supply to Windows clients
            </summary>
        </member>
        <member name="T:tik4net.Objects.Ppp.PppSecret">
            <summary>
            ppp/secret: PPP User Database stores PPP user access records with PPP user profile assigned to each user. 
            https://wiki.mikrotik.com/wiki/Manual:PPP_AAA
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppSecret.Id">
            <summary>
            .id: primary key of row
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppSecret.CallerId">
            <summary>
            caller-id: For  PPTP and  L2TP it is the IP address a client must connect from. For PPPoE it is the MAC address (written in CAPITAL letters) a client must connect from. For ISDN it is the caller's number (that may or may not be provided by the operator) the client may dial-in from
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppSecret.Comment">
            <summary>
            comment: Short description of the user.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppSecret.Disabled">
            <summary>
            disabled: Whether secret will be used.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppSecret.LimitBytesIn">
            <summary>
            limit-bytes-in: Maximal amount of bytes for a session that client can upload.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppSecret.LimitBytesOut">
            <summary>
            limit-bytes-out: Maximal amount of bytes for a session that client can download.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppSecret.LocalAddress">
            <summary>
            local-address: IP address that will be set locally on ppp interface.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppSecret.Name">
            <summary>
            name: Name used for authentication
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppSecret.Password">
            <summary>
            password: Password used for authentication
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppSecret.Profile">
            <summary>
            profile: Which  user profile to use.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppSecret.RemoteAddress">
            <summary>
            remote-address: IP address that will be assigned to remote ppp interface.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppSecret.RemoteIpv6Prefix">
            <summary>
            remote-ipv6-prefix: IPv6 prefix assigned to ppp client. Prefix is added to  ND prefix list enabling  stateless address auto-configuration on ppp interface.Available starting from v5.0.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppSecret.Routes">
            <summary>
            routes: Routes that appear on the server when the client is connected. The route format is: dst-address gateway metric (for example, 10.1.0.0/ 24 10.0.0.1 1). Other syntax is not acceptable since it can be represented in incorrect way. Several routes may be specified separated with commas. This parameter will be ignored for OpenVPN.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Ppp.PppSecret.Service">
            <summary>
            service: Specifies the services that particular user will be able to use.
            </summary>
        </member>
        <member name="T:tik4net.Objects.PropertyInfoExtensions">
            <summary>
            Extension class to implement string fuctions from newer .NET - to support .NET 3.5 build.
            </summary>
        </member>
        <member name="M:tik4net.Objects.PropertyInfoExtensions.SetValue(System.Reflection.PropertyInfo,System.Object,System.Object)">
            <summary>
            <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])"/>.
            </summary>
        </member>
        <member name="M:tik4net.Objects.PropertyInfoExtensions.GetValue(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            See <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])"/>.
            </summary>
        </member>
        <member name="M:tik4net.Objects.PropertyInfoExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            See <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)"/> - takes first of <typeparamref name="TAttribute"/> or null.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Queue.QueueSimple">
            <summary>
            /queue/simple
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Id">
            <summary>
            .id
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Target">
            <summary>
            target
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Parent">
            <summary>
            parent
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Priority">
            <summary>
            priority
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Queue">
            <summary>
            queue
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.LimitAt">
            <summary>
            limit-at
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.MaxLimit">
            <summary>
            max-limit
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.BurstLimit">
            <summary>
            burst-limit
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.BurstThreshold">
            <summary>
            burst-threshold
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.BurstTime">
            <summary>
            burst-time
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Bytes">
            <summary>
            bytes
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.TotalBytes">
            <summary>
            total-bytes
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Packets">
            <summary>
            packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.TotalPackets">
            <summary>
            total-packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Dropped">
            <summary>
            dropped
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.TotalDropped">
            <summary>
            total-dropped
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Rate">
            <summary>
            rate
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.TotalRate">
            <summary>
            total-rate
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.PacketRate">
            <summary>
            packet-rate
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.TotalPacketRate">
            <summary>
            total-packet-rate
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.QueuedPackets">
            <summary>
            queued-packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.TotalQueuedPackets">
            <summary>
            total-queued-packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.QueuedBytes">
            <summary>
            queued-bytes
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.TotalQueuedBytes">
            <summary>
            total-queued-bytes
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Invalid">
            <summary>
            invalid
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Dynamic">
            <summary>
            dynamic
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Disabled">
            <summary>
            disabled
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Dst">
            <summary>
            dst
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.TotalMaxLimit">
            <summary>
            total-max-limit
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.TotalQueue">
            <summary>
            total-queue
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueSimple.Comment">
            <summary>
            comment
            </summary>
        </member>
        <member name="T:tik4net.Objects.Queue.QueueTree">
            <summary>
            /queue/tree
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.Id">
            <summary>
            .id
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.Parent">
            <summary>
            parent
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.PacketMark">
            <summary>
            packet-mark
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.LimitAt">
            <summary>
            limit-at
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.Queue">
            <summary>
            queue
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.Priority">
            <summary>
            priority
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.MaxLimit">
            <summary>
            max-limit
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.BurstLimit">
            <summary>
            burst-limit
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.BurstThreshold">
            <summary>
            burst-threshold
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.BurstTime">
            <summary>
            burst-time
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.Bytes">
            <summary>
            bytes
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.Packets">
            <summary>
            packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.Dropped">
            <summary>
            dropped
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.Rate">
            <summary>
            rate
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.PacketRate">
            <summary>
            packet-rate
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.QueuedPackets">
            <summary>
            queued-packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.QueuedBytes">
            <summary>
            queued-bytes
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.Invalid">
            <summary>
            invalid
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.Disabled">
            <summary>
            disabled
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueTree.Comment">
            <summary>
            comment
            </summary>
        </member>
        <member name="T:tik4net.Objects.Queue.QueueType">
            <summary>
            /queue/type
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.Id">
            <summary>
            .id
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.Kind">
            <summary>
            kind
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.PfifoLimit">
            <summary>
            pfifo-limit
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.Default">
            <summary>
            default
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.SfqPerturb">
            <summary>
            sfq-perturb
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.SfqAllot">
            <summary>
            sfq-allot
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.RedLimit">
            <summary>
            red-limit
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.RedMinThreshold">
            <summary>
            red-min-threshold
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.RedMaxThreshold">
            <summary>
            red-max-threshold
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.RedBurst">
            <summary>
            red-burst
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.RedAvgPacket">
            <summary>
            red-avg-packet
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.PcqRate">
            <summary>
            pcq-rate
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.PcqLimit">
            <summary>
            pcq-limit
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.PcqClassifier">
            <summary>
            pcq-classifier
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.PcqTotalLimit">
            <summary>
            pcq-total-limit
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.PcqBurstRate">
            <summary>
            pcq-burst-rate
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.PcqBurstThreshold">
            <summary>
            pcq-burst-threshold
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.PcqBurstTime">
            <summary>
            pcq-burst-time
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.PcqSrcAddressMask">
            <summary>
            pcq-src-address-mask
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.PcqDstAddressMask">
            <summary>
            pcq-dst-address-mask
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.PcqSrcAddress6Mask">
            <summary>
            pcq-src-address6-mask
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.PcqDstAddress6Mask">
            <summary>
            pcq-dst-address6-mask
            </summary>
        </member>
        <member name="P:tik4net.Objects.Queue.QueueType.MqPfifoLimit">
            <summary>
            mq-pfifo-limit
            </summary>
        </member>
        <member name="T:tik4net.Objects.Routing.Bgp.BgpAdvertisements">
            <summary>
            Mikrotik BGP advertisements as provided by
            /routing/bgp/advertisements
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpAdvertisements.Id">
            <summary>
            .id: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpAdvertisements.Peer">
            <summary>
            Gets or sets the name of the BGP peer from which the advertisement has been received.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpAdvertisements.Prefix">
            <summary>
            Gets or sets the advertised IP prefix.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpAdvertisements.Nexthop">
            <summary>
            Gets or sets the next-hop host IP.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpAdvertisements.AsPath">
            <summary>
            Gets are sets the autonomuous system path to the prefix.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpAdvertisements.Origin">
            <summary>
            Gets or sets the origin that provided the info of this advertisement.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpAdvertisements.Communities">
            <summary>
            communities: 
            </summary>
        </member>
        <member name="T:tik4net.Objects.Routing.Bgp.BgpInstance">
            <summary>
            The BGP instance as provided by
            /routing/bgp/instance
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpInstance.Id">
            <summary>
            .id: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpInstance.Name">
            <summary>
            Gets or sets the name of this BGP instance.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpInstance.As">
            <summary>
            Gets or sets the autonomuous system that this instance belongs to.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpInstance.RouterId">
            <summary>
            Gets or sets the ID of the router.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpInstance.RedistributeConnected">
            <summary>
            Gets or sets a value indicating whether to redistribute connected routes.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpInstance.RedistributeStatic">
            <summary>
            Gets or sets a value indicating whether to redistribute redistribute static routes.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpInstance.RedistributeRip">
            <summary>
            Gets or sets a value indicating whether to redistribute redistribute routes received via RIP. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpInstance.RedistributeOspf">
            <summary>
            Gets or sets a value indicating whether to redistribute redistribute routes received via OSPF.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpInstance.RedistributeOtherBgp">
            <summary>
            Gets or sets a value indicating whether to redistribute redistribute routes received via other BGP instances.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpInstance.ClientToClientReflection">
            <summary>
            Gets or sets a value indicating whether to do client-to-client reflection.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpInstance.IgnoreAsPathLen">
            <summary>
            Gets or sets a value indicating whether to ignore the autonomuous system path length.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpInstance.Default">
            <summary>
            Gets or sets a value indicating whether this is the default instance.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpInstance.Disabled">
            <summary>
            Gets or sets a value indicating whether this instance is disabled.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Routing.Bgp.BgpNetwork">
            <summary>
            Access to the data provided by
            /routing/bgp/network
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpNetwork.Id">
            <summary>
            .id: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpNetwork.Network">
            <summary>
            Gets or sets the BGP advirtised network in CIDR format (e.g. 44.224.10.64/29).
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpNetwork.Synchronize">
            <summary>
            Gets or sets a value indicating whether to synchronize this network.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpNetwork.Disabled">
            <summary>
            Gets or sets a value indicating whether this network is disabled.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Routing.Bgp.BgpPeer">
            <summary>
            Access to the data provided by
            /routing/bgp/peer
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.Id">
            <summary>
            .id: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.Name">
            <summary>
            Gets or sets the name of the peer.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.Instance">
            <summary>
            Gets or sets the BGP instance that this peer belongs to.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.RemoteAddress">
            <summary>
            Gets or sets the remote IP address of the peer.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.RemoteAs">
            <summary>
            Gets or sets the the remote peer's autonomuous system number.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.NexthopChoice">
            <summary>
            Gets or sets the next-hop choice (default, force-self, propagate).
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.Multihop">
            <summary>
            Gets or sets a value indicating whether this is a multi-hop peer.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.RouteReflect">
            <summary>
            Gets or sets a value indicating whether to reflect the route.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.HoldTime">
            <summary>
            Gets or sets the hold-time of this peer.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.Ttl">
            <summary>
            Gets or sets the time-to-live setting of this peer.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.AddressFamilies">
            <summary>
            Gets or sets a comma-separated list of address families (ip, ipv6, l2vpn, vpn4, l2vpn-cisco) that are routed to/by this peer.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.DefaultOriginate">
            <summary>
            Gets or sets the value whether default originate (never, if-installed, always).
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.RemovePrivateAs">
            <summary>
            Gets or sets a value indicating whether to remove autonomuous system having private AS numbers.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.AsOverride">
            <summary>
            Gets or sets a value indicating whether to override the autonomuous system numbers.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.Passive">
            <summary>
            Gets or sets a value indicating whether to this peer as passive.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.UseBfd">
            <summary>
            Gets or sets a value indicating whether to use Bidirectional Forwarding Detection with this peer.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.RemoteId">
            <summary>
            Gets or sets the peer's remote ID (usually some IP address).
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.LocalAddress">
            <summary>
            Gets or sets the local IP address that is used to communicate to this peer.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.Uptime">
            <summary>
            Gets the uptime of the link to this peer.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.PrefixCount">
            <summary>
            Gets the number of prefixes advertised by this peer.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.UpdatesSent">
            <summary>
            Gets the number of updates that have been sent to this peer. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.UpdatesReceived">
            <summary>
            Gets the number of updates that have been received from this peer. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.WithdrawnSent">
            <summary>
            Gets the number of withdrawals that have been sent to this peer. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.WithdrawnReceived">
            <summary>
            Gets the number of withdrawals that have been received form this peer. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.RemoteHoldTime">
            <summary>
            remote-hold-time: 
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.UsedHoldTime">
            <summary>
            Gets the actually used hold-time of the link to this peer.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.UsedKeepaliveTime">
            <summary>
            Gets the actually used keepalive-time of the link to this peer.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.RefreshCapability">
            <summary>
            Gets a value indicating whether this peer has the refresh capability.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.As4Capability">
            <summary>
            Gets a value indicating whether this peer has the AS4 capability.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.State">
            <summary>
            Gets the state of the link to this peer.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.Established">
            <summary>
            Gets a value indicating whether the link to this peer is currently established.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Routing.Bgp.BgpPeer.Disabled">
            <summary>
            Gets a value indicating whether this peer is disabled.
            </summary>
        </member>
        <member name="T:tik4net.Objects.System.SystemIdentity">
            <summary>
            Gets the info provided by
            /system/identity
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemIdentity.Name">
            <summary>
            Gets or sets the name of the system.
            </summary>
        </member>
        <member name="T:tik4net.Objects.System.SystemResource">
            <summary>
            /system/resource (single R/O entity)
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.Uptime">
            <summary>
            uptime
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.Version">
            <summary>
            version
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.BuildTime">
            <summary>
            build-time
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.FreeMemory">
            <summary>
            free-memory
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.TotalMemory">
            <summary>
            total-memory
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.Cpu">
            <summary>
            cpu
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.CpuCount">
            <summary>
            cpu-count
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.CpuFrequency">
            <summary>
            cpu-frequency
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.CpuLoad">
            <summary>
            cpu-load
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.FreeHddSpace">
            <summary>
            free-hdd-space
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.TotalHddSpace">
            <summary>
            total-hdd-space
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.WriteSectSinceReboot">
            <summary>
            write-sect-since-reboot
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.WriteSectTotal">
            <summary>
            write-sect-total
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.ArchitectureName">
            <summary>
            architecture-name
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.BoardName">
            <summary>
            board-name
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemResource.Platform">
            <summary>
            platform
            </summary>
        </member>
        <member name="T:tik4net.Objects.System.SystemRouterboard">
            <summary>
            Gets the infor provided by
            /system/routerboard 
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemRouterboard.Routerboard">
            <summary>
            Gets a value indicating whether this hardware is a RouterBoard.
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemRouterboard.BoardName">
            <summary>
            Gets the name of the board. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemRouterboard.Model">
            <summary>
            Gets the model of the board.
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemRouterboard.SerialNumber">
            <summary>
            Gets the serial number of the board.
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemRouterboard.FirmwareType">
            <summary>
            Gets the firmware type of the board.
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemRouterboard.FactoryFirmware">
            <summary>
            Gets the firmware version that was flashed by factory on delivery.
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemRouterboard.CurrentFirmware">
            <summary>
            Gets the firmware version that is currently running.
            </summary>
        </member>
        <member name="P:tik4net.Objects.System.SystemRouterboard.UpgradeFirmware">
            <summary>
            Gets the firmware version that is available for upgrade.
            </summary>
        </member>
        <member name="T:tik4net.Objects.TikCommandExtensions">
            <summary>
            Main mapper extension - extends <see cref="T:tik4net.ITikCommand"/>.
            Supports Load metods - maps command results to entities.
            </summary>
        </member>
        <member name="M:tik4net.Objects.TikCommandExtensions.LoadList``1(tik4net.ITikCommand)">
            <summary>
            Loads entity list from given command.
            </summary>
            <typeparam name="TEntity">Loaded entities type.</typeparam>
            <returns>List (or empty list) of loaded entities.</returns>
            <seealso cref="M:tik4net.Objects.TikCommandExtensions.LoadSingle``1(tik4net.ITikCommand)"/>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
        </member>
        <member name="M:tik4net.Objects.TikCommandExtensions.LoadSingle``1(tik4net.ITikCommand)">
            <summary>
            Alias to <see cref="M:tik4net.Objects.TikCommandExtensions.LoadList``1(tik4net.ITikCommand)"/>, ensures that result contains exactly one row.
            </summary>
            <param name="command">Command</param>
            <typeparam name="TEntity">Loaded entities type.</typeparam>
            <returns>Loaded single entity.</returns>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
            <exception cref="T:tik4net.TikNoSuchItemException">Invalid item (bad id/name etc.). Mikrotik API message: 'no such item'.</exception>
            <exception cref="T:tik4net.TikCommandAmbiguousResultException">More than one row returned.</exception>
        </member>
        <member name="M:tik4net.Objects.TikCommandExtensions.LoadSingleOrDefault``1(tik4net.ITikCommand)">
            <summary>
            Alias to <see cref="M:tik4net.Objects.TikCommandExtensions.LoadList``1(tik4net.ITikCommand)"/> without filter, ensures that result contains exactly one row.
            </summary>
            <typeparam name="TEntity">Loaded entities type.</typeparam>
            <param name="command">Command</param>
            <returns>Loaded single entity or null.</returns>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
            <exception cref="T:tik4net.TikCommandAmbiguousResultException">More than one row returned.</exception>
        </member>
        <member name="M:tik4net.Objects.TikCommandExtensions.LoadWithDuration``1(tik4net.ITikCommand,System.Int32)">
            <summary>
            Calls command and reads all returned rows for given <paramref name="durationSec"/> period.
            After this period calls cancell to mikrotik router and returns all loaded rows.
            Throws exception if any 'trap' row occurs.
            </summary>
            <typeparam name="TEntity">Loaded entities type.</typeparam>
            <param name="command">Tik command executed to load.</param>
            <param name="durationSec">Loading period.</param>
            <returns>List (or empty list) of loaded entities.</returns>
            <seealso cref="M:tik4net.ITikCommand.ExecuteListWithDuration(System.Int32)"/>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
        </member>
        <member name="M:tik4net.Objects.TikCommandExtensions.LoadAsync``1(tik4net.ITikCommand,System.Action{``0},System.Action{System.Exception},System.Action)">
            <summary>
            Calls command and starts backgroud reading thread. After that returns control to calling thread.
            All read rows are returned as callbacks (<paramref name="onLoadItemCallback"/>, <paramref name="onExceptionCallback"/>) from loading thread.
            REMARKS: if you want to propagate loaded values to GUI, you should use some kind of synchronization or Invoke, because 
            callbacks are called from non-ui thread.
            The running load can be terminated by <see cref="M:tik4net.ITikCommand.Cancel"/> or <see cref="M:tik4net.ITikCommand.CancelAndJoin"/> call. 
            Command is returned as result of the method.
            </summary>
            <typeparam name="TEntity">Loaded entities type.</typeparam>
            <param name="command">Tik command executed to load.</param>
            <param name="onLoadItemCallback">Callback called for each loaded !re row</param>
            <param name="onExceptionCallback">Callback called when error occurs (!trap row is returned)</param>
            <param name="onDoneCallback">Callback called at the end of command run (!done row is returned). Usefull for cleanup operations at the end of command lifecycle. You can also use synchronous call <see cref="M:tik4net.ITikCommand.CancelAndJoin"/> from calling thread and do cleanup after it.</param>
        </member>
        <member name="T:tik4net.Objects.TikConnectionExtensions">
            <summary>
            Main mapper extension - extends <see cref="T:tik4net.ITikConnection"/>.
            Supports CRUD and move functions.
            <para>
            <list type="bullet">
            <listheader>Load:</listheader>
            <item><see cref="M:tik4net.Objects.TikConnectionExtensions.LoadAll``1(tik4net.ITikConnection)"/></item>
            <item><see cref="M:tik4net.Objects.TikConnectionExtensions.LoadById``1(tik4net.ITikConnection,System.String)"/></item>
            <item><see cref="M:tik4net.Objects.TikConnectionExtensions.LoadList``1(tik4net.ITikConnection,tik4net.ITikCommandParameter[])"/></item>
            <item><see cref="M:tik4net.Objects.TikConnectionExtensions.LoadWithDuration``1(tik4net.ITikConnection,System.Int32,tik4net.ITikCommandParameter[])"/></item>
            <item><see cref="M:tik4net.Objects.TikConnectionExtensions.LoadAsync``1(tik4net.ITikConnection,System.Action{``0},System.Action{System.Exception},tik4net.ITikCommandParameter[])"/></item>
            </list>
            </para>
            
            <para>
            <list type="bullet">
            <listheader>Save:</listheader>
            <item><see cref="M:tik4net.Objects.TikConnectionExtensions.Save``1(tik4net.ITikConnection,``0,System.Collections.Generic.IEnumerable{System.String})"/> (Insert/Update)</item>
            <item><see cref="M:tik4net.Objects.TikConnectionExtensions.SaveListDifferences``1(tik4net.ITikConnection,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})"/> (Insert/Update/Delete)</item>
            </list>
            </para>
            
            <para>
            <list type="bullet">
            <listheader>Delete:</listheader>
            <item><see cref="M:tik4net.Objects.TikConnectionExtensions.Delete``1(tik4net.ITikConnection,``0)"/></item>
            </list>
            </para>
            
            <para>
            <list type="bullet">
            <listheader>Move:</listheader>
            <item><see cref="M:tik4net.Objects.TikConnectionExtensions.Move``1(tik4net.ITikConnection,``0,``0)"/></item>
            <item><see cref="M:tik4net.Objects.TikConnectionExtensions.MoveToEnd``1(tik4net.ITikConnection,``0)"/></item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.LoadAll``1(tik4net.ITikConnection)">
            <summary>
            Alias to <see cref="M:tik4net.Objects.TikConnectionExtensions.LoadList``1(tik4net.ITikConnection,tik4net.ITikCommandParameter[])"/> without filter.
            </summary>
            <typeparam name="TEntity">Loaded entities type.</typeparam>
            <param name="connection">Tik connection used to load.</param>
            <returns>Loaded list of entities.</returns>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.LoadSingle``1(tik4net.ITikConnection,tik4net.ITikCommandParameter[])">
            <summary>
            Alias to <see cref="M:tik4net.Objects.TikConnectionExtensions.LoadList``1(tik4net.ITikConnection,tik4net.ITikCommandParameter[])"/> optionaly with filter, ensures that result contains exactly one row.
            </summary>
            <typeparam name="TEntity">Loaded entities type.</typeparam>
            <param name="connection">Tik connection used to load.</param>
            <param name="filterParameters">Optional list of filter parameters (interpreted as connected with AND)</param>
            <returns>Loaded single entity.</returns>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
            <exception cref="T:tik4net.TikNoSuchItemException">Invalid item (bad id/name etc.). Mikrotik API message: 'no such item'.</exception>
            <exception cref="T:tik4net.TikCommandAmbiguousResultException">More than one row returned.</exception>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.LoadSingleOrDefault``1(tik4net.ITikConnection,tik4net.ITikCommandParameter[])">
            <summary>
            Alias to <see cref="M:tik4net.Objects.TikConnectionExtensions.LoadList``1(tik4net.ITikConnection,tik4net.ITikCommandParameter[])"/> without filter, ensures that result contains exactly one row.
            </summary>
            <typeparam name="TEntity">Loaded entities type.</typeparam>
            <param name="connection">Tik connection used to load.</param>
            <param name="filterParameters">Optional list of filter parameters (interpreted as connected with AND)</param>
            <returns>Loaded single entity or null.</returns>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
            <exception cref="T:tik4net.TikCommandAmbiguousResultException">More than one row returned.</exception>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.LoadById``1(tik4net.ITikConnection,System.String)">
            <summary>
            Loads entity with specified id. Returns null if not found.
            </summary>
            <typeparam name="TEntity">Loaded entities type.</typeparam>
            <param name="connection">Tik connection used to load.</param>
            <param name="id">Entity id.</param>
            <returns>Loaded entity or null.</returns>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
            <exception cref="T:tik4net.TikNoSuchItemException">Invalid item (bad id/name etc.). Mikrotik API message: 'no such item'.</exception>
            <exception cref="T:tik4net.TikCommandAmbiguousResultException">More than one row returned.</exception>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.LoadByName``1(tik4net.ITikConnection,System.String)">
            <summary>
            Loads entity with specified name. Returns null if not found.
            </summary>
            <typeparam name="TEntity">Loaded entities type.</typeparam>
            <param name="connection">Tik connection used to load.</param>
            <param name="name">Entity name.</param>
            <returns>Loaded entity or null.</returns>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
            <exception cref="T:tik4net.TikNoSuchItemException">Invalid item (bad id/name etc.). Mikrotik API message: 'no such item'.</exception>
            <exception cref="T:tik4net.TikCommandAmbiguousResultException">More than one row returned.</exception>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.LoadList``1(tik4net.ITikConnection,tik4net.ITikCommandParameter[])">
            <summary>
            Loads entity list. Could be filtered with <paramref name="filterParameters"/>.
            </summary>
            <typeparam name="TEntity">Loaded entities type.</typeparam>
            <param name="connection">Tik connection used to load.</param>
            <param name="filterParameters">Optional list of filter parameters (interpreted as connected with AND)</param>
            <returns>List (or empty list) of loaded entities.</returns>
            <seealso cref="M:tik4net.Objects.TikCommandExtensions.LoadList``1(tik4net.ITikCommand)"/>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
            <exception cref="T:tik4net.TikCommandAmbiguousResultException">More than one row returned.</exception>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.LoadWithDuration``1(tik4net.ITikConnection,System.Int32,tik4net.ITikCommandParameter[])">
            <summary>
            Calls command and reads all returned rows for given <paramref name="durationSec"/> period.
            After this period calls cancell to mikrotik router and returns all loaded rows.
            Throws exception if any 'trap' row occurs.
            </summary>
            <typeparam name="TEntity">Loaded entities type.</typeparam>
            <param name="connection">Tik connection used to load.</param>
            <param name="durationSec">Loading period.</param>
            <param name="parameters">Optional list of filters/parameters (interpreted as connected with AND)</param>
            <returns>List (or empty list) of loaded entities.</returns>
            <seealso cref="M:tik4net.Objects.TikCommandExtensions.LoadWithDuration``1(tik4net.ITikCommand,System.Int32)"/>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.LoadAsync``1(tik4net.ITikConnection,System.Action{``0},System.Action{System.Exception},tik4net.ITikCommandParameter[])">
            <summary>
            Calls command and starts backgroud reading thread. After that returns control to calling thread.
            All read rows are returned as callbacks (<paramref name="onLoadItemCallback"/>, <paramref name="onExceptionCallback"/>) from loading thread.
            REMARKS: if you want to propagate loaded values to GUI, you should use some kind of synchronization or Invoke, because 
            callbacks are called from non-ui thread.
            The running load can be terminated by <see cref="M:tik4net.ITikCommand.Cancel"/> or <see cref="M:tik4net.ITikCommand.CancelAndJoin"/> call. 
            Command is returned as result of the method.
            </summary>
            <typeparam name="TEntity">Loaded entities type.</typeparam>
            <param name="connection">Tik connection used to load.</param>
            <param name="onLoadItemCallback">Callback called for each loaded !re row</param>
            <param name="onExceptionCallback">Callback called when error occurs (!trap row is returned)</param>
            <param name="parameters">Optional list of filters/parameters (interpreted as connected with AND)</param>
            <returns><see cref="T:tik4net.ITikCommand"/> which is already running the async load operation. You can cancel the running operation by <see cref="M:tik4net.ITikCommand.Cancel"/> method call.</returns>
            <seealso cref="M:tik4net.Objects.TikCommandExtensions.LoadAsync``1(tik4net.ITikCommand,System.Action{``0},System.Action{System.Exception},System.Action)"/>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.Save``1(tik4net.ITikConnection,``0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Saves entity to mikrotik router. Does insert (/add) whan entity has empty id and update(/set + /unset) when id is present).
            Behavior of save is modified via <see cref="T:tik4net.Objects.TikPropertyAttribute"/> on properties.
            See <see cref="P:tik4net.Objects.TikPropertyAttribute.DefaultValue"/>, <see cref="P:tik4net.Objects.TikPropertyAttribute.UnsetOnDefault"/>.
            </summary>
            <typeparam name="TEntity">Saved entitie type.</typeparam>
            <param name="connection">Tik connection used to save.</param>
            <param name="entity">Saved entity.</param>
            <param name="usedFieldsFilter">List of field names (on mikrotik) which should be modified. If is not null, only listed fields will be modified.</param>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
            <exception cref="T:tik4net.TikNoSuchItemException">Invalid item (bad id/name etc.). Mikrotik API message: 'no such item'.</exception>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.SaveListDifferences``1(tik4net.ITikConnection,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            List version of <see cref="M:tik4net.Objects.TikConnectionExtensions.Save``1(tik4net.ITikConnection,``0,System.Collections.Generic.IEnumerable{System.String})"/> method. Saves differences between given <paramref name="modifiedList"/> and <paramref name="unmodifiedList"/>.
            Typical usage is: Load, create list clone, modify list, save diferences.
            </summary>
            <example>
            var list = connection.LoadList{FirewallAddressList}(connection.CreateParameter("list", listName), connection.CreateParameter("address", ipAddress));
            var listClonedBackup = list.CloneEntityList(); //creates clone of all entities in list
            list.Add(new FirewallAddressList() {Address = ipAddress, List = listName, }); //insert
            list[0].Comment = "test comment"; //update
            list.RemoveAt(1); //delete
            connection.SaveListDifferences(list, listClonedBackup);
            </example>
            <typeparam name="TEntity">Saved entitie type.</typeparam>
            <param name="connection">Tik connection used to save.</param>
            <param name="modifiedList">List with modifications.</param>
            <param name="unmodifiedList">Original (cloned) unmodified list.</param>
            <seealso cref="M:tik4net.Objects.TikEntityObjectsExtensions.CloneEntity``1(``0)"/>
            <seealso cref="M:tik4net.Objects.TikEntityObjectsExtensions.CloneEntityList``1(System.Collections.Generic.IEnumerable{``0})"/>
            <seealso cref="M:tik4net.Objects.TikConnectionExtensions.Save``1(tik4net.ITikConnection,``0,System.Collections.Generic.IEnumerable{System.String})"/>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.Delete``1(tik4net.ITikConnection,``0)">
            <summary>
            Deletes entity (.id is the key) on mikrotik router.
            </summary>
            <typeparam name="TEntity">Deleted entity type.</typeparam>
            <param name="connection">Tik connection used to delete entity.</param>
            <param name="entity">Entity to be deleted (.id property is the key)</param>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
            <exception cref="T:tik4net.TikNoSuchItemException">Invalid item (bad id/name etc.). Mikrotik API message: 'no such item'.</exception>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.DeleteAll``1(tik4net.ITikConnection)">
            <summary>
            Deletes all entities of given type on mikrotik router.
            </summary>
            <typeparam name="TEntity">Deleted entity type.</typeparam>
            <param name="connection">Tik connection used to delete entity.</param>
            <returns>Number of deleted entities. </returns>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.Move``1(tik4net.ITikConnection,``0,``0)">
            <summary>
            Moves given <paramref name="entityToMove"/> before given <paramref name="entityToMoveBefore"/>.
            </summary>
            <typeparam name="TEntity">Moved entity type.</typeparam>
            <param name="connection">Tik connection used to move entity.</param>
            <param name="entityToMove">Entity to be moved.</param>
            <param name="entityToMoveBefore">Entity before which is given <paramref name="entityToMove"/> moved.</param>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
            <exception cref="T:tik4net.TikNoSuchItemException">Invalid item (bad id/name etc.). Mikrotik API message: 'no such item'.</exception>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.MoveToEnd``1(tik4net.ITikConnection,``0)">
            <summary>
            Moves given <paramref name="entityToMove"/> to the end (make it last entity in the list).
            </summary>
            <typeparam name="TEntity">Moved entity type.</typeparam>
            <param name="connection">Tik connection used to move entity.</param>
            <param name="entityToMove">Entity to be moved.</param>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
            <exception cref="T:tik4net.TikNoSuchItemException">Invalid item (bad id/name etc.). Mikrotik API message: 'no such item'.</exception>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.CreateMerge``1(tik4net.ITikConnection,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates merge object. This object should be setuped (via fluent API) and finaly <see cref="M:tik4net.Objects.TikListMerge`1.Save"/> must be called.
            </summary>
            <typeparam name="TEntity">Type of the entity in list to merge.</typeparam>
            <param name="connection">Tik connection used to update state of entities.</param>
            <param name="expected">Expected state on mikrotik router (Missing items will be added, others will be updated if are different).</param>
            <param name="original">Actual state on mikrotik router. (Surplus items will be deleted).</param>
            <returns>Merge object, that should be setuped (via fluent API) and finaly <see cref="M:tik4net.Objects.TikListMerge`1.Save"/> must be called on this object to perform operations on mikrotik router.</returns>
            <example>
            var original = connection.LoadAll{QueueTree}().Where(q => q.Name == "Q1" || q.Name == "Q2" || q.Name.StartsWith("Q3")); //just subset of actual QT items
            string unique = Guid.NewGuid().ToString();
            List{QueueTree} expected = new List{QueueTree}()  //new expected subset of QT items
               {
                   new QueueTree() { Name = "Q1", Parent = "global", PacketMark = "PM1" },
                   new QueueTree() { Name = "Q2", Parent = "global", PacketMark = "PM2", Comment = unique }, //always update
                   new QueueTree() { Name = "Q3 " + unique, Parent = "global", PacketMark = "PM3" }, // always insert + delete from previous run
               };
            connection.CreateMerge(expected, original) //access to merge object            
               .WithKey(queue => queue.Name) // items with the same name are the same (name is the key)
               .Field(q => q.Parent)         // we are updating just Parent, PacketMark and Comment fields
               .Field(q => q.PacketMark)
               .Field(q => q.Comment)
               .Save();                      // modify mikrotik router QueueTree 
            </example>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.ExecuteNonQuery(tik4net.ITikConnection,System.String,tik4net.ITikCommandParameter[])">
            <summary>
            Excecutes given <paramref name="commandText"/> on router and ensures that operation was sucessfull.
            </summary>
            <param name="connection">Tik connection used to load.</param>
            <param name="commandText">Command text</param>
            <param name="parameters">Optional list of parameters</param>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
            <exception cref="T:tik4net.TikNoSuchItemException">Invalid item (bad id/name etc.). Mikrotik API message: 'no such item'.</exception>
            <exception cref="T:tik4net.TikAlreadyHaveSuchItemException">Duplicit item (duplicit id/name etc.). Mikrotik API message: 'already have such item'.</exception>
        </member>
        <member name="M:tik4net.Objects.TikConnectionExtensions.ExecuteScalar(tik4net.ITikConnection,System.String,tik4net.ITikCommandParameter[])">
            <summary>
            Executes given <paramref name="commandText"/> on router and ensures that operation returns one value (=ret parameter), which is returned as result.
            </summary>
            <param name="connection">Tik connection used to load.</param>
            <param name="commandText">Command text</param>
            <param name="parameters">Optional list of parameters</param>
            <returns>Value returned by router.</returns>
            <exception cref="T:System.InvalidOperationException">Connection or command text not set. Comand is already running. Connection is not opened. Invalid response from API.</exception>
            <exception cref="T:tik4net.TikCommandTrapException">!trap returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandFatalException">!fatal returned from API call.</exception>
            <exception cref="T:tik4net.TikCommandUnexpectedResponseException">Unexpected response from mikrotik (multiple returned rows, missing !done row etc.)</exception>
            <exception cref="T:tik4net.TikNoSuchCommandException">Invalid mikrotik command (syntax error). Mikrotik API message: 'no such command'</exception>
            <exception cref="T:tik4net.TikNoSuchItemException">Invalid item (bad id/name etc.). Mikrotik API message: 'no such item'.</exception>
            <exception cref="T:tik4net.TikAlreadyHaveSuchItemException">Duplicit item (duplicit id/name etc.). Mikrotik API message: 'already have such item'.</exception>
        </member>
        <member name="T:tik4net.Objects.TikEntityAttribute">
            <summary>
            Attribute that is used to decorate tik entity class.
            </summary>
            <seealso cref="T:tik4net.Objects.TikConnectionExtensions"/>
            <seealso cref="T:tik4net.Objects.TikEntityObjectsExtensions"/>
            <seealso cref="T:tik4net.Objects.TikEntityAttribute"/>
        </member>
        <member name="P:tik4net.Objects.TikEntityAttribute.EntityPath">
            <summary>
            Gets the entity path in API notation (/ip/firewall/mangle).
            </summary>
            <value>The entity path.</value>
        </member>
        <member name="P:tik4net.Objects.TikEntityAttribute.LoadCommand">
            <summary>
            Sufix added to entity path when loading. eq. /print
            Default: /print
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikEntityAttribute.LoadDefaultParameneterFormat">
            <summary>
            Parameter format (when parameter itself is set to <see cref="F:tik4net.TikCommandParameterFormat.Default"/>) during  load operation.
            Default: <see cref="F:tik4net.TikCommandParameterFormat.Filter"/>.
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikEntityAttribute.IsReadOnly">
            <summary>
            If the whole entity is R/O.
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikEntityAttribute.IsOrdered">
            <summary>
            If entity list is ordered (move operation does make sense)
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikEntityAttribute.IncludeDetails">
            <summary>
            If entity should be loaded with =detail= option.
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikEntityAttribute.IncludeProplist">
            <summary>
            If entity fields should be listed explicitly via .proplist option.
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikEntityAttribute.IsSingleton">
            <summary>
            If entity exists in single instance.
            </summary>
        </member>
        <member name="M:tik4net.Objects.TikEntityAttribute.#ctor(System.String,System.String,tik4net.TikCommandParameterFormat,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:tik4net.Objects.TikEntityAttribute"/> class.
            </summary>
            <param name="entityPath">The entity path in API notation (/ip/firewall/mangle).</param>
            <param name="loadCommand">Sufix added to entity path when loading. eq. /print</param>
            <param name="loadDefaultParameneterFormat">Parameter format (when parameter itself is set to <see cref="F:tik4net.TikCommandParameterFormat.Default"/>) during  load operation.</param>
            <param name="isReadOnly">If the whole entity is R/O.</param>
            <param name="isOrdered">If entity list is ordered (move operation does make sense).</param>
            <param name="includeDetails">If entity should be loaded with =detail= option.</param>
            <param name="isSingleton">If entity exists in single instance</param>
        </member>
        <member name="M:tik4net.Objects.TikEntityAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:tik4net.Objects.TikEntityAttribute"/> class. ReadOnly = false, IncludeDetails=false.
            </summary>
            <param name="entityPath">The entity path in API notation (/ip/firewall/mangle).</param>
        </member>
        <member name="T:tik4net.Objects.TikEntityMetadata">
            <summary>
            Metadata of one mikrotik entity (scaned via reflection of entity class and its attributes).
            Entity class must be decorated by <seealso cref="T:tik4net.Objects.TikEntityAttribute"/> and every managed property
            should be decoraded by <seealso cref="T:tik4net.Objects.TikPropertyAttribute"/>.
            </summary>
            <seealso cref="T:tik4net.Objects.TikEntityAttribute"/>
            <seealso cref="T:tik4net.Objects.TikPropertyAttribute"/>
            <seealso cref="T:tik4net.Objects.TikEntityMetadataCache"/>
        </member>
        <member name="P:tik4net.Objects.TikEntityMetadata.Properties">
            <summary>
            All properties of the entity which are decorated by <seealso cref="T:tik4net.Objects.TikPropertyAttribute"/>
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikEntityMetadata.EntityPath">
            <summary>
            entity path in API notation (e.q. /system/resource)
            </summary>
            <seealso cref="P:tik4net.Objects.TikEntityAttribute.EntityPath"/>
        </member>
        <member name="P:tik4net.Objects.TikEntityMetadata.LoadCommand">
            <summary>
            Sufix added to entity path when loading. eq. /print
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikEntityMetadata.LoadDefaultParameneterFormat">
            <summary>
            Parameter format (when parameter itself is set to <see cref="F:tik4net.TikCommandParameterFormat.Default"/>) during  load operation.
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikEntityMetadata.IsReadOnly">
            <summary>
            If the whole entity is R/O.
            </summary>
            <seealso cref="P:tik4net.Objects.TikEntityAttribute.IsReadOnly"/>
        </member>
        <member name="P:tik4net.Objects.TikEntityMetadata.IsOrdered">
            <summary>
            If entity list is ordered (move operation does make sense).
            </summary>
            <seealso cref="P:tik4net.Objects.TikEntityAttribute.IsOrdered"/>
        </member>
        <member name="P:tik4net.Objects.TikEntityMetadata.IncludeDetails">
            <summary>
            If =detail= option should be used during entity load.
            </summary>
            <seealso cref="P:tik4net.Objects.TikEntityAttribute.IncludeDetails"/>
        </member>
        <member name="P:tik4net.Objects.TikEntityMetadata.IncludeProplist">
            <summary>
            If all <see cref="P:tik4net.Objects.TikEntityMetadata.Properties"/> should be explicitly listed via .proplist option.
            </summary>
            <seealso cref="P:tik4net.Objects.TikEntityAttribute.IncludeProplist"/>
        </member>
        <member name="P:tik4net.Objects.TikEntityMetadata.IsSingleton">
            <summary>
            If entity exists in single instance.
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikEntityMetadata.IdProperty">
            <summary>
            The .id property of the entity or null (if no property is decorated by <see cref="P:tik4net.Objects.TikPropertyAttribute.FieldName"/> = .id).
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikEntityMetadata.HasIdProperty">
            <summary>
            Determines if entity has property for .id field (property which is decorated by <see cref="P:tik4net.Objects.TikPropertyAttribute.FieldName"/> = .id)
            </summary>
        </member>
        <member name="M:tik4net.Objects.TikEntityMetadata.#ctor(System.Type)">
            <summary>
            .ctor. Performs reflection scan ot given entity type and its properties.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <remarks>Slow operation.</remarks>
        </member>
        <member name="T:tik4net.Objects.TikEntityMetadataCache">
            <summary>
            Cache for extracted metadata about mikrotik entities for entity mapper.
            Main reason is to improve performance via caching slow reflection operations.
            </summary>
            <remarks>Cache is thread-safe.</remarks>
            <seealso cref="T:tik4net.Objects.TikEntityAttribute"/>
            <seealso cref="T:tik4net.Objects.TikPropertyAttribute"/>
            <seealso cref="T:tik4net.Objects.TikEntityMetadata"/>
        </member>
        <member name="M:tik4net.Objects.TikEntityMetadataCache.GetMetadata``1">
            <summary>
            Gets (or creates new) <typeparamref name="TEntity"/> metadata via reflection of its attributes.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <returns>Entity metadata used by entity mapper.</returns>
        </member>
        <member name="T:tik4net.Objects.TikEntityObjectsExtensions">
            <summary>
            Extension methods related to mikrotik entities.
            </summary>
        </member>
        <member name="M:tik4net.Objects.TikEntityObjectsExtensions.CloneEntityList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates clone of all entities in list by their fields. Usefull for storing state before list modification - <see cref="M:tik4net.Objects.TikConnectionExtensions.SaveListDifferences``1(tik4net.ITikConnection,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})"/>. 
            </summary>
            <typeparam name="TEntity">Type of entity in list</typeparam>
            <param name="originalList">Original list to be cloned</param>
            <returns>Instance of new list with cloned items.</returns>
            <remarks>Clones only fields marked with <see cref="T:tik4net.Objects.TikPropertyAttribute"/>.</remarks>
            <seealso cref="M:tik4net.Objects.TikEntityObjectsExtensions.CloneEntity``1(``0)"/>
        </member>
        <member name="M:tik4net.Objects.TikEntityObjectsExtensions.CloneEntity``1(``0)">
            <summary>
            Crates clone of given entity by its fields.
            </summary>
            <typeparam name="TEntity">Type of entity.</typeparam>
            <param name="entity">Entity to be cloned.</param>
            <returns>Cloned instance of entity.</returns>
            <remarks>Clones only fields marked with <see cref="T:tik4net.Objects.TikPropertyAttribute"/>.</remarks>
        </member>
        <member name="M:tik4net.Objects.TikEntityObjectsExtensions.EntityEquals``1(``0,``0,System.Boolean)">
            <summary>
            Compares two instances of entity by their fields. 
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity1">First entity.</param>
            <param name="entity2">Seconf entity.</param>
            <param name="skipIdCompare">If is true, than coparation of .id property is skipped.</param>
            <returns>True if all entity fields are equals.</returns>
            <remarks>Compares only fields marked with <see cref="T:tik4net.Objects.TikPropertyAttribute"/>.</remarks>
        </member>
        <member name="M:tik4net.Objects.TikEntityObjectsExtensions.GetDifferentFields``1(``0,``0,System.Boolean)">
            <summary>
            Compares two instances of entity by their fields and returns different fields (field names).
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity1">First entity.</param>
            <param name="entity2">Seconf entity.</param>
            <param name="skipIdCompare">If is true, than coparation of .id property is skipped.</param>
            <returns>List of different fields.</returns>
            <remarks>Compares only fields marked with <see cref="T:tik4net.Objects.TikPropertyAttribute"/>.</remarks>
        </member>
        <member name="M:tik4net.Objects.TikEntityObjectsExtensions.IdEquals``1(``0,``0)">
            <summary>
            Compares IDs (.id) of two instances of entity. 
            </summary>
            <param name="entity1">First entity.</param>
            <param name="entity2">Seconf entity.</param>
            <returns>True if ids are equal.</returns>
        </member>
        <member name="M:tik4net.Objects.TikEntityObjectsExtensions.EntityToString``1(``0)">
            <summary>
            Creates entity string description (for logging, etc.) by its fields.
            </summary>
            <typeparam name="TEntity">Type of entity.</typeparam>
            <param name="entity">Entity instance.</param>
            <returns>Readable description of entity and its fields.</returns>
        </member>
        <member name="T:tik4net.Objects.TikEntityPropertyAccessor">
            <summary>
            Accessor to one tik entity property.
            </summary>
            <seealso cref="T:tik4net.Objects.TikPropertyAttribute"/>
            <seealso cref="T:tik4net.Objects.TikEntityMetadata"/>
        </member>
        <member name="P:tik4net.Objects.TikEntityPropertyAccessor.PropertyName">
            <summary>
            Name of the property in C# code of the entity.
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikEntityPropertyAccessor.PropertyType">
            <summary>
            Type of the property in C# code of the entity.
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikEntityPropertyAccessor.FieldName">
            <summary>
            Name of the field in mikrotik router.
            </summary>
            <seealso cref="P:tik4net.Objects.TikPropertyAttribute.FieldName"/>
        </member>
        <member name="P:tik4net.Objects.TikEntityPropertyAccessor.IsReadOnly">
            <summary>
            If property (and mikrotik field) is R/O.
            </summary>
            <seealso cref="P:tik4net.Objects.TikPropertyAttribute.IsReadOnly"/>
        </member>
        <member name="P:tik4net.Objects.TikEntityPropertyAccessor.IsMandatory">
            <summary>
            If property (and mikrotik field) are madatory during load - should be present in resultset.
            </summary>
            <seealso cref="P:tik4net.Objects.TikPropertyAttribute.IsMandatory"/>
        </member>
        <member name="P:tik4net.Objects.TikEntityPropertyAccessor.DefaultValue">
            <summary>
            Defaukt value of the property.
            </summary>
            <seealso cref="P:tik4net.Objects.TikPropertyAttribute.DefaultValue"/>
        </member>
        <member name="P:tik4net.Objects.TikEntityPropertyAccessor.UnsetOnDefault">
            <summary>
            If value should be unset during update (save modified entity) when property contains default value (set to default will be called when false).
            </summary>
            <seealso cref="P:tik4net.Objects.TikPropertyAttribute.UnsetOnDefault"/>
        </member>
        <member name="M:tik4net.Objects.TikEntityPropertyAccessor.#ctor(tik4net.Objects.TikEntityMetadata,System.Reflection.PropertyInfo)">
            <summary>
            .ctor
            </summary>
            <param name="owner">Metadata of the owning entity.</param>
            <param name="propertyInfo">PropertyInfo of the accessed  entity property.</param>
        </member>
        <member name="M:tik4net.Objects.TikEntityPropertyAccessor.ToString">
            <summary>
            Readable description of the accessor.
            </summary>
            <returns>Readable description of the accessor.</returns>
        </member>
        <member name="M:tik4net.Objects.TikEntityPropertyAccessor.HasDefaultValue(System.Object)">
            <summary>
            Returns if accessed property of given <paramref name="entity"/> contains null or <see cref="P:tik4net.Objects.TikEntityPropertyAccessor.DefaultValue"/>.
            </summary>
            <param name="entity"></param>
            <returns>True if accessed property od given entity contains default value.</returns>
        </member>
        <member name="M:tik4net.Objects.TikEntityPropertyAccessor.SetEntityValue(System.Object,System.String)">
            <summary>
            Sets the value of accesed property on given <paramref name="entity"/>.
            </summary>
            <param name="entity">Entity to be modified.</param>
            <param name="propValue">New property value.</param>
        </member>
        <member name="M:tik4net.Objects.TikEntityPropertyAccessor.GetEntityValue(System.Object)">
            <summary>
            Gets the value of accesed property from given <paramref name="entity"/>.
            </summary>
            <param name="entity">Entity to read peroperty value from.</param>
            <returns>Property value from giuven entity</returns>
        </member>
        <member name="T:tik4net.Objects.TikEnumAttribute">
            <summary>
            Attribute to set mikrotik code for enum values used as field types on mikrotik objects.
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikEnumAttribute.Value">
            <summary>
            Mikrotik enum value.
            </summary>
        </member>
        <member name="M:tik4net.Objects.TikEnumAttribute.#ctor(System.String)">
            <summary>
            .ctor
            </summary>
            <param name="value">Mikrotik enum value (name).</param>
        </member>
        <member name="T:tik4net.Objects.TikListMerge`1">
            <summary>
            Provides support to merge actual state on mikrotik (list of entities) with expected state (list of entities).
            Provides fluent like api to setup merge operation.
            <see cref="M:tik4net.Objects.TikListMerge`1.Save"/> method should be called to perform modifications on mikrotik router.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:tik4net.Objects.TikListMerge`1.MergeOperation">
            <summary>
            Operation performed during merge process with single entity.
            </summary>
        </member>
        <member name="F:tik4net.Objects.TikListMerge`1.MergeOperation.Insert">
            <summary>
            Create new entity
            </summary>
        </member>
        <member name="F:tik4net.Objects.TikListMerge`1.MergeOperation.Update">
            <summary>
            Update existing entity
            </summary>
        </member>
        <member name="F:tik4net.Objects.TikListMerge`1.MergeOperation.Delete">
            <summary>
            Delete existing entity
            </summary>
        </member>
        <member name="M:tik4net.Objects.TikListMerge`1.WithKey(System.Func{`0,System.String})">
            <summary>
            Defines string representation of entity key (entities are the same, if extracted key has the same value).
            </summary>
            <param name="keyExtractor">Func to extract key value from entity</param>
            <returns>this (fluent like API)</returns>
        </member>
        <member name="M:tik4net.Objects.TikListMerge`1.WithDmlLogCallback(System.Action{tik4net.Objects.TikListMerge{`0}.MergeOperation,`0,`0})">
            <summary>
            Register DML log callback {operation, oldValue, newValue} - called on each DML operation.
            </summary>
            <param name="dmlLogCallback">log callback called on each DML operation - {operation, oldValue, newValue}</param>
            <returns>this (fluent like API)</returns>
        </member>
        <member name="M:tik4net.Objects.TikListMerge`1.WithMoveLogCallback(System.Action{`0,System.Int32,System.Int32})">
            <summary>
            Register move log callback {entity, oldIndex, newIndex} - called on each move operation.
            </summary>
            <param name="moveLogCallback">log callback called on each move operation - {entity, oldIndex, newIndex}</param>
            <returns>this (fluent like API)</returns>
        </member>
        <member name="M:tik4net.Objects.TikListMerge`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Defines field that will be merged (only defined fields will be compared and updated).
            </summary>
            <typeparam name="TProperty">Field property.</typeparam>
            <param name="fieldExpression">Field extraction expression. example: (entity=}entity.Name)</param>
            <returns>this (fluent like API)</returns>
        </member>
        <member name="M:tik4net.Objects.TikListMerge`1.JustForInsertField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Defines field that will be used just when creating new instance of entity (<see cref="F:tik4net.Objects.TikListMerge`1.MergeOperation.Insert"/>) (not used for update and compare).
            </summary>
            <typeparam name="TProperty">Field property.</typeparam>
            <param name="fieldExpression">Field extraction expression. example: (entity=}entity.Name)</param>
            <returns>this (fluent like API)</returns>
        </member>
        <member name="M:tik4net.Objects.TikListMerge`1.WithOperationFilter(System.Func{tik4net.Objects.TikListMerge{`0}.MergeOperation,`0,`0,System.Boolean})">
            <summary>
            Register filter callback {operation, oldValue, newValue} - called on each DML operation. Operation will be performed only if true is returned. Otherwise DML operation will be skipped.
            </summary>
            <param name="filterCallback">log callback called on each DML operation - {operation, oldValue, newValue}. Operation will be performed only if true is returned. Otherwise DML operation will be skipped.</param>
            <returns>this (fluent like API)</returns>
        </member>
        <member name="M:tik4net.Objects.TikListMerge`1.Save">
            <summary>
            Performs update operations on mikrotik router.
            Items which are present in 'expected' and are not present in 'original' will be created on mikrotik router.
            Items which are present in both 'expected' and 'original' will be compared and updated (if are different - see <see cref="M:tik4net.Objects.TikListMerge`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/>, <see cref="M:tik4net.Objects.TikListMerge`1.WithKey(System.Func{`0,System.String})"/>).
            Items which are not present in 'expected' and are present in 'original' will be deleted from mikrotik router.
            </summary>
            <returns>List of final entities on mikrotik router after save operation (with ids).</returns>
            <seealso cref="M:tik4net.Objects.TikListMerge`1.Simulate(System.Int32@,System.Int32@,System.Int32@,System.Int32@)"/>
        </member>
        <member name="M:tik4net.Objects.TikListMerge`1.Simulate(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Calculate update operations on mikrotik router.
            Items which are present in 'expected' and are not present in 'original' will be counted as created.
            Items which are present in both 'expected' and 'original' will be compared and counted as updated (if are different - see <see cref="M:tik4net.Objects.TikListMerge`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/>, <see cref="M:tik4net.Objects.TikListMerge`1.WithKey(System.Func{`0,System.String})"/>).
            Items which are not present in 'expected' and are present in 'original' will be counted as deleted.
            </summary>
            <param name="insertCnt">Number of items to be created.</param>
            <param name="updateCnt">Number of items to be updated.</param>
            <param name="deleteCnt">Number of items to be deleted.</param>
            <param name="moveCnt">Number of items to be moved (note: inserted items are always inserted at the end of list and moved to the right place by move operation).</param>
            <returns>Expected list of final entities on mikrotik router after save operation.</returns>
            <seealso cref="M:tik4net.Objects.TikListMerge`1.Save"/>
        </member>
        <member name="M:tik4net.Objects.TikListMerge`1.Simulate(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Calculate update operations on mikrotik router.
            Items which are present in 'expected' and are not present in 'original' will be counted as created.
            Items which are present in both 'expected' and 'original' will be compared and counted as updated (if are different - see <see cref="M:tik4net.Objects.TikListMerge`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/>, <see cref="M:tik4net.Objects.TikListMerge`1.WithKey(System.Func{`0,System.String})"/>).
            Items which are not present in 'expected' and are present in 'original' will be counted as deleted.
            </summary>
            <param name="insertCnt">Number of items to be created.</param>
            <param name="updateCnt">Number of items to be updated.</param>
            <param name="deleteCnt">Number of items to be deleted.</param>
            <returns>Expected list of final entities on mikrotik router after save operation.</returns>
            <seealso cref="M:tik4net.Objects.TikListMerge`1.Save"/>
        </member>
        <member name="T:tik4net.Objects.TikPropertyAttribute">
            <summary>
            Attribute to mark object property as readable/writable from/to mikrotik router.
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikPropertyAttribute.FieldName">
            <summary>
            Gets the name of the property (on mikrotik).
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:tik4net.Objects.TikPropertyAttribute.IsMandatory">
            <summary>
            Gets a value indicating whether this property is mandatory - should be present in loading resultset.
            </summary>
            <value><c>true</c> if mandatory; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:tik4net.Objects.TikPropertyAttribute.IsReadOnly">
            <summary>
            If the property is R/O (should not be updated during save modified entity).
            </summary>
            <value>The edit mode of property.</value>
        </member>
        <member name="P:tik4net.Objects.TikPropertyAttribute.DefaultValue">
            <summary>
            Property default value (if is different from type default).
            </summary>
        </member>
        <member name="P:tik4net.Objects.TikPropertyAttribute.UnsetOnDefault">
            <summary>
            If unset command should be called when saving modified object and marked property contains <see cref="P:tik4net.Objects.TikPropertyAttribute.DefaultValue"/> or null (set to default value will be used when false).
            </summary>
        </member>
        <member name="M:tik4net.Objects.TikPropertyAttribute.#ctor(System.String,System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:tik4net.Objects.TikPropertyAttribute"/> class.
            </summary>
            <param name="fieldName">Name of the property (on mikrotik).</param>
            <param name="isMandatory">If this property is mandatory - should be present in loading resultset</param>
            <param name="isReadOnly">If the property is R/O (should not be updated during save modified entity).</param>
            <param name="defaultValue">Property default value (if is different from type default).</param>
            <param name="unsetOnDefault">If unset command should be called when saving modified object and marked property contains <see cref="P:tik4net.Objects.TikPropertyAttribute.DefaultValue"/> or null (set to default value will be used when false).</param>
        </member>
        <member name="M:tik4net.Objects.TikPropertyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:tik4net.Objects.TikPropertyAttribute"/> class.
            </summary>
            <param name="fieldName">Name of the property (on mikrotik).</param>
        </member>
        <member name="T:tik4net.Objects.Tool.ToolPing">
            <summary>
            Ping uses Internet Control Message Protocol (ICMP) Echo messages to determine if a remote host is active or inactive and to determine the round-trip delay when communicating with it. Ping tool sends ICMP (type 8) message to the host and waits for the ICMP echo-reply (type 0). The interval between these events is called round trip. If the response (that is called pong) has not come until the end of the interval, we assume it has timed out. The second significant parameter reported is ttl (Time to Live). Is is decremented at each machine in which the packet is processed. The packet will reach its destination only when the ttl is greater than the number of routers between the source and the destination.
            Author: seho85
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolPing.SequenceNo">
            <summary>
            Sequence number
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolPing.Host">
            <summary>
            Pinged host.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolPing.TimeToLife">
            <summary>
            Time to live parameter adjustment
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolPing.Time">
            <summary>
            The ping time.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolPing.Sent">
            <summary>
            sent
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolPing.Received">
            <summary>
            received
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolPing.PacketLoss">
            <summary>
            packet-loss
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolPing.MinRtt">
            <summary>
            min-rtt
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolPing.AvgRtt">
            <summary>
            avg-rtt
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolPing.MaxRtt">
            <summary>
            max-rtt
            </summary>
        </member>
        <member name="M:tik4net.Objects.Tool.ToolPing.ToString">
            <summary>
            ToString override to make life more easy.
            </summary>
        </member>
        <member name="M:tik4net.Objects.Tool.ToolPing.Execute(tik4net.ITikConnection,System.String,System.Int32)">
            <summary>
            Pings given <see paramref="address"/>. Returns <paramref name="cnt"/> of ping results to the <paramref name="address"/>.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Tool.ToolPingConnectionExtensions">
            <summary>
            Connection extension class for <see cref="T:tik4net.Objects.Tool.ToolPing"/>
            </summary>
        </member>
        <member name="M:tik4net.Objects.Tool.ToolPingConnectionExtensions.Ping(tik4net.ITikConnection,System.String,System.Int32)">
            <summary>
            Pings given <see paramref="address"/>. Returns <paramref name="cnt"/> of ping results to the <paramref name="address"/>.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Tool.ToolTorch">
            <summary>
            /tool/torch (R/O). Should be loaded via async API.
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTorch.SrcAddress">
            <summary>
            src-address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTorch.DstAddress">
            <summary>
            dst-address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTorch.IpProtocol">
            <summary>
            ip-protocol
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTorch.SrcPort">
            <summary>
            src-port
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTorch.DstPort">
            <summary>
            dst-port
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTorch.Tx">
            <summary>
            tx
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTorch.Rx">
            <summary>
            rx
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTorch.TxPackets">
            <summary>
            tx-packets
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTorch.RxPackets">
            <summary>
            rx-packets
            </summary>
        </member>
        <member name="M:tik4net.Objects.Tool.ToolTorch.ToString">
            <summary>
            ToString override to make life more easy.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Tool.ToolTraceroute">
            <summary>
            Traceroute displays the list of the routers that packet travels through to get to a remote host. The traceroute or tracepath tool is available on practically all Unix-like operating systems and tracert on Microsoft Windows operating systems.
            Traceroute operation is based on TTL value and ICMP “Time Exceeded” message.Remember that TTL value in IP header is used to avoid routing loops.Each hop decrements TTL value by 1. If the TTL reaches zero, the packet is discarded and ICMP Time Exceeded message is sent back to the sender when this occurs.
            Initially by traceroute, the TTL value is set to 1 when next router finds a packet with TTL = 1 it sets TTL value to zero, and responds with an ICMP "time exceeded" message to the source. This message lets the source know that the packet traverses that particular router as a hop. Next time TTL value is incremented by 1 and so on.Typically, each router in the path towards the destination decrements the TTL field by one unit TTL reaches zero.
            Using this command you can see how packets travel through the network and where it may fail or slow down. Using this information you can determine the computer, router, switch or other network device that possibly causing network issues or failures.  
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTraceroute.Address">
            <summary>
            address
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTraceroute.Loss">
            <summary>
            loss
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTraceroute.Sent">
            <summary>
            sent
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTraceroute.Last">
            <summary>
            last
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTraceroute.Status">
            <summary>
            status
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTraceroute.Avg">
            <summary>
            avg
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTraceroute.Best">
            <summary>
            best
            </summary>
        </member>
        <member name="P:tik4net.Objects.Tool.ToolTraceroute.Worst">
            <summary>
            worst
            </summary>
        </member>
        <member name="M:tik4net.Objects.Tool.ToolTraceroute.Execute(tik4net.ITikConnection,System.String)">
            <summary>
            Traceroutes given <see paramref="address"/>.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Tool.ToolTracerouteConnectionExtensions">
            <summary>
            Connection extension class for <see cref="T:tik4net.Objects.Tool.ToolPing"/>
            </summary>
        </member>
        <member name="M:tik4net.Objects.Tool.ToolTracerouteConnectionExtensions.Traceroute(tik4net.ITikConnection,System.String)">
            <summary>
            Traceroutes given <see paramref="address"/>.
            </summary>
        </member>
        <member name="T:tik4net.Objects.Tool.ToolWol">
            <summary>
            This tool is introduced in RouterOS since v3.23 and can send the Wake on LAN MagicPacket to any MAC address of your choosing. If the target device supports WOL, it should wake from sleep. Secure WOL is not supported.
            
            </summary>
        </member>
        <member name="M:tik4net.Objects.Tool.ToolWol.ExecuteWol(tik4net.ITikConnection,tik4net.Objects.MacAddress,System.String)">
            <summary>
            The WOL tool will send a UDP MagicPacket to the Broadcast address with the MAC address embedded in it.
            By default, the magic packet will be sent as an IP broadcast out the default gateway interface, but if you want, you can tell the command to use a specific <paramref name="iface"/>.
            </summary>
            <param name="connection">Open connection to use.</param>
            <param name="macAddress">MAC of the waked up device</param>
            <param name="iface">Optional: interface to use</param>
        </member>
        <member name="M:tik4net.Objects.Tool.ToolWol.ExecuteWol(tik4net.ITikConnection,System.String,System.String)">
            <summary>
            The WOL tool will send a UDP MagicPacket to the Broadcast address with the MAC address embedded in it.
            By default, the magic packet will be sent as an IP broadcast out the default gateway interface, but if you want, you can tell the command to use a specific <paramref name="iface"/>.
            </summary>
            <param name="connection">Open connection to use.</param>
            <param name="macAddress">MAC of the waked up device in format FF:FF:FF:FF:FF:FF</param>
            <param name="iface">Optional: interface to use</param>
        </member>
        <member name="T:tik4net.Objects.User.User">
            <summary>
            Access to a user setting.
            </summary>
        </member>
        <member name="P:tik4net.Objects.User.User.Id">
            <summary>
            Gets the user's entry ID.
            </summary>
        </member>
        <member name="P:tik4net.Objects.User.User.Name">
            <summary>
            Gets or sets the user's name.
            </summary>
        </member>
        <member name="P:tik4net.Objects.User.User.Group">
            <summary>
            Gets or sets the group that the use is member of.
            </summary>
        </member>
        <member name="P:tik4net.Objects.User.User.LastLoggedIn">
            <summary>
            Gets the time when the user has last logged in.
            </summary>
        </member>
        <member name="P:tik4net.Objects.User.User.Disabled">
            <summary>
            Gets or sets a value indicating whether the user is disabled. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.User.User.Comment">
            <summary>
            Gets or sets a comment associated with the user. 
            </summary>
        </member>
        <member name="T:tik4net.Objects.User.UserGroup">
            <summary>
            Access to a group setting.
            </summary>
        </member>
        <member name="P:tik4net.Objects.User.UserGroup.Id">
            <summary>
            Gets the entry's ID
            </summary>
        </member>
        <member name="P:tik4net.Objects.User.UserGroup.Name">
            <summary>
            Gets or sets the group name.
            </summary>
        </member>
        <member name="P:tik4net.Objects.User.UserGroup.Policy">
            <summary>
            Gets or sets the group's policies as comma-separated list. 
            </summary>
        </member>
        <member name="P:tik4net.Objects.User.UserGroup.Skin">
            <summary>
            Gets or sets the the group's skin.
            </summary>
        </member>
        <member name="P:tik4net.Objects.User.UserGroup.Comment">
            <summary>
            Gets or sets the comment associated with the group.
            </summary>
        </member>
    </members>
</doc>
